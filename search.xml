<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS7基于Docker实现MySQL主从架构</title>
    <url>/2020/08/20/CentOS7%E5%9F%BA%E4%BA%8EDocker%E5%AE%9E%E7%8E%B0MySQL%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>﻿环境准备<br>系统：CentOS 7.2 64位<br>mysql版本：5.7</p>
<p>1.安装Docker(略）<br>2.加载mysql镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure>

<p>3.添加主从数据库的配置文件<br>##新建目录和文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;master&#x2F;cnf</span><br><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;master&#x2F;data</span><br><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;slave&#x2F;cnf</span><br><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;slave&#x2F;data</span><br><span class="line">touch &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;master&#x2F;cnf&#x2F;mysql.cnf</span><br><span class="line">touch &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;slave&#x2F;cnf&#x2F;mysql.cnf</span><br></pre></td></tr></table></figure>

<p>编辑 /usr/local/mysqlData/master/cnf/mysql.cnf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">pid-file    &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pid</span><br><span class="line">socket    &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock</span><br><span class="line">datadir    &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql</span><br><span class="line"></span><br><span class="line">symbolic-links&#x3D;0</span><br><span class="line"></span><br><span class="line">character-set-server &#x3D; utf8</span><br><span class="line">#skip-networking</span><br><span class="line">innodb_print_all_deadlocks &#x3D; 1</span><br><span class="line">max_connections &#x3D; 2000</span><br><span class="line">max_connect_errors &#x3D; 6000</span><br><span class="line">open_files_limit &#x3D; 65535</span><br><span class="line">table_open_cache &#x3D; 128</span><br><span class="line">max_allowed_packet &#x3D; 4M</span><br><span class="line">binlog_cache_size &#x3D; 1M</span><br><span class="line">max_heap_table_size &#x3D; 8M</span><br><span class="line">tmp_table_size &#x3D; 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size &#x3D; 2M</span><br><span class="line">read_rnd_buffer_size &#x3D; 8M</span><br><span class="line">sort_buffer_size &#x3D; 8M</span><br><span class="line">join_buffer_size &#x3D; 28M</span><br><span class="line">key_buffer_size &#x3D; 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size &#x3D; 8</span><br><span class="line"></span><br><span class="line">query_cache_type &#x3D; 1</span><br><span class="line">query_cache_size &#x3D; 8M</span><br><span class="line">query_cache_limit &#x3D; 2M</span><br><span class="line"></span><br><span class="line">ft_min_word_len &#x3D; 4</span><br><span class="line"></span><br><span class="line">log-bin &#x3D; mysql-bin</span><br><span class="line">server-id &#x3D; 1</span><br><span class="line">binlog_format &#x3D; mixed</span><br><span class="line"></span><br><span class="line">performance_schema &#x3D; 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"></span><br><span class="line">#lower_case_table_names &#x3D; 1</span><br><span class="line"></span><br><span class="line">interactive_timeout &#x3D; 28800</span><br><span class="line">wait_timeout &#x3D; 28800</span><br><span class="line"></span><br><span class="line"># Recommended in standard MySQL setup</span><br><span class="line"></span><br><span class="line">sql_mode&#x3D;NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER,STRICT_TRANS_TABLES</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet &#x3D; 16M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size &#x3D; 8M</span><br><span class="line">sort_buffer_size &#x3D; 8M</span><br><span class="line">read_buffer &#x3D; 4M</span><br><span class="line">write_buffer &#x3D; 4M</span><br></pre></td></tr></table></figure>

<p>编辑/usr/local/mysqlData/slave/cnf/mysql.cnf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">pid-file    &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pid</span><br><span class="line">socket    &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock</span><br><span class="line">datadir    &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql</span><br><span class="line"></span><br><span class="line">symbolic-links&#x3D;0</span><br><span class="line"></span><br><span class="line">character-set-server &#x3D; utf8</span><br><span class="line">#skip-networking</span><br><span class="line">innodb_print_all_deadlocks &#x3D; 1</span><br><span class="line">max_connections &#x3D; 2000</span><br><span class="line">max_connect_errors &#x3D; 6000</span><br><span class="line">open_files_limit &#x3D; 65535</span><br><span class="line">table_open_cache &#x3D; 128</span><br><span class="line">max_allowed_packet &#x3D; 4M</span><br><span class="line">binlog_cache_size &#x3D; 1M</span><br><span class="line">max_heap_table_size &#x3D; 8M</span><br><span class="line">tmp_table_size &#x3D; 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size &#x3D; 2M</span><br><span class="line">read_rnd_buffer_size &#x3D; 8M</span><br><span class="line">sort_buffer_size &#x3D; 8M</span><br><span class="line">join_buffer_size &#x3D; 28M</span><br><span class="line">key_buffer_size &#x3D; 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size &#x3D; 8</span><br><span class="line"></span><br><span class="line">query_cache_type &#x3D; 1</span><br><span class="line">query_cache_size &#x3D; 8M</span><br><span class="line">query_cache_limit &#x3D; 2M</span><br><span class="line"></span><br><span class="line">ft_min_word_len &#x3D; 4</span><br><span class="line"></span><br><span class="line">log-bin &#x3D; mysql-bin</span><br><span class="line">server-id &#x3D; 2</span><br><span class="line">binlog_format &#x3D; mixed</span><br><span class="line"></span><br><span class="line">performance_schema &#x3D; 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"></span><br><span class="line">#lower_case_table_names &#x3D; 1</span><br><span class="line"></span><br><span class="line">interactive_timeout &#x3D; 28800</span><br><span class="line">wait_timeout &#x3D; 28800</span><br><span class="line"></span><br><span class="line"># Recommended in standard MySQL setup</span><br><span class="line"></span><br><span class="line">sql_mode&#x3D;NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER,STRICT_TRANS_TABLES</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet &#x3D; 16M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size &#x3D; 8M</span><br><span class="line">sort_buffer_size &#x3D; 8M</span><br><span class="line">read_buffer &#x3D; 4M</span><br><span class="line">write_buffer &#x3D; 4M</span><br></pre></td></tr></table></figure>

<p>4.启用master和slave容器<br>##master容器启用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo docker run -itd -p 3307:3306 --name master -v &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;master&#x2F;cnf:&#x2F;etc&#x2F;mysql&#x2F;conf.d -v &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;master&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -e MYSQL_ROOT_PASSWORD&#x3D;123456 mysql:5.7</span><br></pre></td></tr></table></figure>

<p>##进入master容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo docker exec -it master &#x2F;bin&#x2F;bash</span><br><span class="line">root@ebc7017a58ef:&#x2F;#</span><br></pre></td></tr></table></figure>

<p>##slave容器启用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -itd -p 3308:3306 --name slave -v &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;slave&#x2F;cnf:&#x2F;etc&#x2F;mysql&#x2F;conf.d -v &#x2F;usr&#x2F;local&#x2F;mysqlData&#x2F;slave&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -e MYSQL_ROOT_PASSWORD&#x3D;123456 mysql:5.7</span><br></pre></td></tr></table></figure>

<p>5.数据库开启远程访问</p>
<p>##设置master数据库访问权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@ebc7017a58ef:&#x2F;# mysql -uroot -p123456</span><br><span class="line">mysql&gt;grant all privileges on *.* to morning@&#39;%&#39; identified by &#39;123456&#39; ;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">mysql&gt;flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure>

<p>##设置slave数据库访问权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@ee3bb51b4d14:&#x2F;# mysql -uroot -p123456</span><br><span class="line">mysql&gt;grant all privileges on *.* to morning@&#39;%&#39; identified by &#39;123456&#39;;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure>

<p>6.设置主从同步<br>##登录master数据库查看master状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000003 |      204 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br><span class="line">其中mysql-bin.000002为日志文件，后面会用到,记下来</span><br></pre></td></tr></table></figure>

<p>##配置slave</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; change master to master_host&#x3D;&#39;172.17.0.2&#39;,master_user&#x3D;&#39;morning&#39;,master_password&#x3D;&#39;123456&#39;,master_log_file&#x3D;&#39;mysql-bin.000003&#39;,master_log_pos&#x3D;204;</span><br></pre></td></tr></table></figure>

<p>##参数说明</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">master_host，master数据库的ip地址，ip可以使用docker inspect 容器名 查看</span><br><span class="line">master_user，连接master数据库的用户名</span><br><span class="line">master_password，master_user的密码</span><br></pre></td></tr></table></figure>

<p>##启动slave,slave的操作有几个，start,stop和restart</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure>

<p>##查看slave状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 172.17.0.2</span><br><span class="line">                  Master_User: morning</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 589</span><br><span class="line">               Relay_Log_File: 24e9066f3980-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 320</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 589</span><br><span class="line">              Relay_Log_Space: 534</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">                  Master_UUID: 867c7d08-d6f9-11ea-9ee8-0242ac110002</span><br><span class="line">             Master_Info_File: &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;master.info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: </span><br><span class="line">            Executed_Gtid_Set: </span><br><span class="line">                Auto_Position: 0</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>



<p>结果。master</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database morning;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create database haha;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>mysql&gt;<br>slave查看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| haha               |</span><br><span class="line">| morning            |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker报错 WARNING_ IPv4 forwarding is disabled. Networking will not work.</title>
    <url>/2020/08/22/Docker%E6%8A%A5%E9%94%99%20WARNING_%20IPv4%20forwarding%20is%20disabled.%20Networking%20will%20not%20work./</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>问题：<br>创建容器的时候报错WARNING: IPv4 forwarding is disabled. Networking will not work.<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200520150756534.png" alt="在这里插入图片描述">  </p>
<p>解决办法：</p>
<pre><code>vim  /usr/lib/sysctl.d/00-system.conf</code></pre><p>添加如下代码：</p>
<pre><code>net.ipv4.ip_forward=1</code></pre><p>重启network服务</p>
<pre><code>systemctl restart network</code></pre><p>完成以后，删除错误的容器，再次创建新容器，就不再报错了。</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200520150831701.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>VMware15.5版本启动centos黑屏无响应解决方法，关机虚拟机繁忙解决方法</title>
    <url>/2020/08/22/VMware15.5%E7%89%88%E6%9C%AC%E5%90%AF%E5%8A%A8centos%E9%BB%91%E5%B1%8F%E6%97%A0%E5%93%8D%E5%BA%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%8C%E5%85%B3%E6%9C%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B9%81%E5%BF%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p><strong>问题</strong></p>
<p>今天安装VMware后，在里面新增CentOS7虚拟机，学习云计算基础，加了几个虚拟磁盘后，一直黑屏无法启动。</p>
<p><strong>解决办法</strong></p>
<p>1、以管理员身份启动CMD命令窗口，并输入命令 “ netsh winsock reset ”，重置成功，如下图：<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200224122547322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="重置winsock网络规范"></p>
<p>2、还有时关闭显示虚拟机繁忙，无法关机<br>     1）、首先使用任务管理器强行关闭<br>    2）、进入编辑 -&gt; 首选项，勾选启用虚拟打印机，确定</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200420142613788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>接下来重启电脑就行了</strong></p>
]]></content>
  </entry>
  <entry>
    <title>IPtables中SNAT、DNAT和MASQUERADE的含义</title>
    <url>/2020/08/22/IPtables%E4%B8%ADSNAT%E3%80%81DNAT%E5%92%8CMASQUERADE%E7%9A%84%E5%90%AB%E4%B9%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>IPtables中可以灵活的做各种网络地址转换（NAT），网络地址转换主要有两种：SNAT和DNAT。</p>
<p>SNAT是source networkaddress translation的缩写，即源地址目标转换。<br>比如，多个PC机使用ADSL路由器共享上网，每个PC机都配置了内网IP，PC机访问外部网络的时候，路由器将数据包的报头中的源地址替换成路由器的ip，当外部网络的服务器比如网站web服务器接到访问请求的时候，他的日志记录下来的是路由器的ip地址，而不是pc机的内网ip，这是因为，这个服务器收到的数据包的报头里边的“源地址”，已经被替换了，所以叫做SNAT，基于源地址的地址转换。</p>
<p>DNAT是destination networkaddress translation的缩写，即目标网络地址转换，典型的应用是，有个web服务器放在内网配置内网ip，前端有个防火墙配置公网ip，互联网上的访问者使用公网ip来访问这个网站，当访问的时候，客户端发出一个数据包，这个数据包的报头里边，目标地址写的是防火墙的公网ip，防火墙会把这个数据包的报头改写一次，将目标地址改写成web服务器的内网ip，然后再把这个数据包发送到内网的web服务器上，这样，数据包就穿透了防火墙，并从公网ip变成了一个对内网地址的访问了，即DNAT，基于目标的网络地址转换。</p>
<p>MASQUERADE，地址伪装，算是snat中的一种特例，可以实现自动化的snat。</p>
<p>在iptables中有着和SNAT相近的效果，但也有一些区别，但使用SNAT的时候，出口ip的地址范围可以是一个，也可以是多个，例如：</p>
<p>如下命令表示把所有10.8.0.0网段的数据包SNAT成192.168.5.3的ip然后发出去，</p>
<p>iptables-t nat -A POSTROUTING -s 10.8.0.0/255.255.255.0 -o eth0 -j SNAT –to-source192.168.5.3</p>
<p>如下命令表示把所有10.8.0.0网段的数据包SNAT成192.168.5.3/192.168.5.4/192.168.5.5等几个ip然后发出去</p>
<p>iptables-t nat -A POSTROUTING -s 10.8.0.0/255.255.255.0 -o eth0 -j SNAT –to-source192.168.5.3-192.168.5.5</p>
<p>这就是SNAT的使用方法，即可以NAT成一个地址，也可以NAT成多个地址，但是，对于SNAT，不管是几个地址，必须明确的指定要SNAT的ip，假如当前系统用的是ADSL动态拨号方式，那么每次拨号，出口ip192.168.5.3都会改变，而且改变的幅度很大，不一定是192.168.5.3到192.168.5.5范围内的地址，这个时候如果按照现在的方式来配置iptables就会出现问题了，因为每次拨号后，服务器地址都会变化，而iptables规则内的ip是不会随着自动变化的，每次地址变化后都必须手工修改一次iptables，把规则里边的固定ip改成新的ip，这样是非常不好用的。</p>
<p>MASQUERADE就是针对这种场景而设计的，他的作用是，从服务器的网卡上，自动获取当前ip地址来做NAT。</p>
<p>比如下边的命令：</p>
<p>iptables-t nat -A POSTROUTING -s 10.8.0.0/255.255.255.0 -o eth0 -j MASQUERADE</p>
<p>如此配置的话，不用指定SNAT的目标ip了，不管现在eth0的出口获得了怎样的动态ip，MASQUERADE会自动读取eth0现在的ip地址然后做SNAT出去，这样就实现了很好的动态SNAT地址转换。</p>
]]></content>
  </entry>
  <entry>
    <title>ansible运行剧本报DEPRECATION WARNING 解决方法</title>
    <url>/2020/08/22/ansible%E8%BF%90%E8%A1%8C%E5%89%A7%E6%9C%AC%E6%8A%A5DEPRECATION%20WARNING%20%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>今天学习了企业自动化运维工具ansible，但是在运行剧本的时候总是会报错，但是不影响剧本的使用以及功能，经过查看报错信息，发现只需要在ansible的安装配置文件里加一行就可以了。</p>
<p>报错信息<br>    [root@ansible-server ansible]# ansible-playbook  install.yml</p>
<pre><code>PLAY [webservers1] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [ansible-web1]

TASK [install packages] ********************************************************
[DEPRECATION WARNING]: Invoking &quot;yum&quot; only once while using a loop via 
squash_actions is deprecated. Instead of using a loop to supply multiple items 
and specifying `name: &quot;{{ item }}&quot;`, please use `name: [&apos;httpd&apos;, &apos;php&apos;, 
&apos;nginx&apos;]` and remove the loop. This feature will be removed in version 2.11. 
Deprecation warnings can be disabled by setting deprecation_warnings=False in 
ansible.cfg.
changed: [ansible-web1] =&gt; (item=[u&apos;httpd&apos;, u&apos;php&apos;, u&apos;nginx&apos;])

PLAY RECAP *********************************************************************</code></pre><p>翻译一下就是</p>
<pre><code>[弃用警告]:在使用循环via时只调用“yum”一次

squash_actions弃用。而不是使用循环来提供多个项

并指定&apos; name: &quot;{{item}}&quot; &apos;，请使用&apos; name: [&apos;httpd&apos;， &apos;php&apos;，

&apos;nginx&apos;] &apos;并移除循环。该特性将在2.11版本中删除。

可以通过设置deprecation_warnings=False in来禁用弃用警告

ansible.cfg。</code></pre><p><strong>解决方法：</strong><br>进入配置文件<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200423120226268.png" alt="在这里插入图片描述"></p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020042312032875.png" alt="在这里插入图片描述"><br>然后在运行试一试<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200423120517888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>centos5.8配置本地yum源</title>
    <url>/2020/08/22/centos5.8%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0yum%E6%BA%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>下面记录一下我配置本地yum源的方法：</p>
<p>1、下载CentOS镜像文件（下载地址如果失败，需自己寻找）到/data/目录下；</p>
<p>wget -0 /data/ <a href="http://vault.centos.org/5.8/isos/x86_64/CentOS-5.8-x86_64-bin-DVD-1of2.iso" target="_blank" rel="noopener">http://vault.centos.org/5.8/isos/x86_64/CentOS-5.8-x86_64-bin-DVD-1of2.iso</a><br>2、挂载镜像文件</p>
<p>mount -o loop CentOS-5.8-x86_64-bin-DVD-1of2.iso /mnt/<br>3、修改yum配置文件<br>vi /etc/yum.repos.d/CentOS-Base.repo<br>[base]<br>name=CentOS-$releasever - Base<br>baseurl=file:///mnt/<br>gpgcheck=0<br>4、<br>yum clean all<br>yum makecache</p>
]]></content>
  </entry>
  <entry>
    <title>centos7.4升级内核3.x到4.x，使用yum安装的方式</title>
    <url>/2020/08/22/centos7.4%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B83.x%E5%88%B04.x%EF%BC%8C%E4%BD%BF%E7%94%A8yum%E5%AE%89%E8%A3%85%E7%9A%84%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>1、centos版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cat &#x2F;etc&#x2F;redhat-release </span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br></pre></td></tr></table></figure>
<p>2、导入elrepo的key，然后安装elrepo的yum源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# rpm -import https:&#x2F;&#x2F;www.elrepo.org&#x2F;RPM-GPG-KEY-elrepo.org</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# rpm -Uvh http:&#x2F;&#x2F;www.elrepo.org&#x2F;elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">获取http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br><span class="line">获取http://elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:elrepo-release-7.0-4.el7.elrepo  <span class="comment">################################# [100%]</span></span><br></pre></td></tr></table></figure>
<p>3、列出可升级的内核</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum --disablerepo="*" --enablerepo="elrepo-kernel" list available</span></span><br><span class="line"> </span><br><span class="line">已加载插件：fastestmirror</span><br><span class="line">elrepo-kernel                                                 | 2.9 kB  00:00:00     </span><br><span class="line">elrepo-kernel/primary_db                                      | 1.9 MB  00:00:09     </span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * elrepo-kernel: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">可安装的软件包</span><br><span class="line">elrepo-release.noarch                     7.0-5.el7.elrepo              elrepo-kernel</span><br><span class="line">kernel-lt.x86_64                          4.4.232-1.el7.elrepo          elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-devel.x86_64                    4.4.232-1.el7.elrepo          elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-doc.noarch                      4.4.232-1.el7.elrepo          elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-headers.x86_64                  4.4.232-1.el7.elrepo          elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools.x86_64                    4.4.232-1.el7.elrepo          elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs.x86_64               4.4.232-1.el7.elrepo          elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs-devel.x86_64         4.4.232-1.el7.elrepo          elrepo-kernel</span><br><span class="line">kernel-ml.x86_64                          5.8.0-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-ml-devel.x86_64                    5.8.0-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-ml-doc.noarch                      5.8.0-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-ml-headers.x86_64                  5.8.0-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-ml-tools.x86_64                    5.8.0-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs.x86_64               5.8.0-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs-devel.x86_64         5.8.0-1.el7.elrepo            elrepo-kernel</span><br><span class="line">perf.x86_64                               5.8.0-1.el7.elrepo            elrepo-kernel</span><br><span class="line">python-perf.x86_64                        5.8.0-1.el7.elrepo            elrepo-kernel</span><br></pre></td></tr></table></figure>
<p>4、如图可以看出，长期维护版本lt为4.4，最新主线稳定版ml为5.8，我们安装长期维护版本内核，使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y --enablerepo=elrepo-kernel install kernel-lt.x86_64  kernel-lt-devel.x86_64 </span></span><br><span class="line">已加载插件：fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirror.bit.edu.cn</span><br><span class="line"> * elrepo: mirrors.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>
<p>5、查看内核默认启动顺序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk -F\' '$1=="menuentry " &#123;print $2&#125;' /etc/grub2.cfg</span></span><br><span class="line">CentOS Linux (4.4.232-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (0-rescue-61e6672250f14dc4bb5130e77f9f621b) 7 (Core)</span><br></pre></td></tr></table></figure>
<p>如上，4.4版本内核目前位置为0，原来的3.10版本内核目前位置为1，所以需要修改内核启动顺序为0。<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808165505107.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/default/grub</span></span><br><span class="line"></span><br><span class="line">原本的GRUB_DEFAULT=saved改为GRUB_0=saved</span><br></pre></td></tr></table></figure>
<p>运行grub2-mkconfig命令来重新创建内核配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-4.4.232-1.el7.elrepo.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-4.4.232-1.el7.elrepo.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-0-rescue-61e6672250f14dc4bb5130e77f9f621b</span><br><span class="line">Found initrd image: /boot/initramfs-0-rescue-61e6672250f14dc4bb5130e77f9f621b.img</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>6、重启</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808165626822.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808165851599.png" alt="在这里插入图片描述"><br>可以更新一下，到此内核升级完成<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808165932175.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>centos7中安装php7.2</title>
    <url>/2020/08/22/centos7%E4%B8%AD%E5%AE%89%E8%A3%85php7.2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>1、 <strong>安装php的yum源</strong></p>
<pre><code>方法一：

rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm

方法二：

yum install epel-release -y
rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></pre><p>2、<strong>清理旧的php</strong></p>
<pre><code>yum -y remove php*</code></pre><p>3、<strong>查看可以安装的php版本</strong></p>
<pre><code>yum list php*</code></pre><p>4、<strong>安装php以及扩展</strong></p>
<pre><code>yum -y install php72w php72w-cli php72w-fpm php72w-common php72w-devel php72w-embedded php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml</code></pre><p><strong>5、开启php</strong></p>
<pre><code>systemctl start php-fpm
systemctl enable php-fpm</code></pre>]]></content>
  </entry>
  <entry>
    <title>centos7中搭建的nextcloud 登陆不了，填写密码后登陆没反应解决办法</title>
    <url>/2020/08/22/centos7%E4%B8%AD%E6%90%AD%E5%BB%BA%E7%9A%84nextcloud%20%E7%99%BB%E9%99%86%E4%B8%8D%E4%BA%86%EF%BC%8C%E5%A1%AB%E5%86%99%E5%AF%86%E7%A0%81%E5%90%8E%E7%99%BB%E9%99%86%E6%B2%A1%E5%8F%8D%E5%BA%94%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p><strong>原因：</strong><br>web、php nginx 和/var/lib/php/session/不是同一个用户<br><strong>路径：</strong><br>/var/lib/php/session/</p>
<p><strong>解决方法：</strong><br>将session文件夹属主改为你的web服务器，nginx或者是apache<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200615133641415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>重启apache就可以登入了。</p>
]]></content>
  </entry>
  <entry>
    <title>centos7使用静默安装weblogic</title>
    <url>/2020/08/22/centos7%E4%BD%BF%E7%94%A8%E9%9D%99%E9%BB%98%E5%AE%89%E8%A3%85weblogic/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="weblogic介绍"><a href="#weblogic介绍" class="headerlink" title="weblogic介绍"></a>weblogic介绍</h2><p>​        WebLogic是美国Oracle公司出品的一个application server，确切的说是一个基于JAVAEE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。</p>
<p>​        WebLogic是美商Oracle的主要产品之一，是并购BEA得来。是商业市场上主要的Java（J2EE）应用服务器软件（application server）之一，是世界上第一个成功商业化的J2EE应用服务器, 已推出到12c(12.2.1.4) 版。而此产品也延伸出WebLogic Portal，WebLogic Integration等企业用的中间件（但当下Oracle主要以Fusion Middleware融合中间件来取代这些WebLogic Server之外的企业包），以及OEPE(Oracle Enterprise Pack for Eclipse)开发工具。</p>
<p>​        WebLogic Server凭借其出色的群集技术，拥有处理关键Web应用系统问题所需的性能、可扩展性和高可用性。WebLogic Server既实现了网页群集，也实现了EJB组件 群集，而且不需要任何专门的硬件或操作系统支持。网页群集可以实现透明的复制、负载平衡以及表示内容容错 。无论是网页群集，还是组件群集，对于电子商务解决方案所要求的可扩展性和可用性都是至关重要的。共享的客户机/服务器和数据库连接以及数据缓存和EJB都增强了性能表现。这是其它Web应用系统所不具备的。所以，在扩展性方面WebLogic是远远超越了Tomcat。</p>
<h1 id="weblogic搭建"><a href="#weblogic搭建" class="headerlink" title="weblogic搭建"></a>weblogic搭建</h1><p>注意：无法使用root用户进行安装，需要自行创建用户。</p>
<h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><p>centos7.4</p>
<p>下载weblogic安装包以及jdk安装包</p>
<p>weblogic官网地址：<a href="https://www.oracle.com/middleware/technologies/weblogic-server-installers-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/middleware/technologies/weblogic-server-installers-downloads.html</a></p>
<p>jdk官网：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></p>
<p>weblogic版本：fmw_12.2.1.4.0_wls_Disk1_1of1</p>
<p>jdk版本：jdk-8u211-linux-x64</p>
<h2 id="二、jdk安装"><a href="#二、jdk安装" class="headerlink" title="二、jdk安装"></a>二、jdk安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@weblogic1 ~]# tar xzf jdk-8u211-linux-x64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;</span><br><span class="line">[root@weblogic1 ~]# cd &#x2F;usr&#x2F;local&#x2F;</span><br><span class="line">[root@weblogic1 local]# mv jdk1.8.0_211&#x2F; java</span><br><span class="line">设置环境变量:</span><br><span class="line">[root@weblogic1 local]# vim &#x2F;etc&#x2F;profile</span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java</span><br><span class="line">export PATH&#x3D;$JAVA_HOME&#x2F;bin:$JAVA_HOME&#x2F;jre&#x2F;bin:$PATH</span><br><span class="line">[root@weblogic1 local]# source &#x2F;etc&#x2F;profile</span><br><span class="line">[root@weblogic1 local]# java -version</span><br><span class="line">java version &quot;1.8.0_211&quot;</span><br></pre></td></tr></table></figure>

<h2 id="三、安装weblogic"><a href="#三、安装weblogic" class="headerlink" title="三、安装weblogic"></a>三、安装weblogic</h2><h4 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h4><p>1、创建用户和组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># useradd  weblogic &#x2F;&#x2F;创建用户以及组</span><br><span class="line"></span><br><span class="line"># passwd weblogic &#x2F;&#x2F;修改用户密码</span><br></pre></td></tr></table></figure>



<h4 id="二、开始安装"><a href="#二、开始安装" class="headerlink" title="二、开始安装"></a>二、开始安装</h4><h5 id="1、创建ORACLE-HOME"><a href="#1、创建ORACLE-HOME" class="headerlink" title="1、创建ORACLE_HOME"></a>1、创建ORACLE_HOME</h5><p>使用root账户创建目录，并将所有权赋予weblogic</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># mkdir -p &#x2F;weblogic&#x2F;bea</span><br><span class="line"></span><br><span class="line"># chown -R weblogic .weblogic &#x2F;weblogic</span><br><span class="line"></span><br><span class="line">#chmod 777 &#x2F;weblogic&#x2F;bea</span><br></pre></td></tr></table></figure>



<h5 id="2、创建目录，并将安装包复制到目录下"><a href="#2、创建目录，并将安装包复制到目录下" class="headerlink" title="2、创建目录，并将安装包复制到目录下"></a>2、创建目录，并将安装包复制到目录下</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># cp &#x2F;root&#x2F;fmw_12.2.1.3.0_wls.jar   &#x2F;home&#x2F;weblogic</span><br><span class="line"></span><br><span class="line">\# su weblogic</span><br><span class="line"></span><br><span class="line">\# cd</span><br></pre></td></tr></table></figure>

<h5 id="3、创建wls-rsp和oraInst-loc文件"><a href="#3、创建wls-rsp和oraInst-loc文件" class="headerlink" title="3、创建wls.rsp和oraInst.loc文件"></a>3、创建wls.rsp和oraInst.loc文件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vim wls.rsp</span><br></pre></td></tr></table></figure>

<p>wls.rsp文件内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ENGINE]</span><br><span class="line">#DO NOT CHANGE THIS.</span><br><span class="line">Response File Version&#x3D;1.0.0.0.0</span><br><span class="line"></span><br><span class="line">[GENERIC]</span><br><span class="line">#The oracle home location. This can be an existing Oracle Home or a new Oracle Home</span><br><span class="line"></span><br><span class="line">ORACLE_HOME&#x3D;&#x2F;weblogic&#x2F;bea</span><br><span class="line"></span><br><span class="line">#Set this variable value to the Installation Type selected. e.g. WebLogic Server, Coherence, Complete with Examples.</span><br><span class="line"></span><br><span class="line">INSTALL_TYPE&#x3D;WebLogic Server</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim  oraInst.loc</span><br></pre></td></tr></table></figure>

<p>oraInst.loc文件内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inventory_loc&#x3D;&#x2F;home&#x2F;weblogic&#x2F;oraInventory</span><br><span class="line"></span><br><span class="line">inst_group&#x3D;weblogic</span><br></pre></td></tr></table></figure>

<p><strong>注意：确保 oraInst.loc wls.rsp fmw_12.2.1.4.0_wls.jar 三个文件weblogic用户必须要有读写权限</strong></p>
<h5 id="4、开始安装"><a href="#4、开始安装" class="headerlink" title="4、开始安装"></a>4、开始安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># java -jar fmw_12.2.1.4.0_wls.jar -silent -responseFile &#x2F;home&#x2F;weblogic&#x2F;wls.rsp -invPtrLoc &#x2F;home&#x2F;weblogic&#x2F;oraInst.loc ORACLE_HOME&#x3D;&quot;&#x2F;weblogic&#x2F;bea&quot;</span><br></pre></td></tr></table></figure>

<h5 id="5、设置环境变量"><a href="#5、设置环境变量" class="headerlink" title="5、设置环境变量"></a>5、设置环境变量</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># sh &#x2F;weblogic&#x2F;bea&#x2F;wlserver&#x2F;server&#x2F;bin&#x2F;setWLSEnv.sh   &#x2F;&#x2F;实际效果与之前jdk设置类似</span><br></pre></td></tr></table></figure>

<h5 id="6、创建Domain域名"><a href="#6、创建Domain域名" class="headerlink" title="6、创建Domain域名"></a>6、创建Domain域名</h5><p>有两种方式</p>
<p>​    方式1：通过命令行交互创建</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[weblogic@localhost bea]$ cd &#x2F;weblogic&#x2F;bea&#x2F;wlserver&#x2F;common&#x2F;bin</span><br><span class="line">[weblogic@localhost bin]$ .&#x2F;wlst.sh </span><br><span class="line">WARNING: This is a deprecated script. Please invoke the wlst.sh script under oracle_common&#x2F;common&#x2F;bin.</span><br><span class="line"></span><br><span class="line">Initializing WebLogic Scripting Tool (WLST) ...</span><br><span class="line"></span><br><span class="line">Jython scans all the jar files it can find at first startup. Depending on the system, this process may take a few minutes to complete, and WLST may not return a prompt right away.</span><br><span class="line"></span><br><span class="line">Welcome to WebLogic Server Administration Scripting Shell</span><br><span class="line"></span><br><span class="line">Type help() for help on available commands</span><br><span class="line"></span><br><span class="line">wls:&#x2F;offline&gt; readTemplate(&#39;&#x2F;weblogic&#x2F;bea&#x2F;wlserver&#x2F;common&#x2F;templates&#x2F;wls&#x2F;wls.jar&#39;)</span><br><span class="line">WARNING: The readTemplate is deprecated. Use selectTemplate followed by loadTemplates in place of readTemplate.</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&gt;cd(&#39;Servers&#x2F;AdminServer&#39;)</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&#x2F;Server&#x2F;AdminServer&gt;set(&#39;ListenAddress&#39;,&#39;&#39;)</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&#x2F;Server&#x2F;AdminServer&gt;set(&#39;ListenPort&#39;,7001)</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&#x2F;Server&#x2F;AdminServer&gt;cd(&#39;..&#x2F;..&#39;)</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&gt;cd(&#39;Security&#x2F;base_domain&#x2F;User&#x2F;weblogic&#39;)</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&#x2F;Security&#x2F;base_domain&#x2F;User&#x2F;weblogic&gt;cmo.setPassword(&#39;weblogic123&#39;)</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&#x2F;Security&#x2F;base_domain&#x2F;User&#x2F;weblogic&gt;setOption(&#39;OverwriteDomain&#39;,&#39;true&#39;)</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&#x2F;Security&#x2F;base_domain&#x2F;User&#x2F;weblogic&gt;writeDomain(&#39;&#x2F;weblogic&#x2F;bea&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#39;)</span><br><span class="line">wls:&#x2F;offline&#x2F;base_domain&#x2F;Security&#x2F;base_domain&#x2F;User&#x2F;weblogic&gt;closeTemplate()</span><br><span class="line">wls:&#x2F;offline&gt;exit()</span><br><span class="line"></span><br><span class="line">Exiting WebLogic Scripting Tool.</span><br></pre></td></tr></table></figure>

<p>​    方式2：通过py脚本来创建</p>
<p>创建create_domains.py,添加内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">readTemplate(&#39;&#x2F;weblogic&#x2F;bea&#x2F;wlserver&#x2F;common&#x2F;templates&#x2F;wls&#x2F;wls.jar&#39;)</span><br><span class="line">cd(&#39;Servers&#x2F;AdminServer&#39;)</span><br><span class="line">set(&#39;ListenAddress&#39;,&#39;ip地址&#39;)</span><br><span class="line">set(&#39;ListenPort&#39;, 7001)cd(&#39;..&#x2F;..&#39;)</span><br><span class="line">cd(&#39;&#x2F;Security&#x2F;base_domain&#x2F;User&#x2F;weblogic&#39;)</span><br><span class="line">cmo.setPassword(&#39;weblogic123&#39;)</span><br><span class="line">setOption(&#39;OverwriteDomain&#39;, &#39;true&#39;)</span><br><span class="line">setOption(&#39;ServerStartMode&#39;, &#39;prod&#39;)</span><br><span class="line">writeDomain(&#39;&#x2F;weblogic&#x2F;bea&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#39;)</span><br><span class="line">closeTemplate()</span><br><span class="line">exit()</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">执行安装 .&#x2F;wlst.sh  .&#x2F;create_domains.py</span><br></pre></td></tr></table></figure>

<h5 id="7、启动weblogic服务"><a href="#7、启动weblogic服务" class="headerlink" title="7、启动weblogic服务"></a>7、启动weblogic服务</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[weblogic@localhost bin]$ cd &#x2F;weblogic&#x2F;bea&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;bin&#x2F;</span><br><span class="line">[weblogic@localhost bin]$ .&#x2F;startWebLogic.sh</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA Memory arguments: -Xms256m -Xmx512m -XX:CompileThreshold&#x3D;8000</span><br><span class="line">.</span><br><span class="line">CLASSPATH&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;lib&#x2F;tools.jar:&#x2F;home&#x2F;weblogic&#x2F;weblogic_install_dir&#x2F;wls12213&#x2F;wlserver&#x2F;server&#x2F;lib&#x2F;weblogic.jar:&#x2F;home&#x2F;weblogic&#x2F;weblogic_install_dir&#x2F;wls12213&#x2F;wlserver&#x2F;..&#x2F;oracle_common&#x2F;modules&#x2F;thirdparty&#x2F;ant-contrib-1.0b3.jar:&#x2F;home&#x2F;weblogic&#x2F;weblogic_install_dir&#x2F;wls12213&#x2F;wlserver&#x2F;modules&#x2F;features&#x2F;oracle.wls.common.nodemanager.jar::&#x2F;home&#x2F;weblogic&#x2F;weblogic_install_dir&#x2F;wls12213&#x2F;wlserver&#x2F;common&#x2F;derby&#x2F;lib&#x2F;derbynet.jar:&#x2F;home&#x2F;weblogic&#x2F;weblogic_install_dir&#x2F;wls12213&#x2F;wlserver&#x2F;common&#x2F;derby&#x2F;lib&#x2F;derbyclient.jar:&#x2F;home&#x2F;weblogic&#x2F;weblogic_install_dir&#x2F;wls12213&#x2F;wlserver&#x2F;common&#x2F;derby&#x2F;lib&#x2F;derby.jar:.:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;lib:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;jre&#x2F;lib</span><br><span class="line">.</span><br><span class="line">PATH&#x3D;&#x2F;weblogic&#x2F;bea&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;bin:&#x2F;home&#x2F;weblogic&#x2F;weblogic_install_dir&#x2F;wls12213&#x2F;wlserver&#x2F;server&#x2F;bin:&#x2F;home&#x2F;weblogic&#x2F;weblogic_install_dir&#x2F;wls12213&#x2F;wlserver&#x2F;..&#x2F;oracle_common&#x2F;modules&#x2F;thirdparty&#x2F;org.apache.ant&#x2F;1.9.8.0.0&#x2F;apache-ant-1.9.8&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;jre&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_161&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;root&#x2F;bin</span><br><span class="line">.</span><br><span class="line">***************************************************</span><br><span class="line">*  To start WebLogic Server, use a username and   *</span><br><span class="line">*  password assigned to an admin-level user.  For *</span><br><span class="line">*  server administration, use the WebLogic Server *</span><br><span class="line">*  console at http:&#x2F;&#x2F;hostname:port&#x2F;console        *</span><br><span class="line">***************************************************</span><br><span class="line">Starting WLS with line:</span><br><span class="line"></span><br><span class="line">········中间省略</span><br><span class="line"></span><br><span class="line">Oracle Coherence Version 12.2.1.4.0 Build 74888</span><br><span class="line"> Grid Edition: Development mode</span><br><span class="line">Copyright (c) 2000, 2019, Oracle and&#x2F;or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">2020-06-17 20:16:33.141&#x2F;10.411 Oracle Coherence GE 12.2.1.4.0 &lt;Info&gt; (thread&#x3D;[STANDBY] ExecuteThread: &#39;10&#39; for queue: &#39;weblogic.kernel.Default (self-tuning)&#39;, member&#x3D;n&#x2F;a): Configured versioned, multi-cluster Management over ReST</span><br></pre></td></tr></table></figure>

<h5 id="8、验证"><a href="#8、验证" class="headerlink" title="8、验证"></a>8、验证</h5><p><code>http://IP:7001/console</code></p>
<p>账户密码在之前的第六步设置</p>
<p><strong>账号：weblogic</strong></p>
<p><strong>密码：weblogic123</strong></p>
<p>实际环境中可以配置免密登录等，可自行摸索</p>
]]></content>
  </entry>
  <entry>
    <title>centos7对根分区进行扩容</title>
    <url>/2020/08/22/centos7%E5%AF%B9%E6%A0%B9%E5%88%86%E5%8C%BA%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>查看本机磁盘环境</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# df -h</span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">&#x2F;dev&#x2F;mapper&#x2F;centos-root   35G  5.5G   30G   16% &#x2F;</span><br><span class="line">devtmpfs                 3.9G     0  3.9G    0% &#x2F;dev</span><br><span class="line">tmpfs                    3.9G     0  3.9G    0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs                    3.9G   11M  3.9G    1% &#x2F;run</span><br><span class="line">tmpfs                    3.9G     0  3.9G    0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;sda1               1014M  275M  740M   28% &#x2F;boot</span><br><span class="line">tmpfs                    783M   52K  783M    1% &#x2F;run&#x2F;user&#x2F;0</span><br><span class="line">[root@localhost ~]# lsblk</span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">fd0               2:0    1    4K  0 disk</span><br><span class="line">sda               8:0    0  500G  0 disk</span><br><span class="line">├─sda1            8:1    0    1G  0 part &#x2F;boot</span><br><span class="line">└─sda2            8:2    0   39G  0 part</span><br><span class="line">  ├─centos-root 253:0    0   35G  0 lvm  &#x2F;</span><br><span class="line">  └─centos-swap 253:1    0    4G  0 lvm  [SWAP]</span><br></pre></td></tr></table></figure>

<p>可以看到根目录总容量为35G, 设备sda 的总容量为500G。</p>
<p>添加磁盘分区<br>需要120G 容量，已有35G, 还需添加85G 容量。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# fdisk &#x2F;dev&#x2F;sda</span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (2 primary, 0 extended, 2 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p):</span><br><span class="line">Using default response p</span><br><span class="line">分区号 (3,4，默认 3)：</span><br><span class="line">起始 扇区 (83886080-1048575999，默认为 83886080)：</span><br><span class="line">将使用默认值 83886080</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (83886080-1048575999，默认为 1048575999)：+85G</span><br><span class="line">分区 3 已设置为 Linux 类型，大小设为 85 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br></pre></td></tr></table></figure>

<p>[root@localhost ~]# partprobe<br>然后查看分区是否创建：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# lsblk</span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">fd0               2:0    1    4K  0 disk</span><br><span class="line">sda               8:0    0  500G  0 disk</span><br><span class="line">├─sda1            8:1    0    1G  0 part &#x2F;boot</span><br><span class="line">├─sda2            8:2    0   39G  0 part</span><br><span class="line">│ ├─centos-root 253:0    0   35G  0 lvm  &#x2F;</span><br><span class="line">│ └─centos-swap 253:1    0    4G  0 lvm  [SWAP]</span><br><span class="line">└─sda3            8:3    0   85G  0 part</span><br><span class="line">sr0              11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure>
<p>可以看到sda3分区已创建。<br>开始扩容<br>创建物理卷：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# lvm</span><br><span class="line">lvm&gt; pvcreate &#x2F;dev&#x2F;sda3</span><br><span class="line">  Physical volume &quot;&#x2F;dev&#x2F;sda3&quot; successfully created.</span><br><span class="line">查看物理卷和卷组：</span><br><span class="line">lvm&gt; pvdisplay</span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               &#x2F;dev&#x2F;sda2</span><br><span class="line">  VG Name               centos</span><br><span class="line">  PV Size               &lt;39.00 GiB &#x2F; not usable 3.00 MiB Allocatable yes (but full) PE Size 4.00 MiB Total PE 9983 Free PE 0 Allocated PE 9983 PV UUID twmUZh-Vnqq-W5Pd-v3ms-6OkH-sSTs-nv8aA8 &quot;&#x2F;dev&#x2F;sda3&quot; is a new physical volume of &quot;85.00 GiB&quot; --- NEW Physical volume --- PV Name &#x2F;dev&#x2F;sda3 VG Name PV Size 85.00 GiB Allocatable NO PE Size 0 Total PE 0 Free PE 0 Allocated PE 0 PV UUID vTD91f-b28E-GgL0-XsqI-ipQ5-rscT-GcQbT6 lvm&gt; vgdisplay</span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  3</span><br><span class="line">  VG Access             read&#x2F;write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               &lt;39.00 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              9983</span><br><span class="line">  Alloc PE &#x2F; Size       9983 &#x2F; &lt;39.00 GiB</span><br><span class="line">  Free  PE &#x2F; Size       0 &#x2F; 0</span><br><span class="line">  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf</span><br></pre></td></tr></table></figure>
<p>将物理卷加入到卷组：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lvm&gt; vgextend centos &#x2F;dev&#x2F;sda3</span><br><span class="line">  Volume group &quot;centos&quot; successfully extended</span><br><span class="line">lvm&gt; vgdisplay</span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        2</span><br><span class="line">  Metadata Sequence No  4</span><br><span class="line">  VG Access             read&#x2F;write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                2</span><br><span class="line">  Act PV                2</span><br><span class="line">  VG Size               123.99 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              31742</span><br><span class="line">  Alloc PE &#x2F; Size       9983 &#x2F; &lt;39.00 GiB</span><br><span class="line">  Free  PE &#x2F; Size       21759 &#x2F; &lt;85.00 GiB</span><br><span class="line">  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf</span><br></pre></td></tr></table></figure>
<p>可以看到卷组的Free size 增加了<br>将卷组剩余空间(刚添加的85G)添加到逻辑卷/dev/centos/root :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lvm&gt; lvextend -l +100%FREE &#x2F;dev&#x2F;centos&#x2F;root</span><br><span class="line">  Size of logical volume centos&#x2F;root changed from &lt;35.00 GiB (8959 extents) to 119.99 GiB (30718 extents).</span><br><span class="line">  Logical volume centos&#x2F;root successfully resized.</span><br></pre></td></tr></table></figure>
<p>同步到文件系统<br>之前只是对逻辑卷扩容，还要同步到文件系统，实现对根目录的扩容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# xfs_growfs &#x2F;dev&#x2F;centos&#x2F;root</span><br><span class="line">meta-data&#x3D;&#x2F;dev&#x2F;mapper&#x2F;centos-root isize&#x3D;512    agcount&#x3D;4, agsize&#x3D;2293504 blks</span><br><span class="line">         &#x3D;                       sectsz&#x3D;512   attr&#x3D;2, projid32bit&#x3D;1</span><br><span class="line">         &#x3D;                       crc&#x3D;1        finobt&#x3D;0 spinodes&#x3D;0</span><br><span class="line">data     &#x3D;                       bsize&#x3D;4096   blocks&#x3D;9174016, imaxpct&#x3D;25</span><br><span class="line">         &#x3D;                       sunit&#x3D;0      swidth&#x3D;0 blks</span><br><span class="line">naming   &#x3D;version 2              bsize&#x3D;4096   ascii-ci&#x3D;0 ftype&#x3D;1</span><br><span class="line">log      &#x3D;internal               bsize&#x3D;4096   blocks&#x3D;4479, version&#x3D;2</span><br><span class="line">         &#x3D;                       sectsz&#x3D;512   sunit&#x3D;0 blks, lazy-count&#x3D;1</span><br><span class="line">realtime &#x3D;none                   extsz&#x3D;4096   blocks&#x3D;0, rtextents&#x3D;0</span><br><span class="line">data blocks changed from 9174016 to 31455232</span><br></pre></td></tr></table></figure>
<p>然后再查看挂载情况：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# df -h</span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">&#x2F;dev&#x2F;mapper&#x2F;centos-root  120G  5.5G  115G    5% &#x2F;</span><br><span class="line">devtmpfs                 3.9G     0  3.9G    0% &#x2F;dev</span><br><span class="line">tmpfs                    3.9G     0  3.9G    0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs                    3.9G   11M  3.9G    1% &#x2F;run</span><br><span class="line">tmpfs                    3.9G     0  3.9G    0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;sda1               1014M  275M  740M   28% &#x2F;boot</span><br><span class="line">tmpfs                    783M   52K  783M    1% &#x2F;run&#x2F;user&#x2F;0</span><br></pre></td></tr></table></figure>
<p>可以发现有120G的空间挂载在根目录上。</p>
]]></content>
  </entry>
  <entry>
    <title>dcoker下载镜像老是超时，可以配置阿里加速器解决</title>
    <url>/2020/08/22/dcoker%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F%E8%80%81%E6%98%AF%E8%B6%85%E6%97%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E5%8A%A0%E9%80%9F%E5%99%A8%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>配置镜像加速器<br>针对Docker客户端版本大于 1.10.0 的用户<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200520153100936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>您可以通过修改daemon配置文件/etc/docker/daemon.json来使用加速器</p>
<pre><code>sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json &lt;&lt;-&apos;EOF&apos;
{
  &quot;registry-mirrors&quot;: [&quot;https://k5sw1fed.mirror.aliyuncs.com&quot;]
}
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker</code></pre>]]></content>
  </entry>
  <entry>
    <title>docker中CMD与ENTRYPOINT区别</title>
    <url>/2020/08/22/docker%E4%B8%ADCMD%E4%B8%8EENTRYPOINT%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">一、dockerfile中的 CMD</span><br><span class="line"></span><br><span class="line">1、每个dockerfile中只能有一个CMD如果有多个那么只执行最后一个。</span><br><span class="line">2、CMD 相当于启动docker时候后面添加的参数看，举个简单例子：</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker run -itd --name <span class="built_in">test</span> image(镜像) /bin/bash -c</span></span><br><span class="line">a、镜像名称后面跟了一个/bin/bash -c ，其实等价于在dockerfile中的CMD ["/bin/bash","-c"]。</span><br><span class="line">b、如果dockerfile中的CMD中有了CMD["/bin/bash","-c"],那么就不用在执行的时候再添加了，如果添加了参数的话那么就相当于要执行你添加的参数，默认的CMD中的参数就无效了。</span><br><span class="line"></span><br><span class="line">二、dockerfile中的ENTRYPOINT</span><br><span class="line">1、一个dockerfile中ENTRYPOINT也只能存在一个，若存在多个那么只执行最后一个，你可以理解为开机启动的意思，和CMD有点像，不过还是有区别。</span><br><span class="line"></span><br><span class="line">2、举个简单例子：</span><br><span class="line">a、dockerfile中有ENTRYPOINT ["tail","-f","/var/log/nginx/access.log"]，那么启动的时候镜像就执行了这个里面的内容，如果你像上面带参数的话就相当于在这个执行的内容后面再加入参数。</span><br><span class="line">案例:</span><br><span class="line">如果我们的dockerfile中有a中的这句话然后我们启动我们的docker:</span><br><span class="line"><span class="meta">#</span><span class="bash">docker run -itd --name <span class="built_in">test</span> image(镜像名) /bin/bash -c</span></span><br><span class="line"></span><br><span class="line">此时就相当于我们启动docker的时候执行了：tail -f /var/log/nginx/access.log /bin/bash -c</span><br><span class="line">这个命令明显就不对.</span><br></pre></td></tr></table></figure>

<h2 id="dockerfile优化"><a href="#dockerfile优化" class="headerlink" title="dockerfile优化"></a>dockerfile优化</h2><p>编译一个简单的nginx成功以后发现好几百M。</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、RUN 命令要尽量写在一条里，每次 RUN 命令都是在之前的镜像上封装，只会增大不会减小</span><br><span class="line"></span><br><span class="line">2、每次进行依赖安装后，记得yum clean all【centos】 </span><br><span class="line"><span class="meta">#</span><span class="bash">yum clean all 清除缓存中的rpm头文件和包文件</span></span><br><span class="line"></span><br><span class="line">3、选择比较小的基础镜像。alpine</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>docker容器内安装vim</title>
    <url>/2020/08/22/docker%E5%AE%B9%E5%99%A8%E5%86%85%E5%AE%89%E8%A3%85vim/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>在使用docker容器时，有时候里边没有安装vim，敲vim命令时提示说：vim: command not found，这个时候就需要安装vim，可是当你敲apt-get install vim命令时，提示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">E: Unable to locate package vim</span><br></pre></td></tr></table></figure>

<p>这时候需要敲：<code>apt-get update</code>，这个命令的作用是：同步 /etc/apt/sources.list 和 /etc/apt/sources.list.d 中列出的源的索引，这样才能获取到最新的软件包。<br>等更新完毕以后再敲命令：<code>apt-get install vim</code>命令即可。</p>
]]></content>
  </entry>
  <entry>
    <title>k8s二进制安装方式，所有组件都已经启动成功，通过kubectl工具查看当前集群组件状态报错</title>
    <url>/2020/08/22/k8s%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F%EF%BC%8C%E6%89%80%E6%9C%89%E7%BB%84%E4%BB%B6%E9%83%BD%E5%B7%B2%E7%BB%8F%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F%EF%BC%8C%E9%80%9A%E8%BF%87kubectl%E5%B7%A5%E5%85%B7%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E9%9B%86%E7%BE%A4%E7%BB%84%E4%BB%B6%E7%8A%B6%E6%80%81%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@k8s-master1 ~]# &#x2F;opt&#x2F;kubernetes&#x2F;bin&#x2F;kubectl get cs</span><br><span class="line">error: no configuration has been provided, try setting KUBERNETES_MASTER environment variable</span><br></pre></td></tr></table></figure>
<p>显示无环境变量，进入？/etc/profile<br>添加<code>export KUBERNETES_MASTER=&quot;127.0.0.1:8080&quot;</code><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200626142636556.png" alt="在这里插入图片描述"></p>
<p>再次查看<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200626142706882.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>k8s部署etcd时，解决有一个节点无法启动的问题</title>
    <url>/2020/08/22/k8s%E9%83%A8%E7%BD%B2etcd%E6%97%B6%EF%BC%8C%E8%A7%A3%E5%86%B3%E6%9C%89%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>问题：<br>之前做好了etcd部署，然后做完快照，重启后发现有一个节点一直启动不了<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200626113338539.png" alt="在这里插入图片描述"><br>查看日志发现是由于虚拟环境内的时间不同不造成的<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200626113025258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解决方法;<br>删除所有etcd节点的 data-dir 文件，重启各个节点的etcd服务，这个时候，每个节点的data-dir的数据都会被更新，就不会有以上故障了。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020062611312535.png" alt="在这里插入图片描述"><br>可以看到data-dir文件在/var/lib/etcd/下，直接rm -rf 就好<br>重启后查看集群状态<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200626113313553.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>kali  linux使用远程连接工具，final进行连接</title>
    <url>/2020/08/22/kali%20%20linux%E4%BD%BF%E7%94%A8%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%B7%A5%E5%85%B7%EF%BC%8Cfinal%E8%BF%9B%E8%A1%8C%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>进入ssh连接的配置文件，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># vim /etc/ssh/sshd_config</span></span><br></pre></td></tr></table></figure>

<p>修改配置为如图所示</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020070916553739.png" alt="在这里插入图片描述"><br>重启ssh，并查看端口<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200709165832668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200709165913868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020070917001010.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200709170031662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>kvm</title>
    <url>/2020/07/27/kvm/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="企业私有云容器化架构运维实战"><a href="#企业私有云容器化架构运维实战" class="headerlink" title="企业私有云容器化架构运维实战"></a><strong>企业私有云容器化架构运维实战</strong></h1><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/06/04/5cf61b854224d74429.png" alt></p>
<h4 id="了解"><a href="#了解" class="headerlink" title="了解"></a><strong>了解</strong></h4><h5 id="什么是虚拟化"><a href="#什么是虚拟化" class="headerlink" title="什么是虚拟化:"></a><strong>什么是虚拟化:</strong></h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">虚拟化（Virtualization）技术最早出现在 20 世纪 60 年代的 IBM 大型机系统，在70年代的 System 370 系列中逐渐流行起来，这些机器通过一种叫虚拟机监控器（Virtual Machine Monitor，VMM）的程序在物理硬件之上生成许多可以运行独立操作系统软件的虚拟机（Virtual Machine）实例。随着近年多核系统、集群、网格甚至云计算的广泛部署，虚拟化技术在商业应用上的优势日益体现，不仅降低了 IT 成本，而且还增强了系统安全性和可靠性。</span><br></pre></td></tr></table></figure>

<p><strong>常用的虚拟化产品有哪些</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.Kvm（redhat）企业级</span><br><span class="line">2.Vmware:</span><br><span class="line">Vmware-workstation(windows和linux)桌面级</span><br><span class="line">Vmware-fusion(mac)</span><br><span class="line">Vmware-esxi(企业级别)本身就是一个操作系统。</span><br><span class="line">3.hyper-v(微软）</span><br><span class="line">4.Ovm（oracle公司--Windows linux） virtulbox</span><br><span class="line">5.Xen（rhel6之前所有版本默认用的虚拟化产品）</span><br></pre></td></tr></table></figure>

<p><strong>虚拟化技术的分类:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">平台虚拟化（Platform Virtualization），针对计算机和操作系统的虚拟化//针对计算机操作系统。</span><br><span class="line">资源虚拟化（Resource Virtualization），针对特定的系统资源的虚拟化，比如内存、存储、网络资源等。</span><br><span class="line">应用程序虚拟化（Application Virtualization），包括仿真、模拟、解释技术等。把硬件的东西变成了一个应用</span><br></pre></td></tr></table></figure>

<p>​      我们通常所说的虚拟化主要是指平台虚拟化技术，通过使用控制程序（Control Program，也被称为 Virtual Machine Monitor(虚拟监控器VMM) 或<strong>Hypervisor</strong>，隐藏特定计算平台的实际物理特性，为用户提供抽象的、统一的、模拟的计算环境（称为虚拟机）。</p>
<h5 id="平台虚拟化类型"><a href="#平台虚拟化类型" class="headerlink" title="平台虚拟化类型"></a><strong>平台虚拟化类型</strong></h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">操作系统虚拟化:有一个非常常见的操作系统叫openvz。特点是所有的虚拟机共享宿主机的内核。</span><br></pre></td></tr></table></figure>

<p><strong>全虚拟化（Full Virtualization):</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">全虚拟化是指虚拟机模拟了完整的底层硬件，包括处理器、物理内存、时钟、外设等，使得为原始硬件设计的操作系统或其它系统软件完全不做任何修改就可以在虚拟机中运行。</span><br><span class="line"></span><br><span class="line">现在的kvm与vmware都支持全虚拟化</span><br><span class="line"></span><br><span class="line">全虚拟化的运行速度要快于硬件模拟，但是性能方面不如裸机，因为Hypervisor需要占用一些资源</span><br></pre></td></tr></table></figure>

<p><strong>半虚拟化（Para Virtualization）:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">半虚拟化（也叫超虚拟化）是另一种类似于全虚拟化的技术，它使用Hypervisor分享存取底层的硬件，但是它的guest操作系统集成了虚拟化方面的代码。因为操作系统自身能够与虚拟进程进行很好的协作。</span><br><span class="line"></span><br><span class="line">半虚拟化需要guest操作系统做一些修改，使guest操作系统意识到自己是处于虚拟化环境的，但是半虚拟化提供了与原操作系统相近的性能。</span><br></pre></td></tr></table></figure>

<p><strong>硬件辅助虚拟化</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">硬件辅助虚拟化是指借助硬件（主要是主机处理器）的支持来实现高效的全虚拟化。</span><br></pre></td></tr></table></figure>

<p><strong>部分虚拟化</strong></p>
<p><strong>企业级虚拟化与桌面级虚拟化的区别</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">桌面级虚拟化：</span><br><span class="line">App  ---在安装APP，通过App实现各种功能</span><br><span class="line">guestos  ---客户机也叫客户操作系统</span><br><span class="line">vmware-workstation（hypervisor（虚拟机管理程序）+图形管理工具）</span><br><span class="line">os</span><br><span class="line">硬件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">企业级虚拟化</span><br><span class="line">App（图形管理工具）</span><br><span class="line">guestos</span><br><span class="line">os+hypervisor：在操作系统级别加上了虚拟机管理程序</span><br><span class="line">硬件</span><br></pre></td></tr></table></figure>

<h2 id="KVM虚拟化技术简介"><a href="#KVM虚拟化技术简介" class="headerlink" title="KVM虚拟化技术简介"></a>KVM虚拟化技术简介</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">KVM 针对运行在 x86 硬件上的、驻留在内核中的虚拟化基础结构。KVM 是第一个成为原生 Linux 内核（2.6.20）的一部分的 hypervisor，它是由 Avi Kivity 开发和维护的，现在归 Red Hat 所有。</span><br><span class="line">KVM 是作为内核模块实现的</span><br></pre></td></tr></table></figure>

<h2 id="KVM安装"><a href="#KVM安装" class="headerlink" title="KVM安装"></a>KVM安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kvm虚拟化平台软件一般装在操作系统为Centos上面</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">大家不想把电脑装为Centos的操作系统，可以用VMware workstations装一台配置较高的虚拟机（cpu、内存、磁盘）给的尽可能最大，然后需要在开启之前做如下操作</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571883832374.png" alt="1571883832374"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571883850670.png" alt="1571883850670"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571883863183.png" alt="1571883863183"></p>
<p><strong>然后打开虚拟机，安装kvm即可</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查看cpu是否支持虚拟化</span><br><span class="line"><span class="meta">#</span><span class="bash"> cat /proc/cpuinfo | grep -E <span class="string">'vmx|svm'</span></span></span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584185166552.png" alt="1584185166552"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">"关闭防火墙和selinux"</span><br><span class="line"></span><br><span class="line">一般企业如果使用kvm虚拟机平台，都会把物理服务器装成Centos的操作系统，然后装上kvm，创建使用虚拟机</span><br><span class="line"></span><br><span class="line">1.需求内核(rhel6以上):</span><br><span class="line">[root@kvm-server ~]# uname -r </span><br><span class="line">3.10.0-1062.el7.x86_64</span><br><span class="line">2.如果之前安装kvm了清理环境：卸载kvm</span><br><span class="line">[root@kvm-server ~]# yum remove `rpm -qa | egrep 'qemu|virt|kvm'` -y</span><br><span class="line">[root@kvm-server ~]# rm -rf /var/lib/libvirt  /etc/libvirt/</span><br><span class="line">3.升级系统：(在安装虚拟机出错的情况下，一般是操作系统的版本问题)</span><br><span class="line">[root@kvm-server ~]# yum upgrade</span><br><span class="line">4.安装软件：</span><br><span class="line">[root@kvm-server ~]# yum install *qemu*  *virt*  librbd1-devel -y</span><br><span class="line">其实下载的是下面几款软件</span><br><span class="line">[root@kvm-server ~]# yum install qemu-kvm libvirt virt-manager  librbd1-devel -y   </span><br><span class="line">qemu-kvm libvirt virt-manager </span><br><span class="line"></span><br><span class="line">qemu-kvm ： 主包</span><br><span class="line">libvirt：api接口</span><br><span class="line">virt-manager：图形化界面</span><br><span class="line"></span><br><span class="line">在所谓的kvm技术中，应用到的其实有2个东西：qemu+kvm</span><br><span class="line">kvm负责cpu虚拟化+内存虚拟化，实现了cpu和内存的虚拟化，但kvm不能模拟其他设备；</span><br><span class="line">qemu是模拟IO设备（网卡，磁盘），kvm加上qemu之后就能实现真正意义上服务器虚拟化。</span><br><span class="line">因为用到了上面两个东西，所以一般都称之为qemu-kvm。</span><br><span class="line">libvirt则是调用kvm虚拟化技术的接口用于管理的，用libvirt管理方便，直接用qemu-kvm的接口太繁琐。</span><br><span class="line"></span><br><span class="line">5.启动服务:    </span><br><span class="line">centos7:</span><br><span class="line">[root@kvm-server ~]# systemctl start libvirtd</span><br><span class="line">6.查看kvm模块加载:</span><br><span class="line">[root@kvm-server ~]# lsmod | grep kvm</span><br><span class="line">kvm_intel             188644  0 </span><br><span class="line">kvm                   621480  1 kvm_intel</span><br><span class="line">irqbypass              13503  1 kvm</span><br><span class="line">如果看到有这两行，说明支持kvm模块</span><br></pre></td></tr></table></figure>

<p><strong>KVM gustos图形方式部署安装虚拟机—需要掌握</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@kvm-server ~]# virt-manager</span><br><span class="line">====================</span><br><span class="line">下面就是点点点</span><br><span class="line"></span><br><span class="line">安装完成一台虚拟机之后，网络模式默认是NAT的。</span><br></pre></td></tr></table></figure>

<p><strong>完全文本方式安装虚拟机</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@kvm-server ~]# yum install -y vsftpd  #安装ftp，并配置最后将镜像上传到ftp中</span><br><span class="line">[root@kvm-server ~]# mkdir /var/ftp/centos7u4</span><br><span class="line">[root@kvm-server IOS]# mount CentOS-7-x86_64-DVD-1708.iso /var/ftp/centos7u4/</span><br><span class="line"></span><br><span class="line">记住打开</span><br><span class="line">systemctl start vsfptd</span><br><span class="line">ip为br0的ip</span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# virt-install --connect qemu:///system -n vm10 -r 2050 --disk path=/var/lib/libvirt/images/vm10.img,size=5  --os-type=linux --os-variant=centos7.0 --vcpus=1  --location=ftp://10.0.111.182/centos7u4 -x console=ttyS0 --nographics</span><br><span class="line"></span><br><span class="line">用这种方式安装的操作系统有一个毛病：纯文本安装的输入时大小写莫名的变换，远程ssh没问题。内存不低于2G</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">virt-install </span><br><span class="line">bash: virt-install: 未找到命令...</span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install libguestfs-tools -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install virt-install.noarch -y</span></span><br><span class="line"></span><br><span class="line">参数解释：</span><br><span class="line">-n name</span><br><span class="line">-r  以M为单位指定分配给虚拟机的内存大小</span><br><span class="line">--disk 指定作为客户机存储的媒介 size以G为单位的存储</span><br><span class="line">--os-type   系统类型</span><br><span class="line">--os-variant 系统类型版本</span><br><span class="line">--vcpus 指定核数，不能超过物理cpu</span><br><span class="line">--location  客户虚拟机安装源下载，必须为镜像挂载在ftp目录下</span><br><span class="line">-x console=ttyS0 执行终端0</span><br><span class="line">--nographics 无图形，文本模式</span><br></pre></td></tr></table></figure>

<p>注意：命令敲下去，不要误操作退出安装<img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571888912686.png" alt="1571888912686"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571888994236.png" alt="1571888994236"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571899799370.png" alt="1571899799370"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571899841651.png" alt="1571899841651"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571900561999.png" alt="1571900561999"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584115405588.png" alt="1584115405588"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584277302582.png" alt="1584277302582"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584277352951.png" alt="1584277352951"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584277388759.png" alt="1584277388759"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584277434201.png" alt="1584277434201"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584116022881.png" alt="1584116022881"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584116087341.png" alt="1584116087341"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584116391245.png" alt="1584116391245"></p>
<p>需要等一会了大约20分钟左右</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1584116673077.png" alt="1584116673077"></p>
<p>按空格退出！</p>
<p>下面的操作根据提示点点就可以了</p>
<p><strong>模板镜像+配置文件 方式安装虚拟机—需要掌握</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.虚拟机配置文件</span><br><span class="line">[root@kvm-server ~]# ls /etc/libvirt/qemu</span><br><span class="line">networks  vm2.xml</span><br><span class="line">2.储存虚拟机的介质</span><br><span class="line">[root@kvm-server ~]# ls /var/lib/libvirt/images/</span><br><span class="line">vm2.img</span><br><span class="line">==============================</span><br><span class="line">define方式创建好，不会启动</span><br><span class="line">create方式创建好，会启动</span><br><span class="line">实战：</span><br><span class="line">1.拷贝模板镜像和配置文件</span><br><span class="line">[root@kvm-server ~]# cp /etc/libvirt/qemu/vm2.xml /etc/libvirt/qemu/vm3.xml</span><br><span class="line">[root@kvm-server ~]# cp /var/lib/libvirt/images/vm2.img /var/lib/libvirt/images/vm3.img </span><br><span class="line">2.修改配置文件</span><br><span class="line">生成新的UUID</span><br><span class="line">[root@kvm-server ~]# uuidgen</span><br><span class="line">2e3fa6db-ff7f-41c3-bc8f-0428e81ebb57</span><br><span class="line">[root@kvm-server ~]# vim /etc/libvirt/qemu/vm3.xml</span><br><span class="line">domain type='kvm'&gt;</span><br><span class="line">  &lt;name&gt;vm3&lt;/name&gt;  #名字不能一样需要修改</span><br><span class="line">  &lt;uuid&gt;2e3fa6db-ff7f-41c3-bc8f-0428e81ebb57&lt;/uuid&gt; #uuid不能一样需要修改</span><br><span class="line">  &lt;memory unit='KiB'&gt;1024000&lt;/memory&gt;  #内存，可选</span><br><span class="line">  &lt;currentMemory unit='KiB'&gt;1024000&lt;/currentMemory&gt;  #当前内存与上面定义一样</span><br><span class="line">  &lt;vcpu placement='static'&gt;2&lt;/vcpu&gt;  #cpu可选</span><br><span class="line">  &lt;os&gt;</span><br><span class="line">    &lt;type arch='x86_64' machine='pc-i440fx-rhel7.0.0'&gt;hvm&lt;/type&gt;</span><br><span class="line">    &lt;boot dev='hd'/&gt;</span><br><span class="line">  &lt;/os&gt;</span><br><span class="line">  &lt;features&gt;</span><br><span class="line">    &lt;acpi/&gt;</span><br><span class="line">    &lt;apic/&gt;</span><br><span class="line">  &lt;/features&gt;</span><br><span class="line">  &lt;cpu mode='custom' match='exact' check='partial'&gt;</span><br><span class="line">    &lt;model fallback='allow'&gt;SandyBridge-IBRS&lt;/model&gt;</span><br><span class="line">    &lt;feature policy='require' name='md-clear'/&gt;</span><br><span class="line">    &lt;feature policy='require' name='spec-ctrl'/&gt;</span><br><span class="line">    &lt;feature policy='require' name='ssbd'/&gt;</span><br><span class="line">  &lt;/cpu&gt;</span><br><span class="line">  &lt;clock offset='utc'&gt;</span><br><span class="line">    &lt;timer name='rtc' tickpolicy='catchup'/&gt;</span><br><span class="line">    &lt;timer name='pit' tickpolicy='delay'/&gt;</span><br><span class="line">    &lt;timer name='hpet' present='no'/&gt;</span><br><span class="line">  &lt;/clock&gt;</span><br><span class="line">  &lt;on_poweroff&gt;destroy&lt;/on_poweroff&gt;</span><br><span class="line">  &lt;on_reboot&gt;restart&lt;/on_reboot&gt;</span><br><span class="line">  &lt;on_crash&gt;destroy&lt;/on_crash&gt;</span><br><span class="line">  &lt;pm&gt;</span><br><span class="line">    &lt;suspend-to-mem enabled='no'/&gt;</span><br><span class="line">    &lt;suspend-to-disk enabled='no'/&gt;</span><br><span class="line">  &lt;/pm&gt;</span><br><span class="line">  &lt;devices&gt;</span><br><span class="line">    &lt;emulator&gt;/usr/libexec/qemu-kvm&lt;/emulator&gt;</span><br><span class="line">    &lt;disk type='file' device='disk'&gt;</span><br><span class="line">      &lt;driver name='qemu' type='qcow2'/&gt;</span><br><span class="line">      &lt;source file='/var/lib/libvirt/images/vm3.img'/&gt;   #磁盘镜像需要修改</span><br><span class="line">      &lt;target dev='vda' bus='virtio'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x07' function='0x0'/&gt;</span><br><span class="line">    &lt;/disk&gt;</span><br><span class="line">    &lt;controller type='usb' index='0' model='ich9-ehci1'&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x7'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;controller type='usb' index='0' model='ich9-uhci1'&gt;</span><br><span class="line">      &lt;master startport='0'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0' multifunction='on'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;controller type='usb' index='0' model='ich9-uhci2'&gt;</span><br><span class="line">      &lt;master startport='2'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x1'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;controller type='usb' index='0' model='ich9-uhci3'&gt;</span><br><span class="line">      &lt;master startport='4'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x2'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;controller type='pci' index='0' model='pci-root'/&gt;</span><br><span class="line">    &lt;controller type='virtio-serial' index='0'&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x0'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;interface type='network'&gt;</span><br><span class="line">      &lt;mac address='52:54:00:82:d6:3c'/&gt;  #mac地址不能一样需要修改，只能修改后三段。</span><br><span class="line">      &lt;source network='default'/&gt;</span><br><span class="line">      &lt;model type='virtio'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/&gt;</span><br><span class="line">    &lt;/interface&gt;</span><br><span class="line">    &lt;serial type='pty'&gt;</span><br><span class="line">      &lt;target type='isa-serial' port='0'&gt;</span><br><span class="line">        &lt;model name='isa-serial'/&gt;</span><br><span class="line">      &lt;/target&gt;</span><br><span class="line">    &lt;/serial&gt;</span><br><span class="line">    &lt;console type='pty'&gt;</span><br><span class="line">      &lt;target type='serial' port='0'/&gt;</span><br><span class="line">    &lt;/console&gt;</span><br><span class="line">    &lt;channel type='unix'&gt;</span><br><span class="line">      &lt;target type='virtio' name='org.qemu.guest_agent.0'/&gt;</span><br><span class="line">      &lt;address type='virtio-serial' controller='0' bus='0' port='1'/&gt;</span><br><span class="line">    &lt;/channel&gt;</span><br><span class="line">    &lt;channel type='spicevmc'&gt;</span><br><span class="line">      &lt;target type='virtio' name='com.redhat.spice.0'/&gt;</span><br><span class="line">      &lt;address type='virtio-serial' controller='0' bus='0' port='2'/&gt;</span><br><span class="line">    &lt;/channel&gt;</span><br><span class="line">    &lt;input type='tablet' bus='usb'&gt;</span><br><span class="line">      &lt;address type='usb' bus='0' port='1'/&gt;</span><br><span class="line">    &lt;/input&gt;</span><br><span class="line">    &lt;input type='mouse' bus='ps2'/&gt;</span><br><span class="line">    &lt;input type='keyboard' bus='ps2'/&gt;</span><br><span class="line">    &lt;graphics type='spice' autoport='yes'&gt;</span><br><span class="line">      &lt;listen type='address'/&gt;</span><br><span class="line">      &lt;image compression='off'/&gt;</span><br><span class="line">    &lt;/graphics&gt;</span><br><span class="line">    &lt;sound model='ich6'&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0'/&gt;</span><br><span class="line">    &lt;/sound&gt;</span><br><span class="line">    &lt;video&gt;</span><br><span class="line">      &lt;model type='qxl' ram='65536' vram='65536' vgamem='16384' heads='1' primary='yes'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/&gt;</span><br><span class="line">    &lt;/video&gt;</span><br><span class="line">    &lt;redirdev bus='usb' type='spicevmc'&gt;</span><br><span class="line">      &lt;address type='usb' bus='0' port='2'/&gt;</span><br><span class="line">    &lt;/redirdev&gt;</span><br><span class="line">    &lt;redirdev bus='usb' type='spicevmc'&gt;</span><br><span class="line">      &lt;address type='usb' bus='0' port='3'/&gt;</span><br><span class="line">    &lt;/redirdev&gt;</span><br><span class="line">    &lt;memballoon model='virtio'&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x08' function='0x0'/&gt;</span><br><span class="line">    &lt;/memballoon&gt;</span><br><span class="line">    &lt;rng model='virtio'&gt;</span><br><span class="line">      &lt;backend model='random'&gt;/dev/urandom&lt;/backend&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x09' function='0x0'/&gt;</span><br><span class="line">    &lt;/rng&gt;</span><br><span class="line">  &lt;/devices&gt;</span><br><span class="line">&lt;/domain&gt;</span><br><span class="line">必须修改name，uuid,mac地址，其余可选</span><br><span class="line"></span><br><span class="line">用vim修改完之后需要define一下配置文件</span><br><span class="line">[root@kvm-server ~]# virsh define /etc/libvirt/qemu/vm3.xml</span><br><span class="line">重启一下：</span><br><span class="line">[root@kvm-server ~]# systemctl restart libvirtd</span><br><span class="line">宿主机开启路由转发：</span><br><span class="line">[root@kvm-server ~]# vim /etc/sysctl.conf </span><br><span class="line">[root@kvm-server ~]# sysctl -p</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">=============</span><br><span class="line">查看虚拟机列表：</span><br><span class="line">[root@kvm-server ~]# virsh list --all</span><br><span class="line"> Id    名称                         状态</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> -     vm2                            关闭</span><br><span class="line"> -     vm3                            关闭</span><br><span class="line">或者如下：</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571906096410.png" alt="1571906096410"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571906906190.png" alt="1571906906190"></p>
<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a><strong>备注</strong></h2><p>#####一、GuestOS安装问题解析</p>
<p><strong>问题1</strong>：用图形安装guest os的时候卡住不动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">解决：升级系统</span><br><span class="line">[root@qfedu.com ~]#  yum upgrade -y</span><br></pre></td></tr></table></figure>

<p><strong>问题2</strong>：升级系统后安装guest os的时候还是卡住不动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">解决：需要在安装宿主机的时候安装兼容性程序（有的同学就没有安装也可以使用，这可能是bug）</span><br></pre></td></tr></table></figure>

<p><strong>问题3</strong>：如果安装了各种兼容程序之后还是不行</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/wpsl5fXRB.jpg" alt="img"> </p>
<blockquote>
<p>如果所有问题都排查过后还是安装不上guestos，最后的原因就是在安装宿主机系统的时候各种兼容性软件没有安装而且Yum也没有自动处理导致的 </p>
</blockquote>
<h2 id="KVM虚拟机管理"><a href="#KVM虚拟机管理" class="headerlink" title="KVM虚拟机管理"></a><strong>KVM虚拟机管理</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">虚拟机的基本管理命令：</span><br><span class="line">查看</span><br><span class="line">启动</span><br><span class="line">关闭</span><br><span class="line">重启</span><br><span class="line">重置 </span><br><span class="line">===================</span><br><span class="line">[root@kvm-server ~]# virsh list  #列出在运行状态中的虚拟机</span><br><span class="line"> Id    名称                         状态</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 2     vm3                            running</span><br><span class="line">[root@kvm-server ~]# virsh list --all  #列出所有虚拟机</span><br><span class="line"> Id    名称                         状态</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 2     vm3                            running</span><br><span class="line"> -     vm2                            关闭</span><br><span class="line">查看kvm虚拟机配置文件：</span><br><span class="line">语法：virsh dumpxml name #虚拟机名字</span><br><span class="line">[root@kvm-server ~]# virsh dumpxml vm3</span><br><span class="line"></span><br><span class="line">将vm3虚拟机的配置文件保存至vm4.xml</span><br><span class="line">[root@kvm-server ~]# virsh dumpxml vm3 &gt; /etc/libvirt/qemu/vm4.xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">启动</span><br><span class="line">[root@kvm-server ~]# virsh start vm2</span><br><span class="line">域 vm2 已开始</span><br><span class="line"></span><br><span class="line">暂停虚拟机（挂起）：</span><br><span class="line">[root@kvm-server ~]# virsh suspend vm_name</span><br><span class="line">域 vm2 被挂起</span><br><span class="line"></span><br><span class="line">恢复虚拟机：</span><br><span class="line">[root@kvm-server ~]# virsh resume vm_name</span><br><span class="line">域 vm2 被重新恢复</span><br><span class="line"></span><br><span class="line">关闭：</span><br><span class="line">方法1：</span><br><span class="line">[root@kvm-server ~]# virsh shutdown vm3</span><br><span class="line">域 vm3 被关闭</span><br><span class="line">    </span><br><span class="line">方法2：</span><br><span class="line">[root@kvm-server ~]# virsh destroy vm3</span><br><span class="line"></span><br><span class="line">重启：</span><br><span class="line">[root@kvm-server ~]# virsh reboot vm3</span><br><span class="line">域 vm3 正在被重新启动</span><br><span class="line"></span><br><span class="line">重置:</span><br><span class="line">[root@kvm-server ~]# virsh reset vm3   #断电重启。速度快</span><br><span class="line">Domain vm3 was reset</span><br><span class="line"></span><br><span class="line">删除虚拟机:</span><br><span class="line">[root@kvm-server ~]# virsh undefine vm2</span><br><span class="line">Domain vm2 has been undefined</span><br><span class="line"></span><br><span class="line">注意:虚拟机在开启的情况下undefine是无法删除的只是删除定义将配置文件删除了，不能删除磁盘文件。需要手动rm</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line">虚拟机开机自动启动:</span><br><span class="line"><span class="meta">#</span><span class="bash">如果虚拟机开机自启，里面的服务应该设置的有开机自启，不然没有意义</span></span><br><span class="line">[root@kvm-server ~]# virsh autostart vm3</span><br><span class="line">域 vm3标记为自动开始</span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# ls /etc/libvirt/qemu/autostart/     //此目录默认不存在，在有开机启动的虚拟机时自动创建</span><br><span class="line">vm3.xml</span><br><span class="line"></span><br><span class="line">关闭开机启动</span><br><span class="line">[root@kvm-server ~]# virsh autostart --disable vm3</span><br><span class="line">域 vm3取消标记为自动开始</span><br><span class="line">[root@kvm-server ~]# ls /etc/libvirt/qemu/autostart/</span><br><span class="line"></span><br><span class="line">如何查看已启动的虚拟机ip地址</span><br><span class="line">假如vm3虚拟机已启动</span><br><span class="line">[root@kvm-server ~]# virsh domifaddr vm3</span><br><span class="line"> 名称     MAC 地址           Protocol     Address</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line"> vnet0      52:54:00:82:d6:3c    ipv4         192.168.122.85/24</span><br></pre></td></tr></table></figure>

<h2 id="虚拟机添加设备"><a href="#虚拟机添加设备" class="headerlink" title="虚拟机添加设备"></a><strong>虚拟机添加设备</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.图形方式:</span><br><span class="line">    首先，关闭要添加硬件的虚拟机</span><br><span class="line">    双击虚拟机，在打开的对话框点击上方的View，点击Details，点击Add Hardware可以选择要添加的虚拟硬件</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571910314774-1584350545507.png" alt="1571910314774"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571910431718-1584350545509.png" alt="1571910431718"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571910465326-1584350545509.png" alt="1571910465326"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571910479417-1584350545508.png" alt="1571910479417"></p>
<p>按需求点点就可以了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2.修改配置文件方式:</span><br><span class="line"></span><br><span class="line">我们给虚拟机vm3添加磁盘为例：</span><br><span class="line"></span><br><span class="line">首先需要创建出要添加的磁盘</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@kvm-server ~]# qemu-img create -f qcow2 /var/lib/libvirt/images/vm4-1.qcow2 5G</span><br><span class="line"></span><br><span class="line">注：创建空的磁盘文件：这里我们创建一个5G的磁盘，不过创建出来，通过ll -h查看大小，看不出它是5G，添加上之后才能看到</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@kvm-server ~]# cd /etc/libvirt/qemu/</span><br><span class="line">[root@kvm-server qemu]# vim vm3.xml</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571911539822-1584350545509.png" alt="1571911539822"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">加好之后，启动虚拟机</span><br><span class="line">[root@kvm-server qemu]# systemctl restart libvirtd</span><br><span class="line">[root@kvm-server qemu]# virsh list --all</span><br><span class="line"> Id    名称                         状态</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 6     centos7.0                      running</span><br><span class="line"> -     vm3                            关闭</span><br><span class="line">[root@kvm-server qemu]# virsh start vm3</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571911790388-1584350545509.png" alt="1571911790388"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">可以看到我们新添加的磁盘vdb</span><br><span class="line">然后可以正常分区，制作文件系统，进行挂载</span><br></pre></td></tr></table></figure>

<p><strong>虚拟机克隆</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.图形界面：Applications （左上角）-----&gt; System Tools ------&gt;Virtual Machine Manager</span><br><span class="line">   关闭要克隆的虚拟机，右键点击虚拟机选择Clone</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571970290792-1584350545509.png" alt="1571970290792"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2.字符终端，命令克隆</span><br><span class="line">[root@kvm-server ~]# virt-clone -o vm2 --auto-clone</span><br><span class="line">正在分配 'vm2-clone.qcow2'                              | 5.0 GB  00:00     </span><br><span class="line">成功克隆 'vm2-clone'。</span><br><span class="line">-o       origin-原始</span><br><span class="line">    </span><br><span class="line">[root@kvm-server ~]# virt-clone -o vm2 -n vm5 --auto-clone</span><br><span class="line">正在分配 'vm5.qcow2'                                    | 5.0 GB  00:00     </span><br><span class="line">成功克隆 'vm5'。</span><br><span class="line">-n :指定新客户机的名字</span><br><span class="line">        </span><br><span class="line">[root@kvm-server ~]# virt-clone -o vm2 -n vm6 -f /var/lib/libvirt/images/vm6.img </span><br><span class="line">正在分配 'vm6.img'                                      | 5.0 GB  00:00     </span><br><span class="line">成功克隆 'vm6'。</span><br><span class="line">-f ，--file NEW_DISKFILE：为新客户机使用新的磁盘镜像文件</span><br><span class="line"></span><br><span class="line">这条命令在克隆的同时，可以指定镜像文件的位置和名称。</span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# virsh list --all</span><br><span class="line"> Id    名称                         状态</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> -     vm2                            关闭</span><br><span class="line"> -     vm2-clone                      关闭</span><br><span class="line"> -     vm3                            关闭</span><br><span class="line"> -     vm5                            关闭</span><br><span class="line"> -     vm6                            关闭</span><br></pre></td></tr></table></figure>

<p><strong>kvm高级命令</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">建立虚拟机磁盘镜像文件：</span><br><span class="line">磁盘镜像文件格式:</span><br><span class="line">qed  ----不用了</span><br><span class="line">    raw     原始格式，性能最好 直接占用你一开始给多少 系统就占多少 不支持快照</span><br><span class="line">    qcow  先去网上了解一下cow(写时拷贝copy on write) ，性能远不能和raw相比，所以很快夭折了，所以出现了qcow2（性能低下 早就被抛弃）</span><br><span class="line">    qcow2 性能上还是不如raw，但是raw不支持快照，qcow2支持快照。</span><br><span class="line"></span><br><span class="line">现在默认安装好的用的是raw格式，做快照要把他转换成qcow2格式</span><br><span class="line"></span><br><span class="line">什么叫写时拷贝？</span><br><span class="line">raw立刻分配空间，不管你有没有用到那么多空间</span><br><span class="line">qcow2只是承诺给你分配空间，但是只有当你需要用空间的时候，才会给你空间。最多只给你承诺空间的大小，避免空间浪费</span><br><span class="line"></span><br><span class="line">工作当中用哪个？看你用不用快照。本身做快照也是需要存储空间的。</span><br><span class="line">当然也不一定。数据绝对不会存储到本地。</span><br><span class="line"></span><br><span class="line">[root@kvm-server images]# pwd</span><br><span class="line">/var/lib/libvirt/images</span><br><span class="line"></span><br><span class="line">建立qcow2格式磁盘文件:</span><br><span class="line">[root@kvm-server images]# qemu-img create -f qcow2 test.img 5G</span><br><span class="line">Formatting 'test.img', fmt=qcow2 size=5368709120 encryption=off cluster_size=65536 lazy_refcounts=off </span><br><span class="line"></span><br><span class="line">qemu-kvm  qemu是早先的一个模拟器，kvm是基于qemu发展出来的。</span><br><span class="line"></span><br><span class="line">建立raw格式磁盘文件:</span><br><span class="line">[root@kvm-server images]# qemu-img create -f raw test.raw 5G</span><br><span class="line">Formatting 'test.raw', fmt=raw size=5368709120 </span><br><span class="line"></span><br><span class="line">查看已经创建的虚拟磁盘文件:</span><br><span class="line">[root@kvm-server images]# qemu-img info test.img </span><br><span class="line">[root@kvm-server images]# qemu-img info test.raw </span><br><span class="line"></span><br><span class="line">=============================================================================</span><br><span class="line">挂载磁盘</span><br><span class="line"></span><br><span class="line">将vm2虚拟机先关闭</span><br><span class="line">查看vm2的磁盘镜像分区信息:</span><br><span class="line">[root@kvm-server images]# virt-df -h -d vm2</span><br><span class="line">文件系统                                  大小      已用空间    可用空间     使用百分比%</span><br><span class="line">vm2:/dev/sda1                            1014M        92M       922M         10%</span><br><span class="line">vm2:/dev/centos/root                      3.5G       863M       2.6G         25%</span><br><span class="line"></span><br><span class="line">1.创建一个挂载目录</span><br><span class="line">[root@kvm-server images]# mkdir /test</span><br><span class="line">2.挂载虚拟机的跟分区到test目录</span><br><span class="line">[root@kvm-server images]# guestmount -d vm2 -m /dev/centos/root --rw /test/</span><br><span class="line">[root@kvm-server images]# cd /test/</span><br><span class="line">[root@kvm-server test]# ls</span><br><span class="line">bin   dev  home  lib64  mnt  proc  run   srv  tmp  var</span><br><span class="line">boot  etc  lib   media  opt  root  sbin  sys  usr</span><br><span class="line">[root@kvm-server test]# cat etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">polkitd:x:999:997:User for polkitd:/:/sbin/nologin</span><br><span class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">取消挂载</span><br><span class="line">[root@kvm-server ~]# guestunmount /test</span><br></pre></td></tr></table></figure>

<h2 id="KVM网络配置"><a href="#KVM网络配置" class="headerlink" title="KVM网络配置"></a>KVM网络配置</h2><p><strong>两种网络</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nat与isolate（）</span><br><span class="line">NAT default方式：支持主机与虚拟机互访，虚拟机访问外界网络，但不支持外界访问虚拟机。</span><br><span class="line">isolate 隔离，host-host-only：仅主机模式。外网不能访问虚拟机，虚拟机也不能访问外网</span><br></pre></td></tr></table></figure>

<p>一种接口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bridge桥接</span><br></pre></td></tr></table></figure>

<p>nat网络</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571974868858-1584352936244.png" alt="1571974868858"></p>
<p>桥接网络</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571974792315-1584352936245.png" alt="1571974792315"></p>
<p>隔离网络</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191105224237889-1584352936245.png" alt="image-20191105224237889"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">可以通过查看mac地址是否一致来确定是不是一根线上的两个接口</span><br><span class="line">[root@kvm-server ~]# brctl show </span><br><span class="line">bridge name	bridge id		STP enabled	interfaces</span><br><span class="line">virbr0		8000.525400831963	yes		virbr0-nic</span><br><span class="line">							           vnet0</span><br><span class="line">							           vnet1</span><br><span class="line"></span><br><span class="line">注意：这里vnet网卡，是每台启动的虚拟机正在使用的网卡设备，每台虚拟机使用的不同						                             					                             </span><br><span class="line">从交换机上把vnet网卡删除：</span><br><span class="line">[root@kvm-server ~]# brctl delif virbr0 vnet0</span><br><span class="line"></span><br><span class="line">来到vm2的虚拟机，ping不通百度</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571975174322-1584352936245.png" alt="1571975174322"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">添加vnet网卡添加到交换机上：</span><br><span class="line">[root@kvm-server ~]# brctl addif virbr0 vnet0</span><br><span class="line">	</span><br><span class="line">来到vm2的虚拟机，恢复正常</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571975253586-1584352936245.png" alt="1571975253586"></p>
<p><strong>配置文件方式配置桥接：在宿主机上</strong></p>
<p>先将kvm虚拟机关闭</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">配置文件方式配置桥接：在宿主机上</span><br><span class="line">[root@kvm-server ~]# ip a   #先找出宿主机用的哪个网卡设备，我的是enp0s25</span><br><span class="line">[root@kvm-server ~]# cd /etc/sysconfig/network-scripts/</span><br><span class="line">1.定义网卡配置文件</span><br><span class="line">[root@kvm-server network-scripts]# vim ifcfg-br0    #没有此文件新建</span><br><span class="line">[root@kvm-server network-scripts]# cat ifcfg-br0</span><br><span class="line">TYPE=Bridge</span><br><span class="line">NAME=br0</span><br><span class="line">DEVICE=br0</span><br><span class="line">ONBOOT="yes"</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=10.0.111.182   #宿主的ip</span><br><span class="line">GATEWAY=10.0.111.1    #宿主的网关</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=114.144.144.144</span><br><span class="line">DNS2=8.8.8.8</span><br><span class="line"></span><br><span class="line">然后看清楚宿主机正在使用的网卡，修改配置文件</span><br><span class="line">[root@kvm-server network-scripts]# cp ifcfg-enp0s25 ifcfg-enp0s25.back</span><br><span class="line">[root@kvm-server network-scripts]# vim ifcfg-enp0s25</span><br><span class="line">NAME=enp0s25   #定义网卡设备名称</span><br><span class="line">DEVICE=enp0s25   #宿主机正在使用的网卡设备</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BRIDGE=br0     #和ifcfg-br0文件里面的设备对应，新添加</span><br><span class="line">  </span><br><span class="line">2.重启libvirtd服务</span><br><span class="line">[root@kvm-server network-scripts]# systemctl restart libvirtd </span><br><span class="line">3.重启network服务 </span><br><span class="line">[root@kvm-server network-scripts]# systemctl restart network</span><br></pre></td></tr></table></figure>

<p>然后去查看有没有新设备生成</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976296620-1584352936245.png" alt="1571976296620"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976323666-1584352936245.png" alt="1571976323666"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976344474-1584352936245.png" alt="1571976344474"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976370886-1584352936245.png" alt="1571976370886"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976447246-1584352936246.png" alt="1571976447246"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976488946-1584352936245.png" alt="1571976488946"></p>
<p>可以看到，我们先添加的网卡设备</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976560155-1584352936245.png" alt="1571976560155"></p>
<p>移除操作</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976601202-1584352936246.png" alt="1571976601202"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976640707-1584352936246.png" alt="1571976640707"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976667604-1584352936246.png" alt="1571976667604"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571976709677-1584352936246.png" alt="1571976709677"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">删除桥接网卡步骤：</span><br><span class="line">1.删除br0的配置文件</span><br><span class="line">2.修改正常网卡的配置文件</span><br><span class="line">3.重启系统</span><br><span class="line"></span><br><span class="line">[root@kvm-server network-scripts]# mv ifcfg-br0 ifcfg-br0.bak</span><br><span class="line">[root@kvm-server network-scripts]# mv ifcfg-enp0s25 ifcfg-enp0s25.bak</span><br><span class="line">[root@kvm-server network-scripts]# mv ifcfg-enp0s25.back ifcfg-enp0s25</span><br><span class="line">[root@kvm-server network-scripts]# systemctl restart libvirtd</span><br><span class="line">[root@kvm-server network-scripts]# systemctl restart network</span><br><span class="line">[root@kvm-server network-scripts]# ping www.baidu.com</span><br><span class="line">PING www.a.shifen.com (39.156.66.14) 56(84) bytes of data.</span><br><span class="line">64 bytes from 39.156.66.14 (39.156.66.14): icmp_seq=1 ttl=52 time=13.3 ms</span><br></pre></td></tr></table></figure>

<p><strong>配置文件方式创建nat网络：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">配置文件方式创建nat网络：</span><br><span class="line">[root@kvm-server ~]# cd /etc/libvirt/qemu/networks</span><br><span class="line">[root@kvm-server networks]# ls</span><br><span class="line">autostar default.xml</span><br><span class="line">[root@kvm-server networks]# cp default.xml nat1.xml</span><br><span class="line">[root@kvm-server networks]# vim nat1.xml</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571986218420.png" alt="1571986218420"></p>
<p>重启服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@kvm-server netwoeks]# systemctl  restart libvirtd</span><br></pre></td></tr></table></figure>

<p>在某个（比如vm3）虚拟机去添加此设备测试</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571985908262.png" alt="1571985908262"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571985936844.png" alt="1571985936844"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571985809125.png" alt="1571985809125"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571986318857.png" alt="1571986318857"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">配置文件方式创建isolated网络(host-only)：host-only模式我从来没用过，我们不再操作，有兴趣可以操作一下   </span><br><span class="line">[root@kvm-server networks]# cp default.xml isolated200.xml</span><br><span class="line">[root@kvm-server networks]# vim isolated200.xml</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571989161632.png" alt="1571989161632"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">启动：</span><br><span class="line">[root@kvm-server networks]# systemctl restart libvirtd</span><br><span class="line">开机自启动:</span><br><span class="line">[root@kvm-server networks]# virsh net-autostart  isolated200</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571990160154.png" alt="1571990160154"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查看所有的网络：</span><br><span class="line">[root@kvm-server networks]# virsh net-list</span><br></pre></td></tr></table></figure>

<h2 id="KVM存储配置"><a href="#KVM存储配置" class="headerlink" title="KVM存储配置"></a><strong>KVM存储配置</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">存储池</span><br><span class="line">概念：</span><br><span class="line">    kvm必须要配置一个目录当作他存储磁盘镜像(存储卷)的目录，我们称这个目录为存储池</span><br><span class="line">    </span><br><span class="line">kvm默认存储池的位置：</span><br><span class="line">    /var/lib/libvirt/images/    </span><br><span class="line"></span><br><span class="line">1.创建基于文件夹的存储池（目录，可自定义）</span><br><span class="line">[root@kvm-server ~]# mkdir -p /data/vmfs</span><br><span class="line"></span><br><span class="line">2.定义存储池与其目录</span><br><span class="line">[root@kvm-server ~]# virsh pool-define-as vmdisk --type dir --target /data/vmfs</span><br><span class="line">Pool vmdisk defined</span><br><span class="line">解释：vmdisk是新建的存储池的名称。可自定义</span><br><span class="line"></span><br><span class="line">3.创建已定义的存储池</span><br><span class="line">(1)创建已定义的存储池</span><br><span class="line">[root@kvm-server ~]# virsh pool-build vmdisk</span><br><span class="line">Pool vmdisk built</span><br><span class="line"></span><br><span class="line">(2)查看已定义的存储池，存储池不激活无法使用。</span><br><span class="line">[root@kvm-server ~]# virsh pool-list --all</span><br><span class="line">Name                 State      Autostart </span><br><span class="line">-------------------------------------------</span><br><span class="line"> default              active     yes       </span><br><span class="line"> ISO                 active     yes       </span><br><span class="line"> vmdisk               inactive   no     </span><br><span class="line"></span><br><span class="line">4.激活并自动启动已定义的存储池</span><br><span class="line">[root@kvm-server ~]# virsh pool-start vmdisk</span><br><span class="line">Pool vmdisk started</span><br><span class="line">[root@kvm-server ~]# virsh pool-autostart vmdisk</span><br><span class="line">Pool vmdisk marked as autostarted</span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# virsh pool-list --all</span><br><span class="line"> Name                 State      Autostart </span><br><span class="line">-------------------------------------------</span><br><span class="line"> default              active     yes       </span><br><span class="line"> ISO                 active     yes       </span><br><span class="line"> vmdisk               active     yes   </span><br><span class="line">这里vmdisk存储池就已经创建好了，可以直接在这个存储池中创建虚拟磁盘文件了。</span><br><span class="line"></span><br><span class="line">5.在存储池中创建虚拟机存储卷</span><br><span class="line">[root@kvm-server ~]# virsh vol-create-as vmdisk vm99.qcow2 2G --format qcow2</span><br><span class="line">Vol vm99.qcow2 created</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# ll /data/vmfs/ -h</span><br><span class="line">总用量 196K</span><br><span class="line">-rw------- 1 root root 193K 10月 25 16:04 vm99.qcow2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6.存储池相关管理命令</span><br><span class="line">(1)在存储池中删除虚拟机存储卷</span><br><span class="line">[root@kvm-server ~]# virsh vol-delete --pool vmdisk vm99.qcow2</span><br><span class="line">Vol vm99.qcow2 deleted</span><br><span class="line"></span><br><span class="line">(2)取消激活存储池</span><br><span class="line">[root@kvm-server ~]# virsh pool-destroy vmdisk</span><br><span class="line">Pool vmdisk destroyed</span><br><span class="line"></span><br><span class="line">(3)删除存储池定义的目录/data/vmfs</span><br><span class="line">[root@kvm-server ~]# virsh pool-delete vmdisk</span><br><span class="line">Pool vmdisk deleted</span><br><span class="line"></span><br><span class="line">(4)取消定义存储池</span><br><span class="line">[root@kvm-server ~]# virsh pool-undefine vmdisk</span><br><span class="line">Pool vmdisk has been undefined</span><br><span class="line"></span><br><span class="line">到此kvm存储池配置与管理操作完毕。</span><br></pre></td></tr></table></figure>

<h2 id="kvm快照"><a href="#kvm快照" class="headerlink" title="kvm快照"></a><strong>kvm快照</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">为虚拟机vm2创建一个快照（磁盘格式必须为qcow2）</span><br><span class="line">[root@kvm-server ~]# virsh snapshot-create-as vm2 vm2.snap1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：如果在创建快照的时候报错：</span><br><span class="line">error: unsupported configuration: internal snapshot for disk vda unsupported for storage type raw</span><br><span class="line"></span><br><span class="line">raw</span><br><span class="line">使用文件来模拟实际的硬盘(当然也可以使用一块真实的硬盘或一个分区)。由于原生的裸格式，不支持snapshot也是很正常的。</span><br><span class="line"></span><br><span class="line">qcow2</span><br><span class="line">现在比较主流的一种虚拟化镜像格式，经过一代的优化，目前qcow2的性能上接近raw裸格式的性能，这个也算是redhat的官方渠道了</span><br><span class="line">对于qcow2的格式，几点还是比较突出的：</span><br><span class="line">	•更小的存储空间</span><br><span class="line">	•支持多个snapshot，对历史snapshot进行管理</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查看磁盘文件格式</span><br><span class="line">[root@kvm-server images]# qemu-img info /var/lib/libvirt/images/vm2.qcow2</span><br><span class="line">image: /var/lib/libvirt/images/vm2.qcow2</span><br><span class="line">file format: qcow2</span><br><span class="line">virtual size: 5.0G (5368709120 bytes)</span><br><span class="line">disk size: 5.0G</span><br><span class="line">cluster_size: 65536</span><br><span class="line">Format specific information:</span><br><span class="line">    compat: 1.1</span><br><span class="line">    lazy refcounts: true</span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# virsh snapshot-list  vm2   #查看某台虚拟机设备的快照</span><br><span class="line"> Name                 Creation Time             State</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">创建一块磁盘</span><br><span class="line">[root@kvm-server ~]# qemu-img create -f raw /var/lib/libvirt/images/vm2-1.raw 2G</span><br><span class="line">Formatting '/var/lib/libvirt/images/vm2-1.raw', fmt=raw size=2147483648 </span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# ll -h /var/lib/libvirt/images/vm2-1.raw</span><br><span class="line">-rw-r--r-- 1 root root 2.0G 10月 25 16:25 /var/lib/libvirt/images/vm2-1.raw</span><br><span class="line"></span><br><span class="line">将其添加到vm2虚拟机上面</span><br><span class="line">[root@kvm-server ~]# cd /etc/libvirt/qemu/</span><br><span class="line">[root@kvm-server qemu]# vim vm2.xml</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/1571997236706.png" alt="1571997236706"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@kvm-server images]# virsh define /etc/libvirt/qemu/vm2.xml</span><br><span class="line">[root@kvm-server images]# virsh start vm2</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@kvm-server qemu]# virsh snapshot-create-as vm2 vm2.snap1</span><br><span class="line">错误：不支持的配置：存储类型 vdb 不支持磁盘 raw 的内部快照</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘格式的转换</span><br><span class="line">由于raw的磁盘格式，不支持快照功能，我们需要将其转换为qcow2的格式</span><br><span class="line">[root@kvm-server qemu]# qemu-img convert -O qcow2 /var/lib/libvirt/images/vm2-1.raw  /var/lib/libvirt/images/vm2-1.qcow2</span><br><span class="line"></span><br><span class="line">[root@kvm-server qemu]# cd /var/lib/libvirt/images/</span><br><span class="line">[root@kvm-server images]# ll -h </span><br><span class="line">总用量 21G</span><br><span class="line">-rw------- 1 root root 5.1G 10月 24 18:59 centos7.0.qcow2</span><br><span class="line">-rw-r--r-- 1 root root 193K 10月 25 16:44 vm2-1.qcow2</span><br><span class="line">-rw-r--r-- 1 root root 2.0G 10月 25 16:25 vm2-1.raw</span><br><span class="line">-rw------- 1 root root 5.1G 10月 25 16:13 vm2.qcow2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@kvm-server images]# qemu-img info /var/lib/libvirt/images/vm2-1.qcow2</span><br><span class="line">image: /var/lib/libvirt/images/vm2-1.qcow2</span><br><span class="line">file format: qcow2</span><br><span class="line">virtual size: 2.0G (2147483648 bytes)</span><br><span class="line">disk size: 196K</span><br><span class="line">cluster_size: 65536</span><br><span class="line">Format specific information:</span><br><span class="line">    compat: 1.1</span><br><span class="line">    lazy refcounts: false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后去修改vm2虚拟机的磁盘格式和名称</span><br><span class="line">[root@kvm-server images]# vim /etc/libvirt/qemu/vm2.xml</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191030151040012.png" alt="image-20191030151040012"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@kvm-server images]# virsh define /etc/libvirt/qemu/vm2.xml</span><br><span class="line"></span><br><span class="line">创建快照</span><br><span class="line">[root@kvm-server qemu]# virsh snapshot-create-as vm2 vm2.snap2</span><br><span class="line">已生成域快照 vm2.snap2</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191030151139994.png" alt="image-20191030151139994"></p>
<p>然后我们开始做快照，图形化方式不再介绍</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">登录vm2的虚拟机：</span><br><span class="line">[root@vm2 ~]# mkdir /opt/test</span><br><span class="line">[root@kvm-server ~]# virsh snapshot-create-as vm2 vm2-snap3</span><br><span class="line">已生成域快照 vm2-snap3</span><br><span class="line"></span><br><span class="line">再次登录vm2的虚拟：</span><br><span class="line">[root@vm2 ~]# rm -rf /opt/test/</span><br><span class="line">[root@kvm-server ~]# virsh shutdown vm2</span><br><span class="line">[root@kvm-server ~]# virsh snapshot-create-as vm2 vm2-snap4</span><br><span class="line">已生成域快照 vm2-snap4</span><br><span class="line"></span><br><span class="line">查看快照</span><br><span class="line">[root@kvm-server ~]# virsh snapshot-list vm2 </span><br><span class="line"> 名称               生成时间              状态</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"> vm2-snap3            2019-10-30 15:27:15 +0800 running</span><br><span class="line"> vm2-snap4            2019-10-30 15:29:37 +0800 shutoff</span><br><span class="line"></span><br><span class="line">然后将vm2关闭，恢复到快照vm2.snap3</span><br><span class="line">[root@kvm-server ~]# virsh snapshot-revert vm2 vm2-snap3</span><br><span class="line">[root@kvm-server ~]# virsh start vm2</span><br><span class="line">Domain vm2 started</span><br><span class="line"></span><br><span class="line">在vm2虚拟机上查看</span><br><span class="line">[root@vm2 ~]# ls /opt/</span><br><span class="line">test</span><br><span class="line">可以再恢复到vm2.snap4测试一下</span><br><span class="line"></span><br><span class="line">删除虚拟机快照操作：</span><br><span class="line">[root@kvm-server ~]# virsh shutdown vm2</span><br><span class="line">[root@kvm-server ~]# virsh snapshot-list vm2</span><br><span class="line"> 名称               生成时间              状态</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"> vm2-snap3            2019-10-30 15:27:15 +0800 running</span><br><span class="line"> vm2-snap4            2019-10-30 15:29:37 +0800 shutoff</span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# virsh snapshot-delete --snapshotname vm2-snap3 vm2</span><br><span class="line">已删除域快照 vm2-snap3</span><br><span class="line"></span><br><span class="line">[root@kvm-server ~]# virsh snapshot-list vm2</span><br><span class="line"> 名称               生成时间              状态</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"> vm2-snap4            2019-10-30 15:27:15 +0800 running</span><br></pre></td></tr></table></figure>

<h2 id="kvm迁移（了解）"><a href="#kvm迁移（了解）" class="headerlink" title="kvm迁移（了解）"></a><strong>kvm迁移（了解）</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">最简单的方法：</span><br><span class="line">拷贝配置文件，磁盘</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">热迁移</span><br><span class="line"></span><br><span class="line">			  192.168.1.1/24	            192.168.1.2/24</span><br><span class="line">				++++++++++++            	++++++++++++</span><br><span class="line">				+			+			    +		    +		</span><br><span class="line">				+    KVM-A  +  =======&gt;     +	KVM-B 	+</span><br><span class="line">				+	    	+			    +	        +	</span><br><span class="line">				++++++++++++				++++++++++++</span><br><span class="line">			images                              images</span><br><span class="line">		/var/lib/libvirt/images	          /var/lib/libvirt/images</span><br></pre></td></tr></table></figure>

<h2 id="自动化脚本管理kvm（留时间给大家写）"><a href="#自动化脚本管理kvm（留时间给大家写）" class="headerlink" title="自动化脚本管理kvm（留时间给大家写）"></a>自动化脚本管理kvm（留时间给大家写）</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">kvm batch create vm tool</span></span><br><span class="line"><span class="meta">#</span><span class="bash">version:0.1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">author:name</span></span><br><span class="line"><span class="meta">#</span><span class="bash">需要事先准备模板镜像和配置文件模板</span></span><br><span class="line">echo "1.创建自定义配置单个虚拟机</span><br><span class="line">2.批量创建自定义配置虚拟机</span><br><span class="line">3.批量创建默认配置虚拟机</span><br><span class="line">4.删除虚拟机"</span><br><span class="line"></span><br><span class="line">read -p "选取你的操作(1/2/3):" op</span><br><span class="line"></span><br><span class="line">batch_self_define() &#123;</span><br><span class="line"></span><br><span class="line">        kvmname=`openssl rand -hex 5`</span><br><span class="line"></span><br><span class="line">        sourceimage=/var/lib/libvirt/images/vmmodel.img</span><br><span class="line">        sourcexml=/etc/libvirt/qemu/vmmodel.xml</span><br><span class="line"></span><br><span class="line">        newimg=/var/lib/libvirt/images/$&#123;kvmname&#125;.img</span><br><span class="line">        newxml=/etc/libvirt/qemu/$&#123;kvmname&#125;.xml</span><br><span class="line"></span><br><span class="line">        cp $sourceimage  $newimg</span><br><span class="line">        cp $sourcexml $newxml</span><br><span class="line"></span><br><span class="line">        kvmuuid=`uuidgen`</span><br><span class="line">        kvmmem=$&#123;1&#125;000000</span><br><span class="line">        kvmcpu=$2</span><br><span class="line">        kvmimg=$newimg</span><br><span class="line">        kvmmac=`openssl rand -hex 3 | sed -r 's/..\B/&amp;:/g'`</span><br><span class="line"></span><br><span class="line">        sed -i "s@kvmname@$kvmname@;s@kvmuuid@$kvmuuid@;s@kvmmem@$kvmmem@;s@kvmcpu@$kvmcpu@;s@kvmimg@$kvmimg@;s@kvmmac@$kvmmac@" $newxml</span><br><span class="line">        virsh define $newxml</span><br><span class="line">        virsh list --all</span><br><span class="line">&#125;</span><br><span class="line">self_define() &#123;</span><br><span class="line">        read -p "请输入新虚机名称:" newname</span><br><span class="line">        read -p "请输入新虚机内存大小(G):" newmem</span><br><span class="line">        read -p "请输入新虚机cpu个数:" newcpu</span><br><span class="line"></span><br><span class="line">        sourceimage=/var/lib/libvirt/images/vmmodel.img</span><br><span class="line">        sourcexml=/etc/libvirt/qemu/vmmodel.xml</span><br><span class="line"></span><br><span class="line">        newimg=/var/lib/libvirt/images/$&#123;newname&#125;.img</span><br><span class="line">        newxml=/etc/libvirt/qemu/$&#123;newname&#125;.xml</span><br><span class="line"></span><br><span class="line">        cp $sourceimage  $newimg</span><br><span class="line">        cp $sourcexml $newxml</span><br><span class="line"></span><br><span class="line">        kvmname=$newname</span><br><span class="line">        kvmuuid=`uuidgen`</span><br><span class="line">        kvmmem=$&#123;newmem&#125;000000</span><br><span class="line">        kvmcpu=$newcpu</span><br><span class="line">        kvmimg=$newimg</span><br><span class="line">        kvmmac=`openssl rand -hex 3 | sed -r 's/..\B/&amp;:/g'`</span><br><span class="line"></span><br><span class="line">        sed -i "s@kvmname@$kvmname@;s@kvmuuid@$kvmuuid@;s@kvmmem@$kvmmem@;s@kvmcpu@$kvmcpu@;s@kvmimg@$kvmimg@;s@kvmmac@$kvmmac@" $newxml</span><br><span class="line">        virsh define $newxml</span><br><span class="line">        virsh list --all</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $op in</span><br><span class="line">1)self_define;;</span><br><span class="line">2)</span><br><span class="line">        read -p "请输入要创建的虚拟机的个数:" num</span><br><span class="line">        read -p "请输入新虚机内存大小(G):" newmem</span><br><span class="line">        read -p "请输入新虚机cpu个数:" newcpu</span><br><span class="line"></span><br><span class="line">        for((i=1;i&lt;=$num;i++))</span><br><span class="line">        do</span><br><span class="line">                batch_self_define $newmem $newcpu</span><br><span class="line">        done;;</span><br><span class="line"></span><br><span class="line">3)</span><br><span class="line">        read -p "请输入要创建的虚拟机的个数:" num</span><br><span class="line"></span><br><span class="line">        for((i=1;i&lt;=$num;i++))</span><br><span class="line">        do</span><br><span class="line">                batch_self_define 1 1</span><br><span class="line">        done;;</span><br><span class="line"></span><br><span class="line">*)echo "输入错误，请重新执行脚本"</span><br><span class="line">  exit;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>

<p><strong>配置文件模板</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/libvirt/qemu/vmmodel.xml</span></span><br><span class="line">&lt;domain type='kvm'&gt;</span><br><span class="line">  &lt;name&gt;kvmname&lt;/name&gt;</span><br><span class="line">  &lt;uuid&gt;kvmuuid&lt;/uuid&gt;</span><br><span class="line">  &lt;memory unit='KiB'&gt;kvmmem&lt;/memory&gt;</span><br><span class="line">  &lt;currentMemory unit='KiB'&gt;kvmmem&lt;/currentMemory&gt;</span><br><span class="line">  &lt;vcpu placement='static'&gt;kvmcpu&lt;/vcpu&gt;</span><br><span class="line">  &lt;os&gt;</span><br><span class="line">    &lt;type arch='x86_64' machine='pc-i440fx-rhel7.0.0'&gt;hvm&lt;/type&gt;</span><br><span class="line">    &lt;boot dev='hd'/&gt;</span><br><span class="line">  &lt;/os&gt;</span><br><span class="line">  &lt;features&gt;</span><br><span class="line">    &lt;acpi/&gt;</span><br><span class="line">    &lt;apic/&gt;</span><br><span class="line">  &lt;/features&gt;</span><br><span class="line">  &lt;cpu mode='custom' match='exact' check='partial'&gt;</span><br><span class="line">    &lt;model fallback='allow'&gt;Haswell-noTSX&lt;/model&gt;</span><br><span class="line">  &lt;/cpu&gt;</span><br><span class="line">  &lt;clock offset='utc'&gt;</span><br><span class="line">    &lt;timer name='rtc' tickpolicy='catchup'/&gt;</span><br><span class="line">    &lt;timer name='pit' tickpolicy='delay'/&gt;</span><br><span class="line">    &lt;timer name='hpet' present='no'/&gt;</span><br><span class="line">  &lt;/clock&gt;</span><br><span class="line">  &lt;on_poweroff&gt;destroy&lt;/on_poweroff&gt;</span><br><span class="line">  &lt;on_reboot&gt;restart&lt;/on_reboot&gt;</span><br><span class="line">  &lt;on_crash&gt;destroy&lt;/on_crash&gt;</span><br><span class="line">  &lt;pm&gt;</span><br><span class="line">    &lt;suspend-to-mem enabled='no'/&gt;</span><br><span class="line">    &lt;suspend-to-disk enabled='no'/&gt;</span><br><span class="line">  &lt;/pm&gt;</span><br><span class="line">  &lt;devices&gt;</span><br><span class="line">    &lt;emulator&gt;/usr/libexec/qemu-kvm&lt;/emulator&gt;</span><br><span class="line">    &lt;disk type='file' device='disk'&gt;</span><br><span class="line">      &lt;driver name='qemu' type='qcow2'/&gt;</span><br><span class="line">      &lt;source file='kvmimg'/&gt;</span><br><span class="line">      &lt;target dev='vda' bus='virtio'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x0'/&gt;</span><br><span class="line">    &lt;/disk&gt;</span><br><span class="line">    &lt;controller type='usb' index='0' model='ich9-ehci1'&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x7'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;controller type='usb' index='0' model='ich9-uhci1'&gt;</span><br><span class="line">      &lt;master startport='0'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0' multifunction='on'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;controller type='usb' index='0' model='ich9-uhci2'&gt;</span><br><span class="line">      &lt;master startport='2'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x1'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;controller type='usb' index='0' model='ich9-uhci3'&gt;</span><br><span class="line">      &lt;master startport='4'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x2'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;controller type='pci' index='0' model='pci-root'/&gt;</span><br><span class="line">    &lt;controller type='virtio-serial' index='0'&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0'/&gt;</span><br><span class="line">    &lt;/controller&gt;</span><br><span class="line">    &lt;interface type='network'&gt;</span><br><span class="line">      &lt;mac address='52:54:00:kvmmac'/&gt;</span><br><span class="line">      &lt;source network='default'/&gt;</span><br><span class="line">      &lt;model type='virtio'/&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/&gt;</span><br><span class="line">    &lt;/interface&gt;</span><br><span class="line">    &lt;serial type='pty'&gt;</span><br><span class="line">      &lt;target type='isa-serial' port='0'&gt;</span><br><span class="line">        &lt;model name='isa-serial'/&gt;</span><br><span class="line">      &lt;/target&gt;</span><br><span class="line">    &lt;/serial&gt;</span><br><span class="line">    &lt;console type='pty'&gt;</span><br><span class="line">      &lt;target type='serial' port='0'/&gt;</span><br><span class="line">    &lt;/console&gt;</span><br><span class="line">    &lt;channel type='unix'&gt;</span><br><span class="line">      &lt;target type='virtio' name='org.qemu.guest_agent.0'/&gt;</span><br><span class="line">      &lt;address type='virtio-serial' controller='0' bus='0' port='1'/&gt;</span><br><span class="line">    &lt;/channel&gt;</span><br><span class="line">    &lt;input type='mouse' bus='ps2'/&gt;</span><br><span class="line">    &lt;input type='keyboard' bus='ps2'/&gt;</span><br><span class="line">    &lt;memballoon model='virtio'&gt;</span><br><span class="line">      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x07' function='0x0'/&gt;</span><br><span class="line">    &lt;/memballoon&gt;</span><br><span class="line">  &lt;/devices&gt;</span><br><span class="line">&lt;/domain&gt;</span><br></pre></td></tr></table></figure>

<p><strong>随机生成mac地址</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">其中方式如下：</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> `openssl rand -hex 1`:`openssl rand -hex 1`:`openssl rand -hex 1`</span></span><br><span class="line">99:6e:67</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> openssl rand -hex 3 | sed -r <span class="string">'s/(..)(..)(..)/\1:\2:\3/g'</span></span></span><br><span class="line">94:89:e3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> openssl rand -hex 3 | sed -r <span class="string">'s/..\B/&amp;:/g'</span></span></span><br><span class="line">c5:66:90</span><br></pre></td></tr></table></figure>

<p><strong>Centos设置输入法</strong></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191030165857060.png" alt="image-20191030165857060"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191030165907559.png" alt="image-20191030165907559"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191030165917440.png" alt="image-20191030165917440"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191030165929234.png" alt="image-20191030165929234"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191030165940597.png" alt="image-20191030165940597"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/kvm/image-20191030165949687.png" alt="image-20191030165949687"></p>
]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
      <tags>
        <tag>kvm</tag>
      </tags>
  </entry>
  <entry>
    <title>linux中yum被占用的解决办法</title>
    <url>/2020/08/22/linux%E4%B8%ADyum%E8%A2%AB%E5%8D%A0%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>Another app is currently holding the yum lock; waiting for it to exit…<br>  The other application is: yum<br>    Memory :  23 M RSS (414 MB VSZ)<br>    Started: Tue Mar 12 08:44:00 2019 - 1:20:21 ago<br>    State  : Traced/Stopped, pid: 8894</p>
<p>这时候其实是yum锁，就是你的yum被占用了</p>
<p>解决办法是干掉缓存中的yum进程，重启yum。</p>
<p>清掉缓存中的进程：</p>
<pre><code>rm -f /var/run/yum.pid</code></pre><p>重启yum：</p>
<p>系统是fedora</p>
<pre><code>systemctl status yum-updatesd.service</code></pre><p>centos用户使用：</p>
<pre><code>/sbin/service yum-updatesd restart</code></pre>]]></content>
  </entry>
  <entry>
    <title>mysql5.7的安装</title>
    <url>/2020/08/22/mysql5.7%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>扩展：在CentOS中默认安装有MariaDB，这个是MySQL的分支，但为了需要，还是要在系统中安装MySQL，而且安装完成之后可以直接覆盖掉MariaDB。</p>
<p>1 下载并安装MySQL官方的 Yum Repository</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span></span><br></pre></td></tr></table></figure>


<p>1.2 使用上面的命令就直接下载了安装用的Yum Repository，大概25KB的样子，然后就可以直接yum安装了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y install mysql57-community-release-el7-10.noarch.rpm</span></span><br></pre></td></tr></table></figure>

<p>1.3 开始安装MySQL服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y install mysql-community-server</span></span><br></pre></td></tr></table></figure>

<p>1.4 这步可能会花些时间，安装完成后就会覆盖掉之前的mariadb</p>
<p>至此MySQL就安装完成了，然后是对MySQL的一些设置。</p>
<p>2 MySQL数据库设置<br>2.1 首先启动MySQL</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl start  mysqld.service</span></span><br></pre></td></tr></table></figure>

<p>2.2 查看MySQL运行状态，运行状态如图</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl status mysqld.service</span></span><br></pre></td></tr></table></figure>

<p>2.3 此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep "password" /var/log/mysqld.log</span></span><br></pre></td></tr></table></figure>

<p>2.4 修改密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mysqladmin -uroot  -p“刚才查到的密码”     password "新密码"</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>nginxweb页面操作</title>
    <url>/2020/08/22/nginxweb%E9%A1%B5%E9%9D%A2%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="nginxweb页面操作反向代理，负载均衡，日志监控，网页上传"><a href="#nginxweb页面操作反向代理，负载均衡，日志监控，网页上传" class="headerlink" title="nginxweb页面操作反向代理，负载均衡，日志监控，网页上传"></a>nginxweb页面操作反向代理，负载均衡，日志监控，网页上传</h2><h3 id="第一步：安装jdk"><a href="#第一步：安装jdk" class="headerlink" title="第一步：安装jdk"></a>第一步：安装jdk</h3><h3 id="第二步：安装nginx"><a href="#第二步：安装nginx" class="headerlink" title="第二步：安装nginx"></a>第二步：安装nginx</h3><h3 id="第三步：安装nginxwebUI的jar包"><a href="#第三步：安装nginxwebUI的jar包" class="headerlink" title="第三步：安装nginxwebUI的jar包"></a>第三步：安装nginxwebUI的jar包</h3><p>官网：<em><a href="https://nginxwebui.gitee.io" target="_blank" rel="noopener">https://nginxwebui.gitee.io</a></em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;www.nginxwebui.cn&#x2F;download&#x2F;nginxWebUI-1.6.6.jar</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/08/22/nginxweb%E9%A1%B5%E9%9D%A2%E6%93%8D%E4%BD%9C/QQ%E6%88%AA%E5%9B%BE20200716165252.png" alt></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">启动程序：nohup java -jar -Xmx64m nginxWebUI-1.6.6.jar --server.port&#x3D;8080 --project.home&#x3D;&#x2F;home&#x2F;nginxWebUI&#x2F;    ----其实也可以放后台，如果不放后台就在复制一个终端进行操作</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/08/22/nginxweb%E9%A1%B5%E9%9D%A2%E6%93%8D%E4%BD%9C/QQ%E6%88%AA%E5%9B%BE20200716165443.png" alt></p>
<h3 id="第四步：登录web页面http-ip-8080"><a href="#第四步：登录web页面http-ip-8080" class="headerlink" title="第四步：登录web页面http://+ip:8080"></a>第四步：登录web页面http://+ip:8080</h3><p><img src= "/img/loading.gif" data-src="/2020/08/22/nginxweb%E9%A1%B5%E9%9D%A2%E6%93%8D%E4%BD%9C/QQ%E6%88%AA%E5%9B%BE20200716152904.png" alt></p>
<p><img src= "/img/loading.gif" data-src="/2020/08/22/nginxweb%E9%A1%B5%E9%9D%A2%E6%93%8D%E4%BD%9C/QQ%E6%88%AA%E5%9B%BE20200716153011.png" alt></p>
<p><img src= "/img/loading.gif" data-src="/2020/08/22/nginxweb%E9%A1%B5%E9%9D%A2%E6%93%8D%E4%BD%9C/QQ%E6%88%AA%E5%9B%BE20200716165755.png" alt></p>
]]></content>
  </entry>
  <entry>
    <title>python-面向对象编程</title>
    <url>/2020/07/27/python-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="面向对象编程介绍"><a href="#面向对象编程介绍" class="headerlink" title="面向对象编程介绍"></a>面向对象编程介绍</h2><h3 id="1、什么是对象和类OOP"><a href="#1、什么是对象和类OOP" class="headerlink" title="1、什么是对象和类OOP"></a>1、什么是对象和类OOP</h3><h4 id="1、从现实世界说起"><a href="#1、从现实世界说起" class="headerlink" title="1、从现实世界说起"></a>1、从现实世界说起</h4><h5 id="a、什么是对象"><a href="#a、什么是对象" class="headerlink" title="a、什么是对象"></a>a、什么是对象</h5><p>现实世界中，任何一个可见，可触及的物体都可以成为对象。</p>
<p>比如说一辆汽车，一个人，都可以称为对象。</p>
<p>那每个对象都是有属性和功能(或者说技能)的。<br>比如：<br>一辆汽车的属性有：</p>
<blockquote>
<ul>
<li>重量</li>
<li>具体的大小尺寸</li>
<li>车身颜色</li>
<li>价格</li>
</ul>
</blockquote>
<p>一辆汽车的功能有:</p>
<blockquote>
<ul>
<li>行驶</li>
<li>载人</li>
</ul>
</blockquote>
<h5 id="b、什么是类"><a href="#b、什么是类" class="headerlink" title="b、什么是类"></a>b、什么是类</h5><p>什么又是类呢？</p>
<p>听人们常说，<strong>物以类聚，人以群分</strong>。</p>
<p>从字里行间不难看出，类就是具体很多对象共有属性和共有功能的抽象体。</p>
<p>这个抽象体，只是一个称谓，代表了具有相同属性和功能的某些对象。</p>
<p>比如，具体的一辆汽车是一个对象，红色汽车就是这些具有红色车身的汽车的统称，红色汽车就是一个类了。</p>
<p>相关的例子还有很多，比如 蔬菜是一个类，一个具体的茄子是属于蔬菜这个类的。</p>
<blockquote>
<p>现实世界中是先有对象后有类的。</p>
</blockquote>
<h4 id="2、回到计算机的世界"><a href="#2、回到计算机的世界" class="headerlink" title="2、回到计算机的世界"></a>2、回到计算机的世界</h4><p>在计算机的代码中要表示对象的属性就是使用变量名 和数据的绑定方式。<br>如 <code>color = &#39;red&#39;</code></p>
<p>那要表示对象的功能(或者说技能)，在计算机的代码中是用函数实现的。这里的函数会被称为对象的 <code>方法</code></p>
<p>计算机世界中是先有类，后有对象的。</p>
<blockquote>
<p>就像建造一栋楼房，需要先有图纸，之后按照这个图纸建造房子。<br>在计算机语言中，都是先创建一个类，给这个类定义一些属性和方法。之后通过这个类去实例化出一个又一个的对象。</p>
</blockquote>
<h4 id="3、什么是面向对象的编程"><a href="#3、什么是面向对象的编程" class="headerlink" title="3、什么是面向对象的编程"></a>3、什么是面向对象的编程</h4><p>先说编程，个人理解，编程就是利用编程语言书写代码逻辑，来描述一些事件，在这个过程中会涉及到具体对象，具体的条件约束，以及事件的结果。</p>
<p>比如，现实世界中的一件事，学员学开车。</p>
<p>这里涉及到的对象有</p>
<ul>
<li>车</li>
<li>教练</li>
<li>学员</li>
<li>道路</li>
</ul>
<p>涉及到的技能有</p>
<ul>
<li>车 ：<ul>
<li>行驶</li>
</ul>
</li>
<li>教练 ：<ul>
<li>开车</li>
<li>教学员学开车</li>
</ul>
</li>
<li>学员：<ul>
<li>学习开车</li>
</ul>
</li>
</ul>
<p>当然所涉及到的东西，不止上面的这些，这里只是简单举例，表明原理即可。</p>
<p>假如想表述学员学开车这件事。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">学员跟着教练学习开车技能，使用的是绿色吉普汽车，之后他学会了开车。</span><br></pre></td></tr></table></figure>

<p>很简单是吧，但是，要在计算机中体现出来该怎么办呢？</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> 先定义每个对象的类，在类里定义各自对象的属性和方法</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> 通过类把对象创建处来，这个创建的过程成为实例化，实例化的结果成为这个类的一个实例，当然这个实例也是一个对象，一切皆对象嘛。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 利用实例的方法互相作用得到事件单结果。</span><br></pre></td></tr></table></figure>

<p>从最后一条不难发现， 每个对象的方法可以和其他对象进行交换作用的，从而也产生了新的结果。</p>
<p>这种用对象的方法和属性去相互作用来编写代码的逻辑思维或者说是编写代码的风格就是面向对象的编程了。</p>
<p>面向对象编程 Object Oriented Programming 简称 OOP，是一种程序设计思想。</p>
<p>OOP把对象作为程序的基本单元，一个对象包含了数据和操作数据的函数。</p>
<p>面向对象的程序设计是把计算机程序视为一组对象的集合，而且每个对象都可以接收其他对象发过来的消息，并处理这些消息，计算机程序的执行就是一系列消息在各个对象之间传递。这就是对象之间的交互。</p>
<h3 id="2、Python-中一切皆对象"><a href="#2、Python-中一切皆对象" class="headerlink" title="2、Python 中一切皆对象"></a>2、Python 中一切皆对象</h3><p>你可能听说过，在 Python 中一切皆对象。</p>
<p>在python中，一切皆对象。数字、字符串、元组、列表、字典、函数、方法、类、模块等等都是对象，包括你的代码。</p>
<p>之前也提到过，Python 中的对象都有三个特性</p>
<ul>
<li><strong>id</strong><br>标识了一个对象的唯一性，使用内置函数 <code>id()</code> 可以获取到</li>
<li><strong>类型</strong><br>表明了这个对象是属于哪个类， 使用内置函数 <code>type()</code> 可以获取到</li>
<li><strong>值</strong><br>就是这个对象的本身，可以使用内置函数 <code>print()</code> 看到，这个看到的是 Python 让你看到的一个对象特有的表现方式而已。</li>
</ul>
<h3 id="3、创建类"><a href="#3、创建类" class="headerlink" title="3、创建类"></a>3、创建类</h3><p>使用关键字 <code>class</code> 创建一个类。</p>
<p>类名其实和之前我们说的使用变量名的规则一样。</p>
<p>但是这里有一点儿要注意，就是类名的第一个字母需要大写，这是规范。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span><span class="params">()</span>:</span></span><br><span class="line">    color = <span class="string">'red'</span>    <span class="comment"># 属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span>   <span class="comment"># 方法 </span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">self 指的是类实例对象本身(注意：不是类本身)。</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sayhello</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'My name is:'</span>,self.name)</span><br><span class="line">        </span><br><span class="line">p = Person(<span class="string">'newrain'</span>)</span><br><span class="line">p.sayhello()</span><br><span class="line">print(p)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span>  <span class="comment">#构造函数</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sayhello</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'My name is:'</span>,self.name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age1</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'is age'</span>,self.age)</span><br><span class="line"></span><br><span class="line">p = Person(<span class="string">'newrain'</span>,<span class="string">'18'</span>)</span><br><span class="line">p.sayhello()</span><br><span class="line">p.age1()</span><br><span class="line">print(p)</span><br><span class="line"><span class="comment"># 注意变量名和函数名不要重复</span></span><br><span class="line"></span><br><span class="line">在上述例子中，self指向Person的实例p。 为什么不是指向类本身呢，如下例子：</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span>  <span class="comment">#构造函数</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sayhello</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'My name is:'</span>,self.name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age1</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'is age'</span>,self.age)</span><br><span class="line"></span><br><span class="line">p = Person(<span class="string">'newrain'</span>,<span class="string">'18'</span>)  <span class="comment"># p的实例对象（p的self）</span></span><br><span class="line">p.sayhello()</span><br><span class="line">p.age1()</span><br><span class="line"></span><br><span class="line">p1 = Person(<span class="string">'test'</span>,<span class="string">'18'</span>)  <span class="comment">#p1的实例对象地址 （p1的self）</span></span><br><span class="line">p1.sayhello()</span><br><span class="line">p1.age1()</span><br><span class="line"></span><br><span class="line">print(p)</span><br><span class="line">print(p1)</span><br><span class="line"></span><br><span class="line">如果self指向类本身，那么当有多个实例对象时，self指向哪一个呢？</span><br><span class="line"></span><br><span class="line">总结</span><br><span class="line">self 在定义时需要定义，但是在调用时会自动传入。</span><br><span class="line">self 的名字并不是规定死的，但是最好还是按照约定是用self</span><br><span class="line">self 总是指调用时的类的实例。</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#_*_ coding:utf-8 _*_</span></span><br><span class="line"><span class="comment"># 面向函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'name'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'i am %s'</span> % name)</span><br><span class="line"></span><br><span class="line">f1()</span><br><span class="line">f2(<span class="string">'lili'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 面向对象</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">foo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'name'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        print(<span class="string">'i am %s'</span> % name)</span><br><span class="line"></span><br><span class="line">obj = foo()</span><br><span class="line">obj.f1()</span><br><span class="line">obj.f2(<span class="string">'name'</span>)</span><br></pre></td></tr></table></figure>



<h3 id="4、实例化对象"><a href="#4、实例化对象" class="headerlink" title="4、实例化对象"></a>4、实例化对象</h3><p>使用 <code>类名()</code> 可以实例化一个对象，你可以使用给这个实例化的对象起一个名字。（根据类实例化对象）</p>
<p>定义类</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span><span class="params">()</span>:</span></span><br><span class="line">    color = <span class="string">'red'</span>  <span class="comment"># 属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">travel</span><span class="params">(self)</span>:</span>   <span class="comment"># 方法</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<p>实例化一个对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Car()  <span class="comment"># 没有起名字</span></span><br><span class="line"></span><br><span class="line">mycar = Car()  <span class="comment"># 起了个名字 mycar</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>由类实例化出的对象成为这个类的一个实例</p>
</blockquote>
<h3 id="5、属性"><a href="#5、属性" class="headerlink" title="5、属性"></a>5、属性</h3><p>类的属性分为类的数据属性（key=value）和函数属性</p>
<p>类的实例只有数据属性（key=value）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span></span><br><span class="line">    city = <span class="string">"BeiJing"</span>             <span class="comment"># 类的数据属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span>  <span class="comment"># 类的函数属性</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>类属性可以被类和对象调用, 是所有对象共享的</p>
<p>实例属性只能由对象调用</p>
</blockquote>
<h3 id="6、对象的初始化方法-init"><a href="#6、对象的初始化方法-init" class="headerlink" title="6、对象的初始化方法 __init__()"></a>6、对象的初始化方法 <code>__init__()</code></h3><p>对象的初始化方法是用于实例化对象时使用的。</p>
<p>方法的名称是固定的 <code>__init__()</code></p>
<p>当进行实例化的时候，此方法就会自动被调用。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 类的封装</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span>  <span class="comment"># 初始化方法</span></span><br><span class="line">        self.Name = name</span><br><span class="line">        self.Age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'&#123;&#125; is running'</span>.format(self.Name))</span><br><span class="line">        </span><br><span class="line"><span class="comment">#_*_ coding:utf-8 _*_</span></span><br><span class="line"><span class="comment"># 面向函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fetch</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#连接数据库，hostname，port ,user, pwd ,db,字符集，</span></span><br><span class="line">    <span class="comment">#打开数据连接</span></span><br><span class="line">    <span class="comment">#操作数据库链接</span></span><br><span class="line">    <span class="comment">#关闭</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modify</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#连接数据库，hostname，port ,user, pwd ,db,字符集，</span></span><br><span class="line">    <span class="comment">#打开数据连接</span></span><br><span class="line">    <span class="comment">#操作数据库链接</span></span><br><span class="line">    <span class="comment">#关闭</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#连接数据库，hostname，port ,user, pwd ,db,字符集，</span></span><br><span class="line">    <span class="comment">#打开数据连接</span></span><br><span class="line">    <span class="comment">#操作数据库链接</span></span><br><span class="line">    <span class="comment">#关闭</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#连接数据库，hostname，port ,user, pwd ,db,字符集，</span></span><br><span class="line">    <span class="comment">#打开数据连接</span></span><br><span class="line">    <span class="comment">#操作数据库链接</span></span><br><span class="line">    <span class="comment">#关闭</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果参数化也可以解决</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(hostname,port ,user, pwd ,db)</span>:</span></span><br><span class="line">    <span class="comment">#连接数据库，hostname，port ,user, pwd ,db,字符集，</span></span><br><span class="line">    <span class="comment">#打开数据连接</span></span><br><span class="line">    <span class="comment">#操作数据库链接</span></span><br><span class="line">    <span class="comment">#关闭</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 面向对象</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">foo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,hostname,port ,user, pwd ,db)</span>:</span> <span class="comment">#构造方法</span></span><br><span class="line">        self.hostname = hostname</span><br><span class="line">        self.port = port</span><br><span class="line">        <span class="comment">#...将所有的参数构造成方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fetch</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">modify</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        <span class="comment"># 连接 self.hostname,self.port  (直接调用构造函数的方法)</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">obj = foo(hostname,port,user,pwd,db)</span><br><span class="line">obj.create()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类的执行流程（封装）</span></span><br><span class="line"><span class="comment">#1，解释器从上往下执行，将类读到内存里</span></span><br><span class="line"><span class="comment">#2，获取类的各种方法，没有创建对象</span></span><br><span class="line"><span class="comment">#3，创建一个foo对象obj，类对象指针（python一切都是对象，对象就有创建他的类）</span></span><br><span class="line"><span class="comment">#4，把值传给了构造函数，保存在了构造函数里</span></span><br><span class="line"><span class="comment">#5，通过类对象指针指向foo类，调用里面的方法（简单理解还是变量，把类和对象关联起来）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#类里面要公用的字段统一封装到构造函数里，统一调用</span></span><br></pre></td></tr></table></figure>

<h3 id="7、方法"><a href="#7、方法" class="headerlink" title="7、方法"></a>7、方法</h3><p>凡是在类里定义的函数都都称为方法</p>
<p>方法本质上是函数，也是类的函数属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span>  <span class="comment"># 方法</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">talk</span><span class="params">(self)</span>:</span>  <span class="comment"># 方法 </span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="comment">#_*_ coding:utf-8 _*_</span></span><br><span class="line"><span class="comment">#游戏模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1、创建三个游戏人物，分别是：</span></span><br><span class="line"><span class="comment">#莎莎，女，18，初始战斗力1000</span></span><br><span class="line"><span class="comment">#浪浪，男，20，初始战斗力1800</span></span><br><span class="line"><span class="comment">#小爱，女，19，初始战斗力2500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># class Person:</span></span><br><span class="line"><span class="comment">#     def __init__(self, name, gen, age, fig):  # 构造函数</span></span><br><span class="line"><span class="comment">#         self.name = name</span></span><br><span class="line"><span class="comment">#         self.gender = gen</span></span><br><span class="line"><span class="comment">#         self.age = age</span></span><br><span class="line"><span class="comment">#         self.fight =fig</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># #创建角色</span></span><br><span class="line"><span class="comment"># obj1 = Person('莎莎','女',18,1000)</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="comment"># 内存里根据类，创建了3个对象，3个对象都指向同一个类</span></span><br><span class="line"><span class="comment"># 给游戏添加功能（聊天，打架）怎么添加</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, na, gen, age, fig)</span>:</span></span><br><span class="line">        self.name = na</span><br><span class="line">        self.gender = gen</span><br><span class="line">        self.age = age</span><br><span class="line">        self.fight = fig</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">grassland</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""注释：战斗，消耗200战斗力"""</span></span><br><span class="line">        self.fight = self.fight - <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">practice</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""注释：自我修炼，增长100战斗力"""</span></span><br><span class="line">        self.fight = self.fight + <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">war</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""注释：多人游戏，消耗500战斗力"""</span></span><br><span class="line">        self.fight = self.fight - <span class="number">500</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""注释：当前对象的详细情况"""</span></span><br><span class="line">        temp = <span class="string">"姓名:%s ; 性别:%s ; 年龄:%s ; 战斗力:%s"</span> % (self.name, self.gender, self.age, self.fight)</span><br><span class="line">        print(temp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建游戏角色</span></span><br><span class="line">obj1 = Person(<span class="string">'莎莎'</span>,<span class="string">'女'</span>,<span class="number">18</span>,<span class="number">1000</span>)</span><br><span class="line">obj1.grassland()</span><br><span class="line">obj1.practice()</span><br><span class="line">obj1.detail()</span><br><span class="line"></span><br><span class="line">obj1 = Person(<span class="string">'浪浪'</span>,<span class="string">'男'</span>,<span class="number">18</span>,<span class="number">2000</span>)</span><br><span class="line">obj1.grassland()</span><br><span class="line">obj1.detail()</span><br><span class="line"></span><br><span class="line">obj1 = Person(<span class="string">'小爱'</span>,<span class="string">'女'</span>,<span class="number">18</span>,<span class="number">10000</span>)</span><br><span class="line">obj1.grassland()</span><br><span class="line">obj1.detail()</span><br><span class="line"></span><br><span class="line"><span class="comment">#1, 通过obj2找到类，</span></span><br><span class="line"><span class="comment">#2，再通过类执行类里面的方法</span></span><br><span class="line"><span class="comment">#3，执行对应的方法，然后就是对自身属性的改变（减少增加）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 面向对象模板的实现过程（函数式编程做不到）</span></span><br><span class="line"><span class="comment"># 通过面向对象的类先创建模板，通过模板创建多个角色，</span></span><br><span class="line"><span class="comment"># 然后多个角色再来执行模板里面的方法</span></span><br><span class="line"><span class="comment"># 将内存里对象的属性进行改变</span></span><br></pre></td></tr></table></figure>

<p>方法可以被这个类的每个实例对象调用，当一个实例对象调用此方法的时候， <code>self</code> 会不自动传值，传入的值就是目前的 实例对象。</p>
<h3 id="8、魔法函数-str-实现定义类的实例的表现形式"><a href="#8、魔法函数-str-实现定义类的实例的表现形式" class="headerlink" title="8、魔法函数__str__() 实现定义类的实例的表现形式"></a>8、魔法函数<code>__str__()</code> 实现定义类的实例的表现形式</h3><p>当我们定义一个类的时候，默认打印出它实例时是不易读的，某些情况下我需要让这个类的实例的表现形式更易读。就可以使用 <code>__str__()</code> 这个方法。</p>
<p><strong>使用前</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        </span><br><span class="line">p = Person(<span class="string">'shark'</span>)</span><br><span class="line"></span><br><span class="line">print(p)</span><br><span class="line"><span class="comment"># &lt;__main__.Person object at 0x10ac290f0&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>使用后</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&#123;&#125;"</span>.format(self.name)</span><br><span class="line">p = Person(<span class="string">'shark'</span>)</span><br><span class="line"></span><br><span class="line">print(p)</span><br><span class="line"><span class="comment"># shark</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>其实，<code>__str__()</code> 方法本身在我们定义类的时候就已经存在了，是 Python 内置的。我们在这里只是有把这个方法重写了。<br>这个方法在使用的时候有<strong>返回值</strong>，且返回值必须是<strong>字符串</strong>类型</p>
</blockquote>
<h3 id="9、继承"><a href="#9、继承" class="headerlink" title="9、继承"></a>9、继承</h3><p>在现实世界中，类的继承，表现为我们可以把一个类的共同的属性和方法再进行一个高度的抽象，成为另一个类，这个被抽象出来的类成为父类，刚才被抽象的类成为子类。</p>
<p>但在计算机中，需要先定义一个父类，之后再定义其他的类（子类）并且继承父类。</p>
<p>这时子类即使什么也不用做，就会具备父类的所以属性(数据属性和函数属性）。这在计算机语言中就被称为<code>继承</code>。 继承并不是 Python 语言特有的，而是所有面向对象语言都有的特性。</p>
<p>面向对象语言的特性还有另外两个: <code>多态</code>, <code>封装</code>。</p>
<p><code>继承</code>、 <code>多态</code> 和 <code>封装</code> 被称为面向对象语言都三大特性。</p>
<p>这里我们先只对 <code>继承</code> 来讲解。</p>
<h4 id="1、单纯的继承"><a href="#1、单纯的继承" class="headerlink" title="1、单纯的继承"></a>1、单纯的继承</h4><p>(菱形继承)</p>
<p>下面我是定义了两个类 <code>Person</code> 和 <code>Teacher</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Teacher 继承了 Person</span><br></pre></td></tr></table></figure>

<p><code>Teacher</code> 被称为子类， <code>Person</code> 就是父类</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;self.name&#125;</span> is running'</span>)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">t = Teacher(<span class="string">'shark'</span>, <span class="string">'18'</span>)</span><br><span class="line">t.run()</span><br></pre></td></tr></table></figure>

<h4 id="2、添加新方法"><a href="#2、添加新方法" class="headerlink" title="2、添加新方法"></a>2、添加新方法</h4><p>在继承的时候，子类可以定义只属于自己的方法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;self.name&#125;</span> is running'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">talk</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f"<span class="subst">&#123;self.name&#125;</span> is talking..."</span>)</span><br><span class="line"></span><br><span class="line">t = Teacher(<span class="string">'shark'</span>, <span class="string">'18'</span>)</span><br><span class="line">t.talk()</span><br></pre></td></tr></table></figure>

<h4 id="3、覆盖方法（方法重写）"><a href="#3、覆盖方法（方法重写）" class="headerlink" title="3、覆盖方法（方法重写）"></a>3、覆盖方法（方法重写）</h4><p>在继承中，子类还可以把父类的方法重新实现一下。</p>
<p>就是定义一个和父类方法同名的方法，但是方法中代码不一样。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;self.name&#125;</span> is running'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f"<span class="subst">&#123;self.name&#125;</span> running on the road"</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">talk</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f"<span class="subst">&#123;self.name&#125;</span> is talking..."</span>)</span><br><span class="line"></span><br><span class="line">t = Teacher(<span class="string">'shark'</span>, <span class="string">'18'</span>)</span><br><span class="line">t.run()</span><br></pre></td></tr></table></figure>

<h4 id="4、添加属性"><a href="#4、添加属性" class="headerlink" title="4、添加属性"></a>4、添加属性</h4><p>在继承时，子类还可以为自己的实例对象添加实例的属性。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">3.6</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;self.name&#125;</span> is running'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name, age, lev)</span>:</span></span><br><span class="line">        super().__init__(name, age)</span><br><span class="line">        self.lev = lev</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t = Teacher(<span class="string">'shark'</span>, <span class="number">18</span>, <span class="number">5</span>)</span><br><span class="line">print(t.lev)</span><br><span class="line"><span class="number">3.7</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'&#123;&#125; is running'</span>.format(self.name))</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age,lev)</span>:</span></span><br><span class="line">        super(Teacher, self).__init__(name,age)</span><br><span class="line">        self.lev = lev</span><br><span class="line">t = Teacher(<span class="string">'morning'</span>,<span class="string">'18'</span>,<span class="number">5</span>)</span><br><span class="line">print(t.lev)</span><br></pre></td></tr></table></figure>

<h3 id="10、对象之间的互相作用"><a href="#10、对象之间的互相作用" class="headerlink" title="10、对象之间的互相作用"></a>10、对象之间的互相作用</h3><p>王者农药</p>
<p>在一个类中的方法中，可以通过给其传递相应的参数，从而对其他类的的实例对象进行操作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#_*_ coding:utf-8 _*_</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Master</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age,init_self=<span class="number">516</span>, mana=<span class="number">230</span>, attack_num=<span class="number">100</span>)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.init_self = init_self</span><br><span class="line">        self.init_mana = mana</span><br><span class="line">        self.attack_num = attack_num</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        self.init_mana = self.init_mana - <span class="number">20</span>  <span class="comment"># 210</span></span><br><span class="line">        <span class="comment">#print(self.init_mana)</span></span><br><span class="line">        obj_self_num = obj.init_self - self.attack_num  <span class="comment"># 516-90=426</span></span><br><span class="line">        obj.init_self = obj_self_num     <span class="comment">#426</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&#123;&#125;"</span>.format(self.init_mana)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Soldier</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age,init_self=<span class="number">960</span>, attack_num=<span class="number">90</span>)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.init_self = init_self</span><br><span class="line">        self.attack_num = attack_num</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        obj_self_num = obj.init_self - self.attack_num   <span class="comment">#960-100=860</span></span><br><span class="line">        obj.init_self = obj_self_num   <span class="comment">#860</span></span><br><span class="line">m = Master(<span class="string">'貂蝉'</span>, <span class="number">18</span>)</span><br><span class="line">print(m)</span><br><span class="line"></span><br><span class="line">s = Soldier(<span class="string">"阿轲"</span>, <span class="number">30</span>)</span><br><span class="line"><span class="comment">#s.attack()</span></span><br><span class="line"><span class="comment"># 貂蝉攻击 阿轲， 把被攻击的对象 s 作为实参传给 m 对象的方法 `attack`</span></span><br><span class="line">m.attack(s)</span><br><span class="line">s.attack(m)</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">print(s.init_self)</span><br><span class="line">print(m.init_self)</span><br><span class="line">print(m.init_mana)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat隐藏404页面中的版本号</title>
    <url>/2020/08/22/tomcat%E9%9A%90%E8%97%8F404%E9%A1%B5%E9%9D%A2%E4%B8%AD%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;application&#x2F;tomcat&#x2F;lib   &#x2F;&#x2F;进入tomcat安装路径下的lib</span><br><span class="line"></span><br><span class="line">mkdir -p org&#x2F;apache&#x2F;catalina&#x2F;util  &#x2F;&#x2F;创建文件夹</span><br><span class="line"></span><br><span class="line">cd org&#x2F;apache&#x2F;catalina&#x2F;util  </span><br><span class="line"></span><br><span class="line">vim ServerInfo.properties  &#x2F;&#x2F;创建自定义版本文件</span><br><span class="line"></span><br><span class="line">server.info&#x3D;Apache Tomcat Version X</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd &#x2F;data&#x2F;application&#x2F;tomcat&#x2F;bin</span><br><span class="line"></span><br><span class="line">.&#x2F;catalina.sh stop</span><br><span class="line"></span><br><span class="line">.&#x2F;catalina.sh start</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200618101131473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>yum安装zabbix4.4版本，并配置proxy代理</title>
    <url>/2020/08/22/yum%E5%AE%89%E8%A3%85zabbix4.4%E7%89%88%E6%9C%AC%EF%BC%8C%E5%B9%B6%E9%85%8D%E7%BD%AEproxy%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="一、-安装环境及版本信息"><a href="#一、-安装环境及版本信息" class="headerlink" title="一、 安装环境及版本信息"></a>一、 安装环境及版本信息</h2><p>操作系统:centos7.4<br>zabbix版本: 4.4<br>mariadb 5.5</p>
<p>共三台<br>192.168.245.132 zabbix-server<br>192.168.245.133 zabbix-proxy<br>192.168.245.134 zabbix-node1</p>
<h2 id="二、zabbix-server安装（192-168-245-132）"><a href="#二、zabbix-server安装（192-168-245-132）" class="headerlink" title="二、zabbix server安装（192.168.245.132）"></a>二、zabbix server安装（192.168.245.132）</h2><p>安装yum源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -Uvh https:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;4.4&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-4.4-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum -y install epel-release  </span><br><span class="line"></span><br><span class="line">yum install zabbix-server-mysql zabbix-web-mysql zabbix-nginx-conf  -y</span><br></pre></td></tr></table></figure>


<p>注意：如果出现yum安装不了，是由于yum源地址为国外的，可以修改/etc/yum.repos.d/zabbix.repo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[zabbix]</span><br><span class="line">name&#x3D;Zabbix Official Repository - $basearch</span><br><span class="line">#baseurl&#x3D;http:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;4.4&#x2F;rhel&#x2F;7&#x2F;$basearch&#x2F;</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;zabbix&#x2F;zabbix&#x2F;4.4&#x2F;rhel&#x2F;7&#x2F;$basearch</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIX-A14FE591</span><br><span class="line">skip_if_unavailable &#x3D; 1</span><br><span class="line">keepcache &#x3D; 0</span><br><span class="line"></span><br><span class="line">[zabbix-debuginfo]</span><br><span class="line">name&#x3D;Zabbix Official Repository debuginfo - $basearch</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;4.4&#x2F;rhel&#x2F;7&#x2F;$basearch&#x2F;debuginfo&#x2F;</span><br><span class="line">enabled&#x3D;0</span><br><span class="line">gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIX-A14FE591</span><br><span class="line">gpgcheck&#x3D;1</span><br></pre></td></tr></table></figure>
<p>mariadb安装（192.168.245.132）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install mariadb mariadb-server</span><br><span class="line">systemctl start mariadb</span><br><span class="line">密码可改可不改，修改密码命令如下：</span><br><span class="line">mysqladmin -uroot  password  ‘密码’</span><br></pre></td></tr></table></figure>

<p> 创建zabbix库：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database zabbix character set utf8 collate utf8_bin;</span><br></pre></td></tr></table></figure>

<p>授权：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant all privileges on zabbix.* to zabbix@&#39;%&#39; identified by &#39;zabbix&#39;;</span><br><span class="line">完成后先用本机使用zabbix登录测试一下，如果拒绝连接，再授权一下</span><br><span class="line">grant all privileges on zabbix.* to zabbix@&#39;localhost‘ identified by &#39;zabbix&#39;;</span><br></pre></td></tr></table></figure>
<p> 刷新权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<p>导入数据到zabbix，密码为刚才创建zabbix用户的密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zcat &#x2F;usr&#x2F;share&#x2F;doc&#x2F;zabbix-server-mysql*&#x2F;create.sql.gz |  mysql -uzabbix-p  zabbix</span><br></pre></td></tr></table></figure>
<p>配置zabbix_server</p>
<p>1、修改配置<br>#vim /etc/zabbix/zabbix_server.conf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DBHost&#x3D;192.168.245.132</span><br><span class="line">DBName&#x3D;zabbix</span><br><span class="line">DBUser&#x3D;zabbix</span><br><span class="line">DBPassword&#x3D;zabbix</span><br></pre></td></tr></table></figure>


<p>3、修改时区：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;zabbix.conf</span><br></pre></td></tr></table></figure>

<p>打开注释并修改配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php_value date.timezone Asia&#x2F;Shanghai</span><br></pre></td></tr></table></figure>

<p>启动apache</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start httpd.service</span><br></pre></td></tr></table></figure>

<p>启动zabbix server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start zabbix-server.service</span><br></pre></td></tr></table></figure>

<p>访问： http:ip/zabbix  </p>
<h2 id="三、zabbix-proxy-192-168-245-133-部署"><a href="#三、zabbix-proxy-192-168-245-133-部署" class="headerlink" title="三、zabbix proxy(192.168.245.133) 部署:"></a>三、zabbix proxy(192.168.245.133) 部署:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -Uvh https:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;4.4&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-4.4-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line">yum install zabbix-proxy-mysql.x86_64 zabbix-agent.x86_64 zabbix-sender</span><br></pre></td></tr></table></figure>
<p>安装mariadb，与132主机一致</p>
<p> 创建zabbix库：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database zabbix_proxy character set utf8 collate utf8_bin;</span><br></pre></td></tr></table></figure>

<p> 授权：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant all privileges on zabbix_proxy.* to zabbix@&#39;%&#39; identified by &#39;zabbix&#39;;</span><br><span class="line">grant all privileges on zabbix_proxy.* to zabbix@&#39;localhost&#39; identified by &#39;zabbix&#39;;</span><br></pre></td></tr></table></figure>

<p>刷新权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<p>#部署mariadb步骤和在zabbix server中部署一样，区别在导入数据时候不一样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zcat &#x2F;usr&#x2F;share&#x2F;doc&#x2F;zabbix-proxy-mysql*&#x2F;schema.sql.gz | mysql -uroot -p zabbix_proxy</span><br></pre></td></tr></table></figure>

<p>#修改zabbix-proxy配置：vim /etc/zabbix/zabbix_proxy.conf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server&#x3D;192.168.245.132            # 真正的服务端(zabbix server)</span><br><span class="line">Hostname&#x3D;zabbix-proxy             # proxy的hostname，在web端网页配置时需要用到</span><br><span class="line">DBHost&#x3D;192.168.245.133            # 数据库，使用本地，也可以使用ip，我喜欢使用localhost，因为我授权就是本地，也因为配置ip失败踩过坑</span><br><span class="line">DBName&#x3D;zabbix_proxy               # 数据库名称，创建zabbix-proxy的mysql的数据库名称</span><br><span class="line">DBUser&#x3D;zabbix                     # 用户</span><br><span class="line">DBPassword&#x3D;zabbix                 # 密码</span><br><span class="line">ConfigFrequency&#x3D;30            # 这个好像是同步配置文件的时间</span><br><span class="line">DataSenderFrequency&#x3D;1             # 这个是proxy端向server端发送数据的时间，单位是秒，几乎等于实时同步</span><br></pre></td></tr></table></figure>

<p>启动zabbix-proxy </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start mariadb</span><br><span class="line">systemctl start zabbix-proxy.service</span><br></pre></td></tr></table></figure>

<h2 id="四、zabbix客户端安装（192-168-245-134）"><a href="#四、zabbix客户端安装（192-168-245-134）" class="headerlink" title="四、zabbix客户端安装（192.168.245.134）"></a>四、zabbix客户端安装（192.168.245.134）</h2><p>#添加yum源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -Uvh https:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;4.4&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-4.4-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure>

<p>#安装<br>安装失败或者很慢的话修改yum源，参考步骤二</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install zabbix-agent</span><br></pre></td></tr></table></figure>
<p>修改配置(/etc/zabbix/zabbix_agentd.conf)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server&#x3D;[zabbix server&#x2F;zabbix proxy ip]</span><br><span class="line">ServerActive&#x3D;[zabbix server&#x2F;zabbix proxy ip]</span><br><span class="line">Hostname&#x3D;[ Hostname of client system ]</span><br><span class="line"> 例：</span><br><span class="line">Server&#x3D;192.168.245.133</span><br><span class="line">ServerActive&#x3D;192.168.245.133</span><br><span class="line">Hostname&#x3D;zabbix-node1</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start zabbix-agent</span><br></pre></td></tr></table></figure>


<p>zabbix server与zabbix proxy的配置的同步是有延时的，如果需要立即同步可以手动执行命令:<br>zabbix_proxy -c /etc/zabbix/zabbix_proxy.conf  -R config_cache_reload</p>
<p>在web端配置代理<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200630102944513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直到代理出现<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200630103016460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>配置主机，使用代理服务器<br>’<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200630103142310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>创建监控项</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200630103224444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>完成</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200630103249227.png" alt="在这里插入图片描述"><br>有时候可用性出现的慢，等待一会，或者重启服务，还是不出现的话查看日志，查看是否配置出现问题。</p>
]]></content>
  </entry>
  <entry>
    <title>yum安装的keepalived 使用systemctl无法停掉其后台进程</title>
    <url>/2020/08/22/yum%E5%AE%89%E8%A3%85%E7%9A%84keepalived%20%E4%BD%BF%E7%94%A8systemctl%E6%97%A0%E6%B3%95%E5%81%9C%E6%8E%89%E5%85%B6%E5%90%8E%E5%8F%B0%E8%BF%9B%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>我使用的是阿里源，yum安装的keepalived</p>
<p>问题：<br>        起初是测试vip漂移时候发现，主备节点都开启keepalived的状况下，一切正常，master的vip也可以访问，当停掉master的keepalived时，发现vip无法漂移到slave，检查进程时，发现keepalived的进程依然还在。</p>
<p>解决方法：</p>
<p> 1、这时候想到应该是systemd启动服务脚本的问题，查看keepalived的启动service文件<br>路径：vim   /usr/lib/systemd/system/keepalived.service<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200420131752257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>2、注释掉一行<br>KillMode=process的大致意思是当停止keepalived的时候只会停掉主进程，而主进程产生的子进程是不会被干掉的。而killmode的默认值是control-group，意思时所有进程都会被干掉，我这里选择把这项注释掉。</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200420132007985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="技术分享图片"><br>3、重载配置</p>
<pre><code>systemctl daemon-reload</code></pre><p>之后在使用systemctl stop keepalived就不会出现进程还在的情况了</p>
]]></content>
  </entry>
  <entry>
    <title>使用PXE+kickstart无人值守安装服务</title>
    <url>/2020/08/22/%E4%BD%BF%E7%94%A8PXE+kickstart%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="使用PXE-kickstart无人值守安装服务"><a href="#使用PXE-kickstart无人值守安装服务" class="headerlink" title="使用PXE+kickstart无人值守安装服务"></a><strong>使用PXE+kickstart无人值守安装服务</strong></h1><p>​        使用光盘镜像来安装Linux系统的方法，该方法适用于只安装少量Linux系统的情况。如果生产环境中有数百台服务器都需要安装系统，这种方式就不合时宜了。这时，我们就需要使用PXE + TFTP +HTTP + DHCP + Kickstart服务搭建出一个无人值守安装系统。这种无人值守安装系统可以自动地为数十台服务器安装系统，这一方面将运维人员从重复性的工作中解救出来，也大大提升了系统安装的效率。</p>
<p>​       PXE（Preboot eXecute Environment，预启动执行环境）是由Intel公司开发的技术，可以让计算机通过网络来启动操作系统（前提是计算机上安装的网卡支持PXE技术），主要用于在无人值守安装系统中引导客户端主机安装Linux操作系统。Kickstart是一种无人值守的安装方式，其工作原理是预先把原本需要运维人员手工填写的参数保存成一个ks.cfg文件，当安装过程中需要填写参数时则自动匹配Kickstart生成的文件。所以只要Kickstart文件包含了安装过程中需要人工填写的所有参数，那么从理论上来讲完全不需要运维人员的干预。</p>
<p><strong>所需配置服务及安装包</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DHCP        <span class="comment">#获取IP地址,并提供pxelinux.0文件位置</span></span><br><span class="line">TFTP            <span class="comment">#支持PXE下载内核引导文件</span></span><br><span class="line">HTTP        <span class="comment">#下载ks.cfg以及系统镜像文件</span></span><br><span class="line">Syslinux        <span class="comment">#提供引导文件</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld #关闭防火墙selinux</span><br><span class="line"></span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>

<p><strong>配置DHCP服务</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install dhcp</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/dhcp/dhcpd.conf</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">subnet 192.168.91.0 netmask 255.255.255.0 &#123;</span><br><span class="line">range 192.168.91.100 192.168.91.199;</span><br><span class="line">option subnet-mask 255.255.255.0;</span><br><span class="line">default-lease-time 21600;</span><br><span class="line">max-lease-time 43200;</span><br><span class="line">next-server 192.168.91.140;</span><br><span class="line">filename "/pxelinux.0";</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##启动dhcp服务</span></span><br><span class="line">systemctl start dhcpd</span><br><span class="line"><span class="comment">##开机自启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> dhcpd</span><br><span class="line"><span class="comment">##查看有无端口</span></span><br><span class="line">netstat -lntup|grep dhcpd</span><br></pre></td></tr></table></figure>

<p><strong>配置TFTP服务</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install tftp-server</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;xinetd.d&#x2F;tftp</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service tftp</span><br><span class="line">&#123;</span><br><span class="line">        socket_type             = dgram</span><br><span class="line">        protocol                = udp</span><br><span class="line">        wait                    = yes</span><br><span class="line">        user                    = root</span><br><span class="line">        server                  = /usr/sbin/in.tftpd</span><br><span class="line">        server_args             = -s /var/lib/tftpboot</span><br><span class="line">        disable                 = no   #此处由yes 改为no</span><br><span class="line">        per_source              = 11</span><br><span class="line">        cps                     = 100 2</span><br><span class="line">        flags                   = IPv4</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart tftp</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable tftp</span><br></pre></td></tr></table></figure>

<p><strong>配置HTTP服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br></pre></td></tr></table></figure>

<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">##创建挂载点</span></span><br><span class="line">mkdir –p /media/cdrom</span><br><span class="line"><span class="meta">##挂载CentOS7光盘</span></span><br><span class="line">mount /dev/cdrom /media/cdrom</span><br><span class="line">mkdir -p /<span class="keyword">var</span>/www/html/centos/<span class="number">7</span>/x86_64</span><br><span class="line"><span class="meta">##绑定挂载到http默认目录下</span></span><br><span class="line">mount --bind /media/cdrom /<span class="keyword">var</span>/www/html/centos/<span class="number">7</span>/x86_64</span><br><span class="line"></span><br><span class="line">使用浏览器访问，进行测试。</span><br></pre></td></tr></table></figure>

<p><strong>配置SYSLinux服务</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install syslinux</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;lib&#x2F;tftpboot</span><br><span class="line">cp &#x2F;usr&#x2F;share&#x2F;syslinux&#x2F;pxelinux.0 .</span><br><span class="line">cp &#x2F;media&#x2F;cdrom&#x2F;images&#x2F;pxeboot&#x2F;&#123;vmlinuz,initrd.img&#125; .</span><br><span class="line">cp &#x2F;media&#x2F;cdrom&#x2F;isolinux&#x2F;&#123;vesamenu.c32,boot.msg&#125; .</span><br><span class="line">mkdir pxelinux.cfg</span><br><span class="line">cp &#x2F;media&#x2F;cdrom&#x2F;isolinux&#x2F;isolinux.cfg pxelinux.cfg&#x2F;default</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim pxelinux.cfg/default #修改内容与行数如下</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1  default linux</span><br><span class="line">64 append initrd=initrd.img inst.stage2=ftp://192.168.10.10 ks=ftp://192.168.10.10/pub/ks.cfg quiet</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##开机自启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> tftp</span><br><span class="line"><span class="comment">##启动tftp</span></span><br><span class="line">systemctl start tftp</span><br></pre></td></tr></table></figure>

<p><strong>配置kickstart的 ks.cfg文件</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;var&#x2F;www&#x2F;html&#x2F;ks</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;var&#x2F;www&#x2F;html&#x2F;ks&#x2F;ks.cfg</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Kickstart Configurator <span class="keyword">for</span> CentOS 7 by Mine</span></span><br><span class="line"><span class="meta">#</span><span class="bash">version=DEVEL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> System authorization information</span></span><br><span class="line">auth --enableshadow --passalgo=sha512</span><br><span class="line"><span class="meta">#</span><span class="bash"> Use CDROM installation media</span></span><br><span class="line"><span class="meta">#</span><span class="bash">cdrom</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install OS instead of upgrade</span></span><br><span class="line">install</span><br><span class="line"><span class="meta">#</span><span class="bash"> Use network installation</span></span><br><span class="line">url --url=http://10.0.0.61/centos/7/x86_64</span><br><span class="line"><span class="meta">#</span><span class="bash"> Use graphical install</span></span><br><span class="line">graphical</span><br><span class="line"><span class="meta">#</span><span class="bash"> Run the Setup Agent on first boot</span></span><br><span class="line">firstboot --enable</span><br><span class="line"><span class="meta">#</span><span class="bash">ignoredisk --only-use=sda</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Keyboard layouts</span></span><br><span class="line">keyboard --vckeymap=cn --xlayouts='cn'</span><br><span class="line"><span class="meta">#</span><span class="bash"> System language</span></span><br><span class="line">lang zh_CN.UTF-8</span><br><span class="line"><span class="meta">#</span><span class="bash"> Network information</span></span><br><span class="line"><span class="meta">#</span><span class="bash">network  --bootproto=static --device=eth0 --gateway=10.0.0.254 --ip=10.0.0.100 --nameserver=223.5.5.5 --netmask=255.255.255.0 --activate </span></span><br><span class="line"><span class="meta">#</span><span class="bash">network  --bootproto=static --device=eth1 --ip=172.16.1.100 --netmask=255.255.255.0 --activate</span></span><br><span class="line">network  --bootproto=dhcp --device=eth0 --onboot=off --ipv6=auto</span><br><span class="line">network  --hostname=hostname</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Root password</span></span><br><span class="line">rootpw --iscrypted $1$$GmbL3iXOMZR57QuGDLv.L1</span><br><span class="line"><span class="meta">#</span><span class="bash">perl -e <span class="string">'print crypt("123",q($1$)),"\n"'</span> 使用的密码为123 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> System timezone</span></span><br><span class="line">timezone Asia/Shanghai --isUtc</span><br><span class="line"><span class="meta">#</span><span class="bash"> System bootloader configuration</span></span><br><span class="line">bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda</span><br><span class="line">autopart --type=lvm</span><br><span class="line"><span class="meta">#</span><span class="bash"> Partition clearing information</span></span><br><span class="line">clearpart --none --initlabel</span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">packages</span></span><br><span class="line">@^minimal</span><br><span class="line">@core</span><br><span class="line">kexec-tools</span><br><span class="line">vim</span><br><span class="line">wget</span><br><span class="line">httpd</span><br><span class="line"><span class="meta">%</span><span class="bash">end</span></span><br><span class="line"><span class="meta">%</span><span class="bash">addon com_redhat_kdump --<span class="built_in">enable</span> --reserve-mb=<span class="string">'auto'</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash">end</span></span><br><span class="line">selinux --disabled</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">失败原因：</span><br><span class="line"></span><br><span class="line">IP地址、路径错误</span><br><span class="line"></span><br><span class="line">虚拟机内存不足</span><br><span class="line"></span><br><span class="line">服务未启动</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>在centos中zabbix实现163邮箱报警</title>
    <url>/2020/08/22/%E5%9C%A8centos%E4%B8%ADzabbix%E5%AE%9E%E7%8E%B0163%E9%82%AE%E7%AE%B1%E6%8A%A5%E8%AD%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>1、首先登陆163邮箱，开启smtp服务，获取授权码并保存<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430084916503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2、在zabbix中管理报警媒介<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430085041221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>两种都可以<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200630100157701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3、用户绑定报警媒介<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430085206243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用户可以自己创建或者使用系统默认的<br>4、创建主机，监控项，触发器<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430085343263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5、创建报警动作<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430085659792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430085636786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430085519867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>6、关闭tomcat，查看是否有邮箱报警<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430085611289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>使用UnblockNeteaseMusic播放网易云音乐客户端无版权歌曲</title>
    <url>/2020/08/22/%E4%BD%BF%E7%94%A8UnblockNeteaseMusic%E6%92%AD%E6%94%BE%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%97%A0%E7%89%88%E6%9D%83%E6%AD%8C%E6%9B%B2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="使用UnblockNeteaseMusic播放网易云音乐客户端无版权歌曲"><a href="#使用UnblockNeteaseMusic播放网易云音乐客户端无版权歌曲" class="headerlink" title="使用UnblockNeteaseMusic播放网易云音乐客户端无版权歌曲"></a>使用UnblockNeteaseMusic播放网易云音乐客户端无版权歌曲</h1><h3 id="linux下yum安装node和npm"><a href="#linux下yum安装node和npm" class="headerlink" title="linux下yum安装node和npm"></a>linux下yum安装node和npm</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install epel-release -y</span><br><span class="line">yum install nodejs -y</span><br></pre></td></tr></table></figure>

<h3 id="运行UnblockNeteaseMusic"><a href="#运行UnblockNeteaseMusic" class="headerlink" title="运行UnblockNeteaseMusic"></a>运行UnblockNeteaseMusic</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;nondanee&#x2F;UnblockNeteaseMusic.git</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd UnblockNeteaseMusic</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure>

<h3 id="开机自启脚本，服务"><a href="#开机自启脚本，服务" class="headerlink" title="开机自启脚本，服务"></a>开机自启脚本，服务</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;UnblockNeteaseMusic.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description&#x3D;UnblockNeteaseMusic</span><br><span class="line">After&#x3D;network.target</span><br><span class="line">Wants&#x3D;network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;simple</span><br><span class="line">PIDFile&#x3D;&#x2F;var&#x2F;run&#x2F;UnblockNeteaseMusic.pid</span><br><span class="line">WorkingDirectory&#x3D;&#x2F;home&#x2F;UnblockNeteaseMusic</span><br><span class="line">ExecStart&#x3D;$(command -v node) app.js</span><br><span class="line">RestartPreventExitStatus&#x3D;23</span><br><span class="line">Restart&#x3D;always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>



<h3 id="这里可以自定义端口"><a href="#这里可以自定义端口" class="headerlink" title="这里可以自定义端口"></a>这里可以自定义端口</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node app.js -p 端口号</span><br></pre></td></tr></table></figure>

<h3 id="运行脚本并开机自启"><a href="#运行脚本并开机自启" class="headerlink" title="运行脚本并开机自启"></a>运行脚本并开机自启</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start UnblockNeteaseMusic</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable UnblockNeteaseMusic</span><br></pre></td></tr></table></figure>

<p>注：要关闭防火墙 systemctl stop firewalld</p>
<p>setenforce 0  关闭selinux</p>
<p>网易云代理设置方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">网易云客户端设置 &gt; 工具 &gt; 自定义代理 &gt; HTTP代理</span><br><span class="line">这里只需要填上你的服务器ip和端口，保存即可。</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>安装percona-xtrabackup时冲突报错</title>
    <url>/2020/08/22/%E5%AE%89%E8%A3%85percona-xtrabackup%E6%97%B6%E5%86%B2%E7%AA%81%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>环境：<br>centos+ mysql-community-5.7</p>
<pre><code>[root@mysql-02 ~]# cat /etc/redhat-release
CentOS Linux release 7.3.1611 (Core)
[root@mysql-lh02 ~]# rpm -qa | grep -i mysql
perl-DBD-MySQL-4.023-5.el7.x86_64
mysql-community-client-5.7.19-1.el7.x86_64
mysql-community-libs-compat-5.7.19-1.el7.x86_64
mysql-community-common-5.7.19-1.el7.x86_64
mysql-community-server-5.7.19-1.el7.x86_64</code></pre><p>安装percona-xtrabackup时冲突报错</p>
<pre><code># yum install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm
.....

            Running transaction check
            Running transaction test
            Transaction check error:
              file /etc/my.cnf from install of Percona-Server-shared-56-5.6.37-rel82.2.el7.x86_64 conflicts with file from package mysql-community-server-5.7.19-1.el7.x86_64

Error Summary
-------------</code></pre><p>解决办法：</p>
<p>补充安装</p>
<p>包地址:<a href="https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/" target="_blank" rel="noopener">https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/</a></p>
<pre><code># rpm -ivh mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpm
Preparing...                          ################################# [100%]
Updating / installing...
   1:mysql-community-libs-compat-5.7.1################################# [100%]</code></pre><p>然后再次安装percona-xtrabackup成功</p>
<pre><code># yum -y install percona-xtrabackup-24.x86_64</code></pre>]]></content>
  </entry>
  <entry>
    <title>安装zabbix，配置官方repo源下载速度过慢导致失败解决方法</title>
    <url>/2020/08/20/%E5%AE%89%E8%A3%85zabbix%EF%BC%8C%E9%85%8D%E7%BD%AE%E5%AE%98%E6%96%B9repo%E6%BA%90%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2%E5%AF%BC%E8%87%B4%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>根据官网说明配置的yum源，用yum下载Zabbix时报错的解决方法。</p>
<h2 id="一、报错如下："><a href="#一、报错如下：" class="headerlink" title="一、报错如下："></a>一、报错如下：</h2><p><strong>过程：</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200426114937433.png" alt="rpm -ivh http://repo.zabbix.com/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-2.el7.noarch.rpm"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200426115007558.png" alt="在这里插入图片描述"><br><strong>结果报错：</strong></p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200426114718441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="二、-解决方法："><a href="#二、-解决方法：" class="headerlink" title="二、 解决方法："></a>二、 解决方法：</h2><p><strong>原因：</strong></p>
<pre><code>国外网站访问速度慢，导致的安装包下载失败，通过国内镜像站可以解决</code></pre><p><strong>1、先查看官方下载的yum源内容</strong><br>    <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200426115234390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2、通过手动更换成阿里云的yum源</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200426115453795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<pre><code>[zabbix]
name=Zabbix Official Repository - $basearch
#baseurl=http://repo.zabbix.com/zabbix/3.4/rhel/7/$basearch/
baseurl=https://mirrors.aliyun.com/zabbix/zabbix/3.4/rhel/7/$basearch/   
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591
[zabbix-non-supported]
name=Zabbix Official Repository non-supported - $basearch 
#baseurl=http://repo.zabbix.com/non-supported/rhel/7/$basearch/
baseurl=https://mirrors.aliyun.com/zabbix/non-supported/rhel/7/$basearch/
enabled=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX
gpgcheck=1</code></pre><p><strong>3、然后</strong></p>
<pre><code>yum clean all
yum  -y install zabbix-server-mysql zabbix-web-mysql  zabbix-agent  zabbix-get-3.4.0-1.el7.x86_64</code></pre><p><strong>4、完成</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200426115802679.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>用iptables实现同机器和不同机器间的端口转发</title>
    <url>/2020/08/22/%E7%94%A8iptables%E5%AE%9E%E7%8E%B0%E5%90%8C%E6%9C%BA%E5%99%A8%E5%92%8C%E4%B8%8D%E5%90%8C%E6%9C%BA%E5%99%A8%E9%97%B4%E7%9A%84%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>用iptables实现同机器和不同机器间的端口转发</p>
<p>Iptables<br>将本机80端口的请求转发到8080端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080</span><br></pre></td></tr></table></figure>

<p>如果需要本机也可以访问，则需要配置OUTPUT链：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A OUTPUT -p tcp -d 127.0.0.1 --dport 80 -j REDIRECT --to-ports 8080</span><br></pre></td></tr></table></figure>

<p>两机之间的端口转发</p>
<p>将本机的81端口的请求全部转发到192.168.1.1:80</p>
<p>首先要启用ipv4的转发功能：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure>

<p>或者是修改/etc/sysctl.conf (via)以便重启后也会启用转发，然后设定iptables(via)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 81 -j DNAT --to 192.168.1.1:80 </span><br><span class="line">iptables -t nat -A POSTROUTING -j MASQUERADE</span><br></pre></td></tr></table></figure>

<p>如果开启了防火墙功能，注意要将80和81两个端口都打开。</p>
<p>SNAT、DNAT、MASQUERADE介绍可参考<a href="https://blog.csdn.net/qq_44273583/article/details/107166087" target="_blank" rel="noopener">https://blog.csdn.net/qq_44273583/article/details/107166087</a></p>
]]></content>
  </entry>
  <entry>
    <title>解决xshell连接centos7时使用小键盘数字乱码问题</title>
    <url>/2020/08/22/%E8%A7%A3%E5%86%B3xshell%E8%BF%9E%E6%8E%A5centos7%E6%97%B6%E4%BD%BF%E7%94%A8%E5%B0%8F%E9%94%AE%E7%9B%98%E6%95%B0%E5%AD%97%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>在使用xshell5连接centos7，使用使用vim时，使用小键盘输入数字时输入的数字会变成莫名其妙的字母。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020062116155757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p><strong>点击文件，进入属性</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200621161646932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200621161918172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>然后再试一试</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200621161956588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>解决中文环境下zabbix监控图形注释乱码</title>
    <url>/2020/08/22/%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83%E4%B8%8Bzabbix%E7%9B%91%E6%8E%A7%E5%9B%BE%E5%BD%A2%E6%B3%A8%E9%87%8A%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>zabbix监控的图形界面能够更直观的查看监控状态，当我们把zabbix的语言切换为中文的时候，会发现监控图形中一些中文参数会乱码，我们可以把Windows系统中的字体文件上传并进行简单的配置，问题就解决了</p>
<p>我的环境centos7.4，zabbix是3.4版本</p>
<p>方法：<br>1、在window上找控制面板&gt; 外观和个性化&gt;字体&gt;选择合适的字体这里选择的是楷体<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200427153132919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>复制并上传到centos7中<br>2、查看zabbix图形注释字体位置<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200427153311286.png" alt="在这里插入图片描述"><br>将字体上传到这里，并将字体名字改为graphfont.ttf<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200618175329417.png" alt="在这里插入图片描述"><br>3、查看<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200427154153255.png" alt="在这里插入图片描述"></p>
<p>完成</p>
<p>探究一下<br>原本的字体与/etc/alternatives/zabbix-web-font链接在一起<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200618175441139.png" alt="在这里插入图片描述"><br>而这个由于系统字体所链接<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200618175543982.png" alt="在这里插入图片描述"><br>在/usr/share/zabbix/include/defines.inc.php文件里找到其字体定义文件，即把字体名修改为graphfont就可以使用。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200618180129520.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>阿里源yum安装tomcat后启动无法访问</title>
    <url>/2020/08/22/%E9%98%BF%E9%87%8C%E6%BA%90yum%E5%AE%89%E8%A3%85tomcat%E5%90%8E%E5%90%AF%E5%8A%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>之前配置过阿里源，直接使用</p>
<pre><code>yum -y install tomcat</code></pre><p>安装完成，但是启动后访问不到页面，这其实是因为没有安装完全，cd到/usr/share/tomcat/webapps，发现里边什么都没有，我们要继续安装</p>
<pre><code>yum -y install tomcat-webapps tomcat-admin-webapps</code></pre><p>安装完成后再看</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430084222120.png" alt="在这里插入图片描述"><br>启动后再访问</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430084248628.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200430084308961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjczNTgz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>docker</title>
    <url>/2020/07/27/docker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="容器介绍"><a href="#容器介绍" class="headerlink" title="容器介绍"></a>容器介绍</h1><p> 容器其实是一种沙盒技术。沙盒就是能够像一个集装箱一样，把你的应用”装”起来的技术。这样，应用与应用之间，就因为有了边界而不至于相互干扰；而被装进集装箱的应用，也可以被方便地搬来搬去。</p>
<p>​    问题：容器的本质到底是什么？</p>
<p>​    <strong>容器的本质是进程。容器镜像就是这个系统里的”.exe”安装包.</strong></p>
<p>.iso镜像文件—&gt;(linux/wind/)   docker—–下载images——run——&gt;docker容器—–打包—-images—放到其他机器—–run镜像——容器</p>
<p>docker  —下载镜像imagesc7—jdk,tomcat —–打包成images—-导出来放到其他机器上–run-images—容器</p>
<p><strong>Docker介绍：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Docker是Docker.Inc公司开源的一个基于轻量级虚拟化技术的容器引擎项目,整个项目基于Go语言开发，并遵从Apache 2.0协议。通过分层镜像标准化和内核虚拟化技术，Docker使得应用开发者和运维工程师可以以统一的方式跨平台发布应用，并且以几乎没有额外开销的情况下提供资源隔离的应用运行环境。</span><br><span class="line"></span><br><span class="line">Docker 是一个开源工具，它可以让创建和管理 Linux 容器变得简单。**容器就像是轻量级的虚拟机，并且可以以秒级的速度来启动或停止。**</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">官网：docker.com</span><br><span class="line">docker.io  ---docker官方库也叫docker-hub</span><br></pre></td></tr></table></figure>

<p>  没有容器的时候：</p>
<p>1.rd开发产品（需要配置开发环境）lamp</p>
<p>2.测试(需要配置测试环境)</p>
<p>3.op上线（需要线上环境）</p>
<p>开发 测试  运维 </p>
<p> 有容器之后：</p>
<ol>
<li><p>rd开发产品（需要在docker容器里配置开发环境）      </p>
</li>
<li><p>把容器打包成镜像交给运维，运维上线 </p>
<p><strong>Docker跟原有的工具区别：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">传统的部署模式是：安装(包管理工具或者源码包编译)-&gt;配置-&gt;运行；</span><br><span class="line">Docker的部署模式是：复制-&gt;运行。</span><br></pre></td></tr></table></figure>

<p><strong>Docker对服务器端开发/部署带来的变化：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">方便快速部署</span><br><span class="line">对于部署来说可以极大的减少部署的时间成本和人力成本</span><br><span class="line">Docker支持将应用打包进一个可以移植的容器中，重新定义了应用开发，测试，部署上线的过程，核心理念</span><br><span class="line">是 Build once, Run anywhere</span><br><span class="line">1）标准化应用发布，docker容器包含了运行环境和可执行程序，可以跨平台和主机使用；</span><br><span class="line">2）节约时间，快速部署和启动，VM启动一般是分钟级，docker容器启动是秒级；</span><br><span class="line">3）方便构建基于微服务架构的系统，通过服务编排，更好的松耦合；</span><br><span class="line">4）节约成本，以前一个虚拟机至少需要几个G的磁盘空间，docker容器可以减少到MB级；</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p><strong>Docker 优势：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、交付物标准化</span><br><span class="line">Docker的标准化交付物称为"镜像"，它包含了应用程序及其所依赖的运行环境，大大简化了应用交付的模式。</span><br><span class="line"></span><br><span class="line">2、应用隔离</span><br><span class="line">Docker可以隔离不同应用程序之间的相互影响，但是比虚拟机开销更小。总之，容器技术部署速度快，开发、测试更敏捷；提高系统利用率，降低资源成本. </span><br><span class="line"></span><br><span class="line">3、一次构建，多次交付</span><br><span class="line">类似于集装箱的"一次装箱，多次运输"，Docker镜像可以做到"一次构建，多次交付"。</span><br><span class="line"></span><br><span class="line">Docker的度量：</span><br><span class="line"></span><br><span class="line">Docker是利用容器来实现的一种轻量级的虚拟技术，从而在保证隔离性的同时达到节省资源的目的。Docker的</span><br><span class="line"></span><br><span class="line">可移植性可以让它一次建立，到处运行。Docker的度量可以从以下四个方面进行：</span><br><span class="line"></span><br><span class="line">1）隔离性</span><br><span class="line"></span><br><span class="line"> 通过内核的命名空间来实现的，将容器的进程、网络、消息、文件系统和主机名进行隔离。</span><br><span class="line"></span><br><span class="line">2）可度量性</span><br><span class="line"></span><br><span class="line"> Docker主要通过cgroups控制组来控制资源的度量和分配。</span><br><span class="line"></span><br><span class="line">3）移植性</span><br><span class="line"></span><br><span class="line"> Docker利用AUFS来实现对容器的快速更新。</span><br><span class="line"></span><br><span class="line"> AUFS是一种支持将不同目录挂载到同一个虚拟文件系统下的文件系统，支持对每个目录的读写权限管理。AUFS具有层</span><br><span class="line"></span><br><span class="line"> 的概念，每一次修改都是在已有的只写层进行增量修改，修改的内容将形成新的文件层，不影响原有的层。</span><br><span class="line"></span><br><span class="line">4）安全性</span><br><span class="line"></span><br><span class="line"> 安全性可以分为容器内部之间的安全性；容器与托管主机之间的安全性。</span><br><span class="line"></span><br><span class="line"> 容器内部之间的安全性主要是通过命名空间和cgroups来保证的。</span><br><span class="line"></span><br><span class="line"> 容器与托管主机之间的安全性主要是通过内核能力机制的控制，可以防止Docker非法入侵托管主机。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Docker容器使用AUFS作为文件系统，有如下优势：</span><br><span class="line"></span><br><span class="line">1）节省存储空间</span><br><span class="line"></span><br><span class="line"> 多个容器可以共享同一个基础镜像存储。</span><br><span class="line"></span><br><span class="line">2）快速部署</span><br><span class="line"></span><br><span class="line">3）升级方便</span><br><span class="line"></span><br><span class="line"> 升级一个基础镜像即可影响到所有基于它的容器。需要注意已经在运行的docker容器不受影响</span><br></pre></td></tr></table></figure>

<p><strong>容器和 VM 的主要区别：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">表面区别：</span><br><span class="line">容器占用体积小，虚拟机占用体积大</span><br><span class="line">隔离性：容器提供了基于进程的隔离，而虚拟机提供了资源的完全隔离。</span><br><span class="line">启动速度：虚拟机可能需要一分钟来启动，而容器只需要一秒钟或更短。</span><br><span class="line">容器使用宿主操作系统的内核，而虚拟机使用独立的内核。Docker 的局限性之一是，它只能用在64位的操作系统上。</span><br><span class="line">本质区别：</span><br><span class="line">容器是被隔离的进程</span><br></pre></td></tr></table></figure>

<h1 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a><strong>docker安装</strong></h1><p>CentOS 7 中 Docker 的安装:</p>
<p>Docker 软件包已经包括在默认的 CentOS-Extras 软件源(联网使用centos7u2自带网络Yum源)里。因此想要安装 docker，只需要运行下面的 yum 命令： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install -y epel*</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install docker</span></span><br><span class="line">启动 Docker 服务:</span><br><span class="line"><span class="meta">#</span><span class="bash"> service docker start</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig docker on</span></span><br><span class="line">CentOS 7    </span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl start docker.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">enable</span> docker.service</span></span><br></pre></td></tr></table></figure>

<p>确定docker服务在运行：</p>
<p>结果会显示服务端和客户端的版本，如果只显示客户端版本说明服务没有启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker version</span></span><br><span class="line"></span><br><span class="line">Client:</span><br><span class="line">Version:         1.10.3</span><br><span class="line">API version:     1.22</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h2 id="docker版本与官方安装方式"><a href="#docker版本与官方安装方式" class="headerlink" title="docker版本与官方安装方式"></a><strong>docker版本与官方安装方式</strong></h2><p>moby、docker-ce与docker-ee</p>
<p>最早时docker是一个开源项目，主要由docker公司维护。</p>
<p>2017年3月1日起，docker公司将原先的docker项目改名为moby，并创建了docker-ce和docker-ee。</p>
<p>三者关系：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">moby是继承了原先的docker的项目，是社区维护的的开源项目，谁都可以在moby的基础打造自己的容器产品</span><br><span class="line"></span><br><span class="line">docker-ce是docker公司维护的开源项目，是一个基于moby项目的免费的容器产品</span><br><span class="line"></span><br><span class="line">docker-ee是docker公司维护的闭源产品，是docker公司的商业产品</span><br></pre></td></tr></table></figure>

<p>​    moby project由社区维护，docker-ce project是docker公司维护，docker-ee是闭源的docker公司维护。</p>
<p>CentOS–官方安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">如果是centos，上面的安装命令会在系统上添加yum源:/etc/yum.repos.d/docker-ce.repo </span><br><span class="line"><span class="meta">#</span><span class="bash"> wget https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mv docker-ce.repo /etc/yum.repos.d</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install -y docker-ce</span></span><br></pre></td></tr></table></figure>

<p>​    或者直接下载rpm安装:</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> wget https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-17.09.0.ce-1.el7.centos.x86_64.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum localinstall docker-ce-17.09.0.ce-1.el7.centos.x86_64.rpm</span></span><br></pre></td></tr></table></figure>

<h2 id="国内源安装新版docker"><a href="#国内源安装新版docker" class="headerlink" title="国内源安装新版docker"></a><strong>国内源安装新版docker</strong></h2><p>使用aliyun docker yum源安装新版docker</p>
<p>删除已安装的Docker</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> [root@yixuan ~]# yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-selinux \</span><br><span class="line">docker-engine-selinux \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure>

<p>配置阿里云Docker Yum源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install -y yum-utils device-mapper-persistent-data lvm2 git</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br></pre></td></tr></table></figure>

<p>安装指定版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> 查看Docker版本：</span><br><span class="line"><span class="meta">#</span><span class="bash"> yum list docker-ce --showduplicates</span></span><br></pre></td></tr></table></figure>

<p>​    安装较旧版本（比如Docker 17.03.2) ：</p>
<p>​        需要指定完整的rpm包的包名，并且加上–setopt=obsoletes=0 参数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install -y --<span class="built_in">setopt</span>=obsoletes=0 \</span></span><br><span class="line">docker-ce-17.03.2.ce-1.el7.centos.x86_64 \</span><br><span class="line">docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install -y --<span class="built_in">setopt</span>=obsoletes=0 docker-ce-19.03.2 docker-ce-selinux-19.03.2</span></span><br></pre></td></tr></table></figure>

<p>安装Docker新版本（比如Docker 18.03.0)：加上rpm包名的版本号部分或不加都可以：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install docker-ce-18.03.0.ce  -y</span></span><br><span class="line">或者</span><br><span class="line">[root@yixuan ~]# yum install -y docker-ce</span><br></pre></td></tr></table></figure>

<p>启动Docker服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">systemctl <span class="built_in">enable</span> docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash">systemctl start docker</span></span><br></pre></td></tr></table></figure>

<p>查看docker版本状态：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker -v</span><br><span class="line">Docker version 19.03.2, build 6a30dfc</span><br></pre></td></tr></table></figure>

 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker version</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.2</span><br><span class="line"> API version:       1.40</span><br><span class="line"> Go version:        go1.12.8</span><br><span class="line"> Git commit:        6a30dfc</span><br><span class="line"> Built:             Thu Aug 29 05:28:55 2019</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      false</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          19.03.2</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.12.8</span><br><span class="line">  Git commit:       6a30dfc</span><br><span class="line">  Built:            Thu Aug 29 05:27:34 2019</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     false</span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.2.6</span><br><span class="line">  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0-rc8</span><br><span class="line">  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br></pre></td></tr></table></figure>

<p><strong>查看docker运行状态：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker info</span></span><br><span class="line">Containers: 0</span><br><span class="line">Running: 0</span><br><span class="line">Paused: 0</span><br><span class="line">Stopped: 0</span><br><span class="line">Images: 0</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>=======================================================</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">报错1：</span><br><span class="line"></span><br><span class="line">docker info的时候报如下错误</span><br><span class="line"></span><br><span class="line">bridge-nf-call-iptables is disabled</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">解决1：</span><br><span class="line"></span><br><span class="line">追加如下配置,然后重启系统</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/sysctl.conf   </span></span><br><span class="line"></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line"></span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line"></span><br><span class="line">net.bridge.bridge-nf-call-arptables = 1</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">问题2：</span><br><span class="line"></span><br><span class="line">虚拟机ping百度也能ping通，但是需要等好几秒才出结果，关键是下载镜像一直报错如下</span><br><span class="line"></span><br><span class="line"><span class="meta"> #</span><span class="bash"> docker pull daocloud.io/library/nginx</span></span><br><span class="line"></span><br><span class="line"> Using default tag: latest</span><br><span class="line"></span><br><span class="line"> Error response from daemon: Get https://daocloud.io/v2/: dial tcp: lookup daocloud.io on 192.168.1.2:53: read udp   192.168.1.189:41335-&gt;192.168.1.2:53: i/o timeout</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">解决2：</span><br><span class="line"></span><br><span class="line">我的虚拟机用的网关和dns都是虚拟机自己的.1或者.2，把DNS改成8.8.8.8问题就解决了，ping百度也秒出结果</span><br><span class="line"></span><br><span class="line"><span class="meta"> #</span><span class="bash"> vim /etc/resolv.conf</span></span><br><span class="line"></span><br><span class="line"> nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>

<p><strong>简单测试</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">运行一个容器</span><br><span class="line">[root@192 ~]# docker run -it daocloud.io/library/ubuntu /bin/bash #运行容器</span><br><span class="line">Unable to find image 'daocloud.io/library/ubuntu:latest' locally</span><br><span class="line">latest: Pulling from library/ubuntu</span><br><span class="line">5c939e3a4d10: Pull complete </span><br><span class="line">c63719cdbe7a: Pull complete </span><br><span class="line">19a861ea6baf: Pull complete </span><br><span class="line">651c9d2d6c4f: Pull complete </span><br><span class="line">Digest: sha256:bc025862c3e8ec4a8754ea4756e33da6c41cba38330d7e324abd25c8e0b93300</span><br><span class="line">Status: Downloaded newer image for daocloud.io/library/ubuntu:latest</span><br><span class="line"></span><br><span class="line">如果自动进入下面的容器环境，说明﻿ubuntu镜像运行成功，Docker的安装也没有问题：可以操作容器了</span><br><span class="line">root@db8e84e2ea96:/#</span><br></pre></td></tr></table></figure>

<h2 id="国内镜像源"><a href="#国内镜像源" class="headerlink" title="国内镜像源"></a><strong>国内镜像源</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">去查看如何使用aliyun的docker镜像库</span><br><span class="line">去查看如何使用网易蜂巢的docker镜像库----作业，并且通过网易蜂巢源下载一个nginx的镜像---docker  pull  镜像仓库与镜像名字</span><br><span class="line">daocloud.io</span><br></pre></td></tr></table></figure>

<p>*<em>Docker 加速器 *</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">使用 Docker 的时候，需要经常从官方获取镜像，但是由于显而易见的网络原因，拉取镜像的过程非常耗时，严重影响使用 Docker 的体验。因此 DaoCloud 推出了加速器工具解决这个难题，通过智能路由和缓存机制，极大提升了国内网络访问 Docker Hub 的速度。</span><br><span class="line"></span><br><span class="line">Docker 加速器对 Docker 的版本有要求吗？    </span><br><span class="line">需要 Docker 1.8 或更高版本才能使用。</span><br><span class="line"></span><br><span class="line">Docker 加速器支持什么系统？    </span><br><span class="line">Linux, MacOS 以及 Windows 平台。</span><br><span class="line"></span><br><span class="line">Docker 加速器是否收费？    </span><br><span class="line">提供永久免费的加速器服务，请放心使用。</span><br></pre></td></tr></table></figure>

<p><strong>国内比较好的镜像源：网易蜂巢、aliyun和daocloud</strong></p>
<p>daocloud.io–官网</p>
<p>===========以下为亲测================</p>
<p>使用国内镜像：</p>
<p>进入网站：<a href="https://daocloud.io/" target="_blank" rel="noopener">https://daocloud.io/</a></p>
<p>注册帐号：soso666</p>
<p>进入镜像市场</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570200192111.png" alt="1570200192111"></p>
<p> 随便选择一个，选择mysql</p>
<p> <img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570200445170.png" alt="1570200445170"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570200848229.png" alt="1570200848229"></p>
<p>上面有详细的使用命令。但是每个镜像的命令不一样，在选择一个：</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570201197359.png" alt="1570201197359"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570201259933.png" alt="1570201259933"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/nginx   #下载镜像</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">0a4690c5d889: Pull complete </span><br><span class="line">9719afee3eb7: Pull complete </span><br><span class="line">44446b456159: Pull complete </span><br><span class="line">Digest: sha256:f83b2ffd963ac911f9e638184c8d580cc1f3139d5c8c33c87c3fb90aebdebf76</span><br><span class="line">Status: Downloaded newer image for daocloud.io/library/nginx:latest</span><br><span class="line">daocloud.io/library/nginx:latest</span><br></pre></td></tr></table></figure>

<p>现在我们使用web界面管理docker容器：</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570201320225.png" alt="1570201320225"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570201424714.png" alt="1570201424714"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570201526997.png" alt="1570201526997"></p>
<p>等一会，不要手动终止：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# curl -sSL https://get.daocloud.io/daomonit/install.sh | sh -s 8e6d8ce76e4ec4668f31859dae6297439ac49243 </span><br><span class="line"> * Installing Daomonit...</span><br><span class="line"> * Downloading Daomonit from https://get.daocloud.io/daomonit/daomonit.x86_64.rpm</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   279  100   279    0     0   1091      0 --:--:-- --:--:-- --:--:--  1094</span><br><span class="line">100   337  100   337    0     0    950      0 --:--:-- --:--:-- --:--:--   950</span><br><span class="line">100 3349k  100 3349k    0     0  2060k      0  0:00:01  0:00:01 --:--:-- 2207k</span><br><span class="line">准备中...                          ################################# [100%]</span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:daomonit-0.1.70-1                ################################# [100%]</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/daomonit.service to /usr/lib/systemd/system/daomonit.service.</span><br><span class="line"> * Configuring Daomonit...</span><br><span class="line">[10/04/19 23:05:51] [DEBG] Writing configuration file /etc/daocloud/daomonit.yml</span><br><span class="line">[10/04/19 23:05:51] [INFO] You have successfully saved your config file.</span><br><span class="line"> * Start Daomonit...</span><br><span class="line">Starting daomonit (via systemctl):                         [  OK  ]</span><br><span class="line"></span><br><span class="line">You can view daomonit log at /var/log/daomonit.log</span><br><span class="line">And You can Start or Stop daomonit with: service daomonit start/stop/restart/status</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">***</span><br><span class="line">***  Installed and Started Daomonit 0.1.70</span><br><span class="line">***</span><br><span class="line">***  NOTICE: </span><br><span class="line">***  You can pull image very Fast by dao, For Example: </span><br><span class="line">***     dao pull ubuntu</span><br><span class="line">***</span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">[root@yixuan ~]#</span><br></pre></td></tr></table></figure>

<p>完成之后：</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570201748054.png" alt="1570201748054"></p>
<p>点击查看主机</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570201858823.png" alt="1570201858823"></p>
<p>启动我们的容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker images   #查看镜像</span><br><span class="line">REPOSITORY                              TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">daocloud.io/library/nginx               latest              98ebf73aba75        2 months ago        109MB</span><br><span class="line">daocloud.io/daocloud/daocloud-toolset   latest              bbdc71e950ea        2 years ago         147MB</span><br><span class="line"></span><br><span class="line">[root@yixuan ~]# docker run -it daocloud.io/library/nginx /bin/bash   #运行容器</span><br><span class="line">root@37b8b8cdd75f:/#</span><br></pre></td></tr></table></figure>

<p>将容器启动之后刷新一下刚才的界面点击容器就会显示出来</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570203257235.png" alt="1570203257235"></p>
<p>点击查看详情…</p>
<p><strong>配置阿里云的镜像仓库</strong></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200308222414879.png" alt="image-20200308222414879"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200308222502111.png" alt="image-20200308222502111"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200308222559298.png" alt="image-20200308222559298"></p>
<p><strong>创建阿里云的私有仓库</strong></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516194706857.png" alt="image-20200516194706857"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516194734064.png" alt="image-20200516194734064"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516194811376.png" alt="image-20200516194811376"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516202258168.png" alt="image-20200516202258168"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516195029906.png" alt="image-20200516195029906"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516202347774.png" alt="image-20200516202347774"></p>
<p><strong>使用自己的私有仓库</strong></p>
<p>注意使用自己的私有仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">登录：</span><br><span class="line">[root@yixuan ~]# docker login --username=xuan2504 registry.cn-shanghai.aliyuncs.com</span><br><span class="line">Password: </span><br><span class="line">...</span><br><span class="line">Login Succeeded</span><br><span class="line">重新打标记</span><br><span class="line">[root@yixuan ~]# docker tag daocloud.io/library/nginx:latest registry.cn-shanghai.aliyuncs.com/testpm/nginx:1.1</span><br><span class="line">上传到自己的仓库</span><br><span class="line">[root@yixuan ~]# docker push registry.cn-shanghai.aliyuncs.com/testpm/nginx:1.1</span><br><span class="line">The push refers to repository [registry.cn-shanghai.aliyuncs.com/testpm/nginx]</span><br><span class="line">be91fceb796e: Layer already exists </span><br><span class="line">919b6770519b: Layer already exists </span><br><span class="line">b60e5c3bcef2: Layer already exists </span><br><span class="line">1.1: digest: sha256:6b3b6c113f98e901a8b1473dee4c268cf37e93d72bc0a01e57c65b4ab99e58ee size: 948</span><br></pre></td></tr></table></figure>

<p><strong>查看上传的镜像</strong></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516203027062.png" alt="image-20200516203027062"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516203045619.png" alt="image-20200516203045619"></p>
<p><strong>自己的nginx:1.1版本已经上传成功！</strong></p>
<p><strong>使用自己的仓库</strong></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516203352642.png" alt="image-20200516203352642"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200516203447628.png" alt="image-20200516203447628"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">使用阿里的仓库下载镜像：</span><br><span class="line">删除镜像</span><br><span class="line">[root@yixuan ~]# docker rmi registry.cn-shanghai.aliyuncs.com/testpm/nginx:1.1</span><br><span class="line">Untagged: registry.cn-shanghai.aliyuncs.com/testpm/nginx:1.1</span><br><span class="line">Untagged: registry.cn-shanghai.aliyuncs.com/testpm/nginx@sha256:6b3b6c113f98e901a8b1473dee4c268cf37e93d72bc0a01e57c65b4ab99e58ee</span><br><span class="line"></span><br><span class="line">从自己的仓库下载</span><br><span class="line">[root@yixuan ~]# docker pull registry.cn-shanghai.aliyuncs.com/testpm/nginx:1.1</span><br><span class="line">1.1: Pulling from testpm/nginx</span><br><span class="line">Digest: sha256:6b3b6c113f98e901a8b1473dee4c268cf37e93d72bc0a01e57c65b4ab99e58ee</span><br><span class="line">Status: Downloaded newer image for registry.cn-shanghai.aliyuncs.com/testpm/nginx:1.1</span><br><span class="line">registry.cn-shanghai.aliyuncs.com/testpm/nginx:1.1</span><br><span class="line"></span><br><span class="line">查看</span><br><span class="line">[root@yixuan ~]# docker images </span><br><span class="line">REPOSITORY                                                               TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">registry.cn-shanghai.aliyuncs.com/testpm/nginx                           1.1                 e791337790a6        4 weeks ago         127MB</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200308222731329.png" alt="image-20200308222731329"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200308222757002.png" alt="image-20200308222757002"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">配置阿里加速器：</span><br><span class="line">如果这个目录/etc/docker/不存在就创建</span><br><span class="line">[root@yixuan ~]# vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors": ["https://br003st4.mirror.aliyuncs.com"]</span><br><span class="line">&#125;</span><br><span class="line">[root@yixuan ~]# systemctl daemon-reload</span><br><span class="line">[root@yixuan ~]# systemctl restart docker</span><br></pre></td></tr></table></figure>

<h1 id="docker基本概念"><a href="#docker基本概念" class="headerlink" title="docker基本概念"></a>docker基本概念</h1><p>Docker系统</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Docker系统有两个程序：docker服务端和docker客户端</span><br><span class="line"></span><br><span class="line">docker服务端：是一个服务进程，管理着所有的容器。也叫docker engine</span><br><span class="line"></span><br><span class="line">docker客户端：扮演着docker服务端的远程控制器，可以用来控制docker的服务端进程。</span><br><span class="line"></span><br><span class="line">大部分情况下，docker服务端和客户端运行在一台机器上</span><br></pre></td></tr></table></figure>

<p>Docker三大核心组件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Docker 镜像 - Docker  images </span><br><span class="line"></span><br><span class="line">Docker 仓库 - Docker  registeries</span><br><span class="line"></span><br><span class="line">Docker 容器 - Docker  containers</span><br></pre></td></tr></table></figure>

<p>容器的三大组成要素：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">名称空间 namespace  容器隔离(pid,net,mnt,user,)</span><br><span class="line"></span><br><span class="line">资源限制 cgroups  资源(内存，cpu)</span><br><span class="line"></span><br><span class="line">文件系统 overlay2(UnionFS)</span><br></pre></td></tr></table></figure>

<p>docker 仓库：</p>
<p>  <strong>用来保存镜像，可以理解为代码控制中的代码仓库。</strong>同样的，Docker 仓库也有公有和私有的概念。</p>
<p>公有的 Docker  仓库名字是 Docker Hub。Docker Hub  提供了庞大的镜像集合供使用。这些镜像可以是自己创建，或者在别人的镜像基础上创建。 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">仓库(registry) --&gt;Repository--&gt;镜像(按版本区分)</span><br><span class="line"></span><br><span class="line">docker.io/centos:7</span><br><span class="line">registry/repository:tag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">repository:存储库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker 国内仓库</span><br><span class="line">ali</span><br><span class="line">网易蜂巢</span><br><span class="line">daocloud</span><br><span class="line">=========================</span><br><span class="line">docker公有仓库</span><br><span class="line">docker.io -------docker官方库也叫docker-hub</span><br><span class="line">类似于github一样，面向全球的一个docker镜像的公共仓库。如果在国内使用速度太慢。</span><br><span class="line">===============================</span><br><span class="line">docker私有仓库</span><br><span class="line">个人或者公司部署的非公开库</span><br></pre></td></tr></table></figure>

<p>Docker 镜像 </p>
<p>​     Docker 镜像是 Docker 容器运行时的只读模板，每一个镜像由一系列的层 (layers) 组成。Docker 使用  UnionFS 来将这些层联合到单独的镜像中。正因为有了这些层的存在，Docker  是如此的轻量。当你改变了一个 Docker  镜像，比如升级到某个程序到新的版本，一个新的层会被创建。因此，不用替换整个原先的镜像或者重新建立(在使用虚拟机的时候你可能会这么做)，只是一个新的层被添加或升级了。</p>
<p>  ﻿在 Docker 的术语里，一个只读层被称为镜像，一个镜像是永久不会变的。由于 Docker 使用一个统一文件系统，由于镜像不可写，所以镜像是无状态的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">镜像由三部分组成：</span><br><span class="line">镜像名称：仓库名称+镜像分类+tag名称(镜像版本)</span><br><span class="line"></span><br><span class="line">1.存储对象：images</span><br><span class="line">2.格式：库名/分类：tag</span><br><span class="line">3.tag:表示镜像版本</span><br></pre></td></tr></table></figure>

<p>镜像的大体分类方式：这不是规定</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> 1.以操作系统名字    </span><br><span class="line">centos的docker镜像:</span><br><span class="line">centos5</span><br><span class="line">centos6</span><br><span class="line">centos7</span><br><span class="line">-----------------</span><br></pre></td></tr></table></figure>

 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2.以应用的名字</span><br><span class="line">nginx的docker镜像</span><br><span class="line">tomcat的docker镜像</span><br><span class="line">mysql的docker镜像</span><br></pre></td></tr></table></figure>

<p>镜像名字：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">完整镜像名称示例：        </span><br><span class="line">docker.io/library/nginx:v1</span><br><span class="line">docker.io/library/nginx:latest</span><br><span class="line">daocloud.io/library/nginx</span><br></pre></td></tr></table></figure>

<p><strong>镜像ID：</strong></p>
<p>所有镜像都是通过一个 64 位十六进制字符串来标识的。 为简化使用，前 12 个字符可以组成一个短ID，可以在命令行中使用。短ID还是有一定的碰撞机率，所以服务器总是返回长ID。</p>
<p>镜像ID：64位的id号，一般我们看到的是12位的我们称之为短ID，只要我们每个ID号不冲突就可以了</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/wps1.jpg" alt="img">    ﻿     </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">镜像本身：是由一层一层的镜像合在一起的，最底层的镜像我们称为基础镜像，在这个基础镜像的基础上还可以在做镜像，在做的镜像称为子镜像，对于子镜像来讲在谁的基础之上做的就是父镜像。</span><br><span class="line"></span><br><span class="line">基础镜像：一个没有任何父镜像的镜像，谓之基础镜像。</span><br><span class="line">centos7   镜像</span><br><span class="line">centos7+nginx 镜像</span><br></pre></td></tr></table></figure>

<p>Docker 容器</p>
<p>​    Docker 容器和文件夹很类似，一个Docker容器包含了所有的某个应用运行所需要的环境。每一个 Docker 容器都是从 Docker  镜像创建的。Docker 容器可以运行、开始、停止、移动和删除。每一个 Docker 容器都是独立和安全的应用平台，Docker 容器是  Docker 的运行部分。  </p>
<h2 id="docker镜像命名解析"><a href="#docker镜像命名解析" class="headerlink" title="docker镜像命名解析"></a><strong>docker镜像命名解析</strong></h2><p>Docker镜像命名解析</p>
<p>镜像是Docker最核心的技术之一，也是应用发布的标准格式。无论你是用docker pull image，或者是在</p>
<p>Dockerfile里面写FROM image，从Docker官方Registry下载镜像应该是Docker操作里面最频繁的动作之一</p>
<p>了。那么docker镜像是如何命名的，这也是Docker里面比较容易令人混淆的一块概念：Registry，Repository, Tag and Image。</p>
<p>那么Registry又是什么呢？Registry存储镜像数据，并且提供拉取和上传镜像的功能。Registry中镜像是通过</p>
<p>Repository来组织的，而每个Repository又包含了若干个Image。</p>
<p>下面是在本地机器运行docker images的输出结果：</p>
<p>﻿<img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200308230042738.png" alt="image-20200308230042738"></p>
<p>常说的”ubuntu”镜像其实不是一个镜像名称，而是代表了一个名为ubuntu的Repository，同时在这个Repository下面有一系列打了tag的Image，Image的标记是一个GUID，为了方便也可以通过Repository:tag来引用。</p>
<p>Image[:tag]</p>
<p>当一个镜像的名称不足以分辨这个镜像所代表的含义时，你可以通过tag将版本信息添加到run命令中，以执行特</p>
<p>定版本的镜像。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">例如:docker run ubuntu:14.04</span><br></pre></td></tr></table></figure>

<h2 id="docker镜像和容器的区别"><a href="#docker镜像和容器的区别" class="headerlink" title="docker镜像和容器的区别"></a><strong>docker镜像和容器的区别</strong></h2><p> 一、Docker镜像</p>
<p>要理解Docker镜像和docker容器之间的区别，确实不容易。。</p>
<p>一个Docker镜像可以构建于另一个Docker镜像之上，这种层叠关系可以是多层的。第1层的镜像层我们称之为基础镜像（Base  Image），其他层的镜像（除了最顶层）我们称之为父层镜像（Parent  Image）。这些镜像继承了他们的父层镜像的所有属性和设置。</p>
<p> Docker镜像通过镜像ID进行识别。镜像ID是一个64字符的十六进制的字符串。但是当我们运行镜像时，通常我们不会使用镜像ID来引用镜像，而是使用镜像名来引用。</p>
<p>要列出本地所有有效的镜像，可以使用命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker images</span></span><br></pre></td></tr></table></figure>

<p>镜像可以发布为不同的版本，这种机制我们称之为标签（Tag）。 </p>
<p>可以使用pull命令加上指定的标签：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker pull ubuntu:14.04</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker pull ubuntu:12.04</span></span><br></pre></td></tr></table></figure>

<p>二、Docker容器</p>
<p>Docker容器可以使用命令创建：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run  -it  imagename  /bin/bash</span></span><br></pre></td></tr></table></figure>

<p>它会在所有的镜像层之上增加一个可写层。这个可写层有运行在CPU上的进程，而且有两个不同的状态：运行态（Running）和退出态 （Exited）。这就是Docker容器。当我们使用docker  run启动容器，Docker容器就进入运行态，当我们停止Docker容器时，它就进入退出态。</p>
<p>当我们有一个正在运行的Docker容器时，从运行态到停止态，我们对它所做的一切变更都会永久地写到容器的文件系统中。要切记，对容器的变更是写入到容器的文件系统的，而不是写入到Docker镜像中的。我们可以用同一个镜像启动多个Docker容器，这些容器启动后都是活动的，彼此还是相互隔离的。我们对其中一个容器所做的变更只会局限于那个容器本身。如果对容器的底层镜像进行修改，那么当前正在运行的容器是不受影响的，不会发生自动更新现象。</p>
<h2 id="名字空间–namespace"><a href="#名字空间–namespace" class="headerlink" title="名字空间–namespace"></a>名字空间–namespace</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">namespace  空间隔离</span><br><span class="line">cgroup   资源限制</span><br></pre></td></tr></table></figure>

<p> 名字空间是 Linux 内核一个强大的特性。每个容器都有自己单独的名字空间，运行在其中的应用都像是在独立的操作系统中运行一样。名字空间保证了容器之间彼此互不影响。 </p>
<ol>
<li>pid 名字空间</li>
</ol>
<p>不同用户的进程就是通过 pid 名字空间隔离开的，且不同名字空间中可以有相同 pid。所有的 LXC 进程在 Docker中的父进程为Docker进程，每个 LXC 进程具有不同的名字空间。同时由于允许嵌套，因此可以很方便的实现嵌套的 Docker 容器。 </p>
<ol start="2">
<li><p>net 名字空间 —-做网络接口隔离的</p>
<p>有 了 pid 名字空间, 每个名字空间中的 pid 能够相互隔离，但是网络端口还是共享 host 的端口。网络隔离是通过 net 名字空间实现的，  每个 net 名字空间有独立的 网络设备, IP 地址, 路由表, /proc/net 目录。这样每个容器的网络就能隔离开来。</p>
</li>
<li><p>ipc 名字空间   </p>
</li>
</ol>
<p>容器中进程交互还是采用了 Linux 常见的进程间交互方法(interprocess communication - IPC),  <strong>包括信号量、消息队列和共享内存、socket、管道等。</strong></p>
<p>面试题：linux系统里面ipc通信有几种方式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">socket:网络进程间的通信</span><br><span class="line">管道：本地进程间的通信：echo  hello  | grep e</span><br><span class="line">信号：  kill -9 PID   这种我们叫信号量级，也是本地进程间的通信</span><br><span class="line">共享内存：每个操作系统里面共享内存多大，是物理内存的一半</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>mnt名字空间</li>
</ol>
<p>mnt 名字空间允许不同名字空间的进程看到的文件结构不同，这样每个名字空间  中的进程所看到的文件目录就被隔离开了。</p>
<ol start="5">
<li>uts 名字空间</li>
</ol>
<p>UTS(“UNIX Time-sharing System”) 名字空间允许每个容器拥有独立的 hostname 和 domain name, 使其在网络上可以被视作一个独立的节点而非主机上的一个进程。</p>
<ol start="6">
<li>user 名字空间 </li>
</ol>
<p>每个容器可以有不同的用户和组 id, 也就是说可以在容器内用容器内部的用户执行程序而非主机上的用户。</p>
<h1 id="镜像管理"><a href="#镜像管理" class="headerlink" title="镜像管理"></a><strong>镜像管理</strong></h1><p>搜索镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">这种方法只能用于官方镜像库</span><br><span class="line">搜索基于 centos 操作系统的镜像</span><br><span class="line"></span><br><span class="line">[root@yixuan ~]# docker search centos</span><br></pre></td></tr></table></figure>

<p>​    按星级搜索镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查找 star 数至少为 100 的镜像，默认不加 s 选项找出所有相关 centos 镜像：         </span><br><span class="line">[root@yixuan ~]## docker search centos -s 100</span><br><span class="line">或者</span><br><span class="line">[root@yixuan ~]## docker search ubuntu -f stars=100</span><br></pre></td></tr></table></figure>

<p>拉取镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker pull centos</span></span><br><span class="line">注：没有加registry，默认是从docker.io下载的</span><br><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/tomcat:7</span><br><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/centos:6</span><br></pre></td></tr></table></figure>

<p>查看本地镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker image list </span><br><span class="line">或者</span><br><span class="line">[root@yixuan ~]# docker images</span><br></pre></td></tr></table></figure>

<p>查看镜像详情：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker image inspect 镜像id</span><br></pre></td></tr></table></figure>

<p>删除镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">删除一个或多个，多个之间用空格隔开，可以使用镜像名称或id</span><br><span class="line">[root@yixuan ~]# docker rmi daocloud.io/library/mysql</span><br><span class="line">或者</span><br><span class="line">[root@yixuan ~]# docker rmi 81debc</span><br><span class="line"></span><br><span class="line">参数解释：</span><br><span class="line">rm          Remove one or more containers  ---移除一个或多个容器</span><br><span class="line">rmi         Remove one or more images   ---删除一个或多个镜像</span><br></pre></td></tr></table></figure>

<p>​    强制删除：–force</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">如果镜像正在被使用中可以使用--force强制删除    </span><br><span class="line"><span class="meta">#</span><span class="bash"> docker rmi docker.io/ubuntu:latest --force</span></span><br><span class="line">-f, --force      Force removal of the image</span><br><span class="line"></span><br><span class="line">注意: 容器运行中不能删除，将容器停止后，删除容器在删除镜像。</span><br></pre></td></tr></table></figure>

<p>只查看所有镜像的id:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker images -q</span><br><span class="line">98ebf73aba75</span><br><span class="line">81debc95563d</span><br><span class="line">d0957ffdf8a2</span><br><span class="line"></span><br><span class="line">-q, --quiet</span><br></pre></td></tr></table></figure>

<p>删除所有镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure>

<p>查看镜像制作的过程：</p>
<p>​    相当于dockfile</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker history daocloud.io/library/nginx  使用镜像名或者镜像ID都可以</span><br></pre></td></tr></table></figure>

<h1 id="容器管理"><a href="#容器管理" class="headerlink" title="容器管理"></a><strong>容器管理</strong></h1><p>创建新容器但不启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker create -it daocloud.io/library/centos:5 /bin/bash</span></span><br></pre></td></tr></table></figure>

<p>创建并运行一个新Docker 容器：同一个镜像可以启动多个容器,每次执行run子命令都会运行一个全新的容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -it --restart=always daocloud.io/library/centos:7 /bin/bash   <span class="comment">#最常用</span></span></span><br><span class="line">-i ：标准输入输出</span><br><span class="line">-t：分配一个终端或控制台</span><br><span class="line">--restart=always：容器随docker engine自启动，因为在重启docker的时候默认容器都会被关闭   </span><br><span class="line">也适用于create选项</span><br><span class="line">-d	后台运行容器，并返回容器ID；</span><br></pre></td></tr></table></figure>

<p>﻿ 如果执行成功，说明CentOS 容器已经被启动，并且应该已经得到了 bash 提示符。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--rm:默认情况下，每个容器在退出时，它的文件系统也会保存下来.另一方面，也可以保存容器所产生的数据。但是当你仅仅需要短暂的运行一个容器，并且这些数据不需要保存，你可能就希望Docker能在容器结束时自动清理其所产生的数据。这个时候就需要--rm参数了。</span><br><span class="line"></span><br><span class="line">注意：--rm 和 -d不能共用</span><br></pre></td></tr></table></figure>

<p>容器名称</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">为容器分配一个名字，如果没有指定，docker会自动分配一个随机名称是 docker run子命令的参数</span><br><span class="line">--name= Assign a name to the container</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker run -it --name 名字  daocloud.io/centos:6 /bin/bash   <span class="comment">#名字自定义</span></span></span><br></pre></td></tr></table></figure>

<p>如果你在执行docker run时没有指定–name，那么自动生成一个随机字符串UUID。这个UUID标识是由Docker deamon生成的。但是对于一个容器来说有个name会非常方便，当你需要连接其它容器时或者类似需要区分其它容器时，使用容器名称可以简化操作。无论容器运行在前台或者后台，这个名字都是有效的。</p>
<p>若要断开与容器的连接，并且关闭容器：容器内部执行如下命令</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@37b8b8cdd75f:/# exit</span><br></pre></td></tr></table></figure>

<p>如果只想断开和容器的连接而不关闭容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">快捷键：ctrl+p+q</span><br></pre></td></tr></table></figure>

<p>查看容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.只查看运行状态的容器：</span><br><span class="line"><span class="meta">#</span><span class="bash">docker ps</span></span><br><span class="line">2.-a  查看所有容器</span><br><span class="line"><span class="meta">#</span><span class="bash">docker ps -a</span></span><br><span class="line">3.只查看所有容器id:</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker ps -a -q</span></span><br></pre></td></tr></table></figure>

<p>查看容器详细信息：</p>
<p>inspect  :用于查看容器的配置信息，包含容器名、环境变量、运行命令、主机配置、网络配置和数据卷配置等。</p>
<p>目标：查找某一个运行中容器的id，然后使用docker inspect命令查看容器的信息。</p>
<p>提示：可以使用容器id的前面部分，不需要完整的id。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker inspect bbdc71e   #机器上运行的一个容器ID或者名称</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        "Id": "d95a220a498e352cbfbc098c949fc528dbf5a5c911710b108ea3a9b4aa3a4761",</span><br><span class="line">        "Created": "2017-07-08T03:59:16.18225183Z",</span><br><span class="line">        "Path": "bash",</span><br><span class="line">        "Args": [],</span><br><span class="line">        "State": &#123;</span><br><span class="line">            "Status": "exited",</span><br><span class="line">           "Running": false,</span><br><span class="line">            "Paused": false,</span><br><span class="line">           "Restarting": false,</span><br><span class="line">            "OOMKilled": false,</span><br><span class="line">            "Dead": false,</span><br><span class="line">            "Pid": 0,</span><br><span class="line"></span><br><span class="line">容器信息很多，这里只粘贴了一部分</span><br></pre></td></tr></table></figure>

<p>启动容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker start  name   <span class="comment">#容器ID也可以</span></span></span><br><span class="line">这里的名字是状态里面NAMES列列出的名字，这种方式同样会让容器运行在后台</span><br></pre></td></tr></table></figure>

<p>关闭容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker stop  name</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker <span class="built_in">kill</span>  name      --强制终止容器</span></span><br></pre></td></tr></table></figure>

<p>杀死所有running状态的容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker <span class="built_in">kill</span> $(docker ps  -q)</span></span><br></pre></td></tr></table></figure>

<p>stop和kill的区别：</p>
<p>​    docker stop命令给容器中的进程发送SIGTERM信号，默认行为是会导致容器退出，当然，容器内程序可以捕获该信号并自行处理，例如可以选择忽略。而docker kill则是给容器的进程发送SIGKILL信号，该信号将会使容器必然退出。  </p>
<p>删除容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker rm 容器id或名称</span></span><br><span class="line">要删除一个运行中的容器，添加 -f 参数 --慎用。先stop在删除</span><br></pre></td></tr></table></figure>

<p>根据格式删除所有容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker rm $(docker ps -qf status=exited)</span></span><br><span class="line">-f：过滤</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pause :暂停容器中所有的进程</span><br><span class="line">unpause：恢复容器内暂停的进程，与pause对应</span><br><span class="line"></span><br><span class="line">[root@yixuan ~]# docker pause c7</span><br><span class="line">[root@yixuan ~]# docker ps </span><br><span class="line">CONTAINER ID        IMAGE                          COMMAND             CREATED             STATUS                  PORTS               NAMES</span><br><span class="line">3c0e0f43807d        98ebf73aba                     "/bin/bash"         7 minutes ago       Up 7 minutes (Paused)   80/tcp              c7</span><br><span class="line">[root@yixuan ~]# docker unpause c7  #恢复</span><br></pre></td></tr></table></figure>

<p>重启容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">docker restart name</span></span><br></pre></td></tr></table></figure>

<p>让容器运行在后台：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -dit 镜像ID /bin/bash</span></span><br><span class="line">-d后台运行必须要加-it</span><br></pre></td></tr></table></figure>

<p>﻿如果在docker run后面追加-d=true或者-d，那么容器将会运行在后台模式。此时所有I/O数据只能通过网络资源或者共享卷组来进行交互。因为容器不再监听你执行docker run的这个终端命令行窗口。但你可以通过执行</p>
<p>docker attach来重新附着到该容器的回话中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker attach 容器ID/容器名字</span><br></pre></td></tr></table></figure>

<p> 注：</p>
<p> 容器运行在后台模式下，是不能使用–rm选项的(老版本是这样，新版本已经可以同时生效)</p>
<p><strong>rename  —修改容器名称</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker rename mytest testmy</span><br><span class="line">[root@yixuan ~]# docker ps -a </span><br><span class="line">CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">774c02898fb1        daocloud.io/library/nginx   "/bin/bash -c 'while…"   5 minutes ago       Up About a minute   80/tcp              testmy</span><br></pre></td></tr></table></figure>

<p>stats     </p>
<p>​    Display a live stream of container(s) resource usage statistics—显示容器资源使用统计信息的实时流</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker stats</span><br><span class="line">--当有容器在运行的时候动态显示容器的资源消耗情况，包括：CPU、内存、网络I/O</span><br></pre></td></tr></table></figure>

<p>连接容器：前提是容器在运行状态中 </p>
<p>方法1.attach</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker attach 容器id   <span class="comment">#前提是容器创建时必须指定了交互shell</span></span></span><br></pre></td></tr></table></figure>

<p>方法2.exec      </p>
<p>通过exec命令可以创建两种任务：后台型任务和交互型任务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.交互型任务：</span><br><span class="line">[root@yixuan ~]# docker exec -it  容器id  /bin/bash</span><br><span class="line">root@68656158eb8e:/# ls</span><br><span class="line"></span><br><span class="line">2.后台型任务：不进入容器里面执行命令</span><br><span class="line">[root@yixuan ~]# docker exec 容器id touch /testfile</span><br></pre></td></tr></table></figure>

<p>监控容器的运行：</p>
<p><strong>可以使用logs、top、wait这些子命令</strong></p>
<p>​    logs:使用logs命令查看守护式容器</p>
<p>​        可以通过使用docker logs命令来查看容器的运行日志，其中–tail选项可以指定查看最后几条日志，使用-f选项可以跟踪日志的输出，直到手动停止。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/nginx</span><br><span class="line">[root@yixuan ~]# docker images </span><br><span class="line">[root@yixuan ~]# docker run -it --name nginx1 98ebf73 /bin/bash </span><br><span class="line">root@8459191dbe7c:/# /usr/sbin/nginx   #启动nginx</span><br><span class="line">ctrl+p+q --- 退出</span><br><span class="line">[root@yixuan ~]# docker inspect nginx1  #找到ip地址</span><br><span class="line">[root@yixuan ~]# curl -I http://172.17.0.3  #宿主机访问容器可以访问成功</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.17.1</span><br><span class="line">Date: Mon, 09 Mar 2020 14:49:40 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Last-Modified: Tue, 25 Jun 2019 12:19:45 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: "5d121161-264"</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">[root@yixuan ~]# curl -I http://172.17.0.3  #继续测试访问</span><br><span class="line"></span><br><span class="line">在开启一个终端：</span><br><span class="line">[root@yixuan ~]# docker logs -f nginx1  </span><br><span class="line">root@8459191dbe7c:/# /usr/sbin/nginx</span><br><span class="line">root@8459191dbe7c:/# 172.17.0.1 - - [09/Mar/2020:14:49:33 +0000] "HEAD / HTTP/1.1" 200 0 "-" "curl/7.29.0" "-"</span><br><span class="line">172.17.0.1 - - [09/Mar/2020:14:49:40 +0000] "HEAD / HTTP/1.1" 200 0 "-" "curl/7.29.0" "-"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker logs --tail -2 App_Conainer</span></span><br></pre></td></tr></table></figure>

<p>​    top:显示一个运行的容器里面的进程信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker top  nginx   #容器ID也可以</span><br></pre></td></tr></table></figure>

<p>​    wait :–捕捉容器停止时的退出码</p>
<p>执行此命令后，该命令会”hang”在当前终端，直到容器停止，此时，会打印出容器的退出码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">在第一个终端执行停止容器命令</span><br><span class="line">[root@yixuan ~]# docker stop nginx1</span><br><span class="line">===============================</span><br><span class="line">[root@yixuan ~]# docker wait 01d8aa  #第二个终端操作</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">docker run 之后容器退出的状态码：</span><br><span class="line">0，表示正常退出</span><br><span class="line">非0，表示异常退出（退出状态码采用chroot标准）</span><br><span class="line">125，Docker守护进程本身的错误</span><br><span class="line">126，容器启动后，要执行的默认命令无法调用</span><br><span class="line">127，容器启动后，要执行的默认命令不存在</span><br></pre></td></tr></table></figure>

<p>宿主机和容器之间相互COPY文件</p>
<p>​    cp的用法如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Usage: </span><br><span class="line">docker cp [OPTIONS] CONTAINER:PATH LOCALPATH   --从容器拷贝到本机</span><br><span class="line">docker cp [OPTIONS] LOCALPATH CONTAINER:PATH   --从本机拷贝到容器</span><br></pre></td></tr></table></figure>

<p>​    如：容器nginx中/usr/local/bin/存在test.sh文件，可如下方式copy到宿主机</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker exec -it nginx /bin/bash</span><br><span class="line">root@2a9a18b4a485:/# cd /usr/local/bin/</span><br><span class="line">root@2a9a18b4a485:/usr/local/bin# touch test.sh</span><br><span class="line">ctrl+p+q  退出</span><br><span class="line">[root@yixuan ~]# docker cp mytest:/usr/local/bin/test.sh /root/</span><br></pre></td></tr></table></figure>

<p> 修改完毕后，将该文件重新copy回容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# ls</span><br><span class="line">anaconda-ks.cfg  test.sh</span><br><span class="line">[root@yixuan ~]# echo "123" &gt;&gt; test.sh</span><br><span class="line">[root@yixuan ~]# docker cp /root/test.sh mytest:/usr/local/bin/</span><br></pre></td></tr></table></figure>

<h1 id="docker容器镜像制作"><a href="#docker容器镜像制作" class="headerlink" title="docker容器镜像制作"></a><strong>docker容器镜像制作</strong></h1><h2 id="一、容器文件系统打包"><a href="#一、容器文件系统打包" class="headerlink" title="一、容器文件系统打包"></a><strong>一、容器文件系统打包</strong></h2><p>将容器的文件系统打包成tar文件,也就是把正在运行的容器直接导出为tar包的镜像文件</p>
<p> export    </p>
<p>​    Export a container’s filesystem as a tar archive</p>
<p> 有两种方式：</p>
<p>第一种：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker ps #运行一个容器</span><br><span class="line">CONTAINER ID        IMAGE                            COMMAND             CREATED              STATUS              PORTS               NAMES</span><br><span class="line">96e2b7265d93        daocloud.io/library/centos:6     "/bin/bash"         About an hour ago    Up About an hour                        c6</span><br><span class="line">[root@yixuan ~]# docker exec -it c6 /bin/bash</span><br><span class="line">[root@96e2b7265d93 /]# vi a.txt #编辑一个文件</span><br><span class="line">123</span><br><span class="line">[root@96e2b7265d93 /]# yum install -y vim wget  #安装一个软件</span><br><span class="line">[root@yixuan ~]# docker export -o centos6-1.tar 96e2b726</span><br><span class="line">-o, --output</span><br><span class="line">[root@yixuan ~]# ls  #保存到当前目录下</span><br><span class="line">anaconda-ks.cfg  centos6-1.tar</span><br></pre></td></tr></table></figure>

<p>第二种：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker export 容器名称 &gt; 镜像.tar</span><br></pre></td></tr></table></figure>

<p>导入镜像归档文件到其他宿主机：</p>
<p>import    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> [root@yixuan ~]# docker import centos6-1.tar centos6-1:v1</span><br><span class="line"> sha256:b8414448c913259a28d623643a7b67a6c13da9b3259e70ee5febb16c2b0b1095</span><br><span class="line"> [root@yixuan ~]# docker images</span><br><span class="line"> [root@yixuan ~]# docker run -it --name c6.1 centos6-1:v1 /bin/bash </span><br><span class="line">[root@4a29d58d3bd2 /]# ls</span><br><span class="line">a.txt  bin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  sbin  selinux  srv  sys  tmp  usr  var</span><br><span class="line">[root@4a29d58d3bd2 /]# cat a.txt </span><br><span class="line">123123</span><br></pre></td></tr></table></figure>

<h2 id="二、通过容器创建本地镜像"><a href="#二、通过容器创建本地镜像" class="headerlink" title="二、通过容器创建本地镜像"></a>二、通过容器创建本地镜像</h2><p>背景：<strong>容器运行起来后，又在里面做了一些操作，并且要把操作结果保存到镜像里</strong></p>
<p> 方案：使用 docker commit 指令，把一个正在运行的容器，直接提交为一个镜像。</p>
<p>  commit 是提交的意思,类似告诉svn服务器我要生成一个新的版本。</p>
<p> 例子：</p>
<p>在容器内部新建了一个文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run -it --name c7 daocloud.io/library/centos:7 /bin/bash</span><br><span class="line">[root@2e8f79cb5922 /]# touch test.txt</span><br></pre></td></tr></table></figure>

<p>#  将这个新建的文件提交到镜像中保存</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker commit 2e8f79cb5922 soso/test:v2</span><br><span class="line">sha256:2214bad66e9b1c2079dc89a2e14e997604237cd49a6dc6c29d84e915fbbeb5bd</span><br><span class="line">[root@yixuan ~]# docker images</span><br></pre></td></tr></table></figure>

<p>也可以这样例子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker commit -m <span class="string">"my images version1"</span> -a <span class="string">"soso"</span> 108a85b1ed99 daocloud.io/ubuntu:v2</span></span><br><span class="line">sha256:ffa8a185ee526a9b0d8772740231448a25855031f25c61c1b63077220469b057</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-m                           添加注释</span><br><span class="line">-a                           作者</span><br><span class="line">108a85b1ed99                 容器环境id</span><br><span class="line">daocloud.io/ubuntu:v2      镜像名称：hub的名称/镜像名称：tag </span><br><span class="line">-p，–pause=true              提交时暂停容器运行</span><br></pre></td></tr></table></figure>

<h2 id="镜像迁移"><a href="#镜像迁移" class="headerlink" title="镜像迁移"></a><strong>镜像迁移</strong></h2><p>保存一台宿主机上的镜像为tar文件，然后可以导入到其他的宿主机上：</p>
<p>save      </p>
<p>​    将镜像打包，与下面的load命令相对应</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker save -o nginx.tar daocloud.io/library/nginx</span><br></pre></td></tr></table></figure>

<p>load   </p>
<p>​    与上面的save命令相对应，将上面sava命令打包的镜像通过load命令导入,（实验环境中原来机器上面有镜像可以先删除掉。）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker load &lt; nginx.tar</span><br><span class="line">[root@yixuan ~]# docker images</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">把容器导出成tar包 export   import </span><br><span class="line"></span><br><span class="line">把容器做成镜像  commit  -a "" -m ""  </span><br><span class="line"></span><br><span class="line">把镜像保存为tar包 save    load</span><br></pre></td></tr></table></figure>

<h2 id="通过Dockerfile创建镜像"><a href="#通过Dockerfile创建镜像" class="headerlink" title="通过Dockerfile创建镜像"></a><strong>通过Dockerfile创建镜像</strong></h2><p>Docker 提供了一种更便捷的方式，叫作 Dockerfile</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build命令用于根据给定的Dockerfile构建Docker镜像。</span><br></pre></td></tr></table></figure>

<p>docker build语法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker build [OPTIONS] &lt;PATH | URL | -&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1. 常用选项说明</span><br><span class="line">--build-arg，设置构建时的变量</span><br><span class="line">--no-cache，默认false。设置该选项，将不使用Build Cache构建镜像</span><br><span class="line">--pull，默认false。设置该选项，总是尝试pull镜像的最新版本</span><br><span class="line">--compress，默认false。设置该选项，将使用gzip压缩构建的上下文</span><br><span class="line">--disable-content-trust，默认true。设置该选项，将对镜像进行验证</span><br><span class="line">--file, -f，Dockerfile的完整路径，默认值为‘PATH/Dockerfile’</span><br><span class="line">--isolation，默认--isolation="default"，即Linux命名空间；其他还有process或hyperv</span><br><span class="line">--label，为生成的镜像设置metadata</span><br><span class="line">--squash，默认false。设置该选项，将新构建出的多个层压缩为一个新层，但是将无法在多个镜像之间共享新层；设置该选项，实际上是创建了新image，同时保留原有image。</span><br><span class="line">--tag, -t，镜像的名字及tag，通常name:tag或者name格式；可以在一次构建中为一个镜像设置多个tag</span><br><span class="line">--network，默认default。设置该选项，Set the networking mode for the RUN instructions during build</span><br><span class="line">--quiet, -q ，默认false。设置该选项，Suppress the build output and print image ID on success</span><br><span class="line">--force-rm，默认false。设置该选项，总是删除掉中间环节的容器</span><br><span class="line">--rm，默认--rm=true，即整个构建过程成功后删除中间环节的容器</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">示例： </span><br><span class="line">docker build -t soso/bbauto:v2.1 .</span><br><span class="line"></span><br><span class="line">docker build  是docker创建镜像的命令 </span><br><span class="line">-t 是标识新建的镜像属于 soso的 bbauto镜像 </span><br><span class="line">：v2 是tag </span><br><span class="line">"."是用来指明 我们的使用的Dockerfile文件当前目录的</span><br></pre></td></tr></table></figure>

<p>2.1、 创建镜像所在的文件夹和Dockerfile文件 </p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# mkdir sinatra</span><br><span class="line">[root@yixuan ~]# cd sinatra/</span><br><span class="line">[root@yixuan sinatra]# touch Dockerfile</span><br></pre></td></tr></table></figure>

<p>2.2、 在Dockerfile文件中写入指令，每一条指令都会更新镜像的信息例如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan sinatra]# vim Dockerfile</span><br><span class="line"><span class="meta">#</span><span class="bash">This is a comment </span></span><br><span class="line">FROM daocloud.io/library/centos:7</span><br><span class="line">MAINTAINER soso soso@yixuan</span><br><span class="line">RUN touch a.txt</span><br><span class="line">RUN mkdir /test</span><br></pre></td></tr></table></figure>

<p>格式说明：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">命令要大写，"#"是注解。 </span><br><span class="line">每一个指令后面需要跟空格，语法。</span><br><span class="line">FROM 命令是告诉docker 我们的镜像什么从哪里下载。 </span><br><span class="line">MAINTAINER 是描述 镜像的创建人。 </span><br><span class="line">RUN 命令是在镜像内部执行。就是说他后面的命令应该是针对镜像可以运行的命令。</span><br></pre></td></tr></table></figure>

<p> 2.3、创建镜像 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker build -t soso/centso:7 . </span></span><br><span class="line"></span><br><span class="line">docker build  是docker创建镜像的命令</span><br></pre></td></tr></table></figure>

<p> 详细执行过程：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan sinatra]# docker build -t soso/centos:7 . </span><br><span class="line">Sending build context to Docker daemon  2.048kB</span><br><span class="line">Step 1/4 : FROM daocloud.io/library/centos</span><br><span class="line">latest: Pulling from library/centos</span><br><span class="line">d8d02d457314: Pull complete </span><br><span class="line">Digest: sha256:a36b9e68613d07eec4ef553da84d0012a5ca5ae4a830cf825bb68b929475c869</span><br><span class="line">Status: Downloaded newer image for daocloud.io/library/centos:latest</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> 67fa590cfc1c</span></span><br><span class="line">Step 2/4 : MAINTAINER soso soso@yixuan</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> Running <span class="keyword">in</span> aab3d80939d8</span></span><br><span class="line">Removing intermediate container aab3d80939d8</span><br><span class="line"><span class="meta"> ---&gt;</span><span class="bash"> 12bae7d75a23</span></span><br><span class="line">....</span><br></pre></td></tr></table></figure>

<p> 2.4、创建完成后，从镜像创建容器</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570288025491.png" alt="1570288025491"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570288081326.png" alt="1570288081326"></p>
<h3 id="Dockerfile实例：容器化python的flask应用"><a href="#Dockerfile实例：容器化python的flask应用" class="headerlink" title="Dockerfile实例：容器化python的flask应用"></a><strong>Dockerfile实例：容器化python的flask应用</strong></h3><p>目标： 用 Docker 部署一个用 Python 编写的 Web 应用。</p>
<p>首先部署整个流程：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">基础镜像（python）--&gt;flask--&gt;部署python应用</span><br><span class="line">web框架 flask django</span><br></pre></td></tr></table></figure>

<p> 代码功能：</p>
<p>​    如果当前环境中有”NAME”这个环境变量，就把它打印在”Hello”后，否则就打印”Hello world”，最后再打印出当前环境的 hostname。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# mkdir python_app</span><br><span class="line">[root@yixuan ~]# cd python_app/</span><br><span class="line">[root@yixuan python_app]# vim app.py</span><br><span class="line">from flask import Flask</span><br><span class="line">import socket</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route('/')</span><br><span class="line">def hello():</span><br><span class="line">    html = "&lt;h3&gt;Hello &#123;name&#125;!&lt;/h3&gt;" \</span><br><span class="line">           "&lt;b&gt;Hostname:&lt;/b&gt; &#123;hostname&#125;&lt;br/&gt;"</span><br><span class="line">    return html.format(name=os.getenv("NAME", "world"), hostname=socket.gethostname())</span><br><span class="line"></span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">    app.run(host='0.0.0.0', port=80)</span><br></pre></td></tr></table></figure>

<p>应用依赖：</p>
<p>定义在同目录下的 requirements.txt 文件里，内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan python_app]# vim requirements.txt</span><br><span class="line">Flask</span><br></pre></td></tr></table></figure>

<p>Dockerfile制作容器镜像:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim Dockerfile</span></span><br><span class="line">FROM python:2.7-slim</span><br><span class="line">WORKDIR /app</span><br><span class="line">ADD . /app</span><br><span class="line">RUN pip install --trusted-host pypi.python.org -r requirements.txt</span><br><span class="line">EXPOSE 80</span><br><span class="line">ENV NAME World</span><br><span class="line">CMD ["python", "app.py"]</span><br></pre></td></tr></table></figure>

<p>Dockerfile文件说明：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">FROM python:2.7-slim</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用官方提供的 Python 开发镜像作为基础镜像 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 指定<span class="string">"python:2.7-slim"</span>这个官方维护的基础镜像，从而免去安装 Python 等语言环境的操作。：</span></span><br><span class="line"></span><br><span class="line">WORKDIR /app     ---cd /app</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将工作目录切换为 /app,意思是在这一句之后，Dockerfile 后面的操作都以这一句指定的 /app 目录作为当前目录。 </span></span><br><span class="line"></span><br><span class="line">ADD . /app</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将当前目录下的所有内容复制到 /app 下 Dockerfile 里的原语并不都是指对容器内部的操作。比如 ADD，指的是把当前目录（即 Dockerfile 所在的目录）里的文件，复制到指定容器内的目录当中。</span></span><br><span class="line"></span><br><span class="line">RUN pip install --trusted-host pypi.python.org -r requirements.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用 pip 命令安装这个应用所需要的依赖</span></span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许外界访问容器的 80 端口</span></span><br><span class="line"></span><br><span class="line">ENV NAME World</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置环境变量</span></span><br><span class="line"></span><br><span class="line">CMD ["python", "app.py"]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置容器进程为：python app.py，即：这个 Python 应用的启动命令,这里app.py 的实际路径是 /app/app.py。CMD [<span class="string">"python"</span>, <span class="string">"app.py"</span>] 等价于 <span class="string">"docker run python app.py"</span>。</span></span><br></pre></td></tr></table></figure>

<p>现在目录结构：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan python_app]# ls</span><br><span class="line">Dockerfile  app.py   requirements.txt</span><br></pre></td></tr></table></figure>

<p>构建镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan python_app]# docker build -t testpython .</span><br><span class="line">-t  给这个镜像加一个 Tag</span><br></pre></td></tr></table></figure>

<p>Dockerfile 中的每个原语执行后，都会生成一个对应的镜像层。即使原语本身并没有明显地修改文件的操作（比如，ENV 原语），它对应的层也会存在。只不过在外界看来，这个层是空的。</p>
<p>查看结果：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan python_app]# docker images</span><br><span class="line">REPOSITORY                              TAG                 IMAGE ID           ...</span><br><span class="line">testpython                              latest              16bc21f3eea3</span><br></pre></td></tr></table></figure>

<p>启动容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan python_app]# docker run -it -p 4000:80 testpython /bin/bash</span><br></pre></td></tr></table></figure>

<p>查看容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan python_app]# docker ps </span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED                  </span><br><span class="line">ce02568e64ce        testpython          "/bin/bash"         About a minute ago</span><br></pre></td></tr></table></figure>

<p>进入容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan python_app]# docker exec -it ce02568 /bin/bash </span><br><span class="line">root@ce02568e64ce:/app# python app.py &amp;        #将python运行起来</span><br></pre></td></tr></table></figure>

<p>访问容器内应用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# curl http://localhost:4000</span><br><span class="line">&lt;h3&gt;Hello World!&lt;/h3&gt;&lt;b&gt;Hostname:&lt;/b&gt; f201f6855136&lt;br/&gt;</span><br></pre></td></tr></table></figure>

<p><strong>实战练习</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.创建一个jenkins的Dockerfile</span><br><span class="line">[root@yixuan ~]# mkdir tomcat </span><br><span class="line">[root@yixuan ~]# cd tomcat/</span><br><span class="line">[root@yixuan tomcat]# vim Dockerfile</span><br><span class="line"><span class="meta">#</span><span class="bash"> This my first jenkins Dockerfile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Version 1.0</span></span><br><span class="line"></span><br><span class="line">FROM daocloud.io/library/centos:7</span><br><span class="line">MAINTAINER yixuan</span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1.8.0_211</span><br><span class="line">ENV TOMCAT_HOME /usr/local/apache-tomcat-8.5.47</span><br><span class="line">ENV PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">ENV CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line">ADD apache-tomcat-8.5.47.tar.gz /usr/local/</span><br><span class="line">ADD jdk-8u211-linux-x64.tar.gz /usr/local/</span><br><span class="line">RUN rm -rf /usr/local/apache-tomcat-8.5.47/webapps/*</span><br><span class="line">ADD jenkins.war /usr/local/apache-tomcat-8.5.47/webapps</span><br><span class="line">RUN rm -rf apache-tomcat-8.5.47.tar.gz  apache-tomcat-8.5.47.tar.gz</span><br><span class="line">EXPOSE 8080</span><br><span class="line">ENTRYPOINT ["/usr/local/apache-tomcat-8.5.47/bin/catalina.sh","run"]  #运行的命令</span><br><span class="line"></span><br><span class="line">[root@yixuan tomcat]# pwd</span><br><span class="line">/root/tomcat</span><br><span class="line">[root@yixuan tomcat]# ls  #将jdk与tomcat还有jenkins的包上传到tomcat目录中</span><br><span class="line">apache-tomcat-8.5.47.tar.gz  Dockerfile  jdk-8u211-linux-x64.tar.gz  jenkins.war</span><br><span class="line">[root@yixuan tomcat]# docker build -t jenkins:v1 .</span><br><span class="line">[root@yixuan tomcat]# docker run -itd --name jenkins1 -p 8081:8080 jenkins:v1</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/image-20200307230106461.png" alt="image-20200307230106461"></p>
<p><strong>扩展—-CMD与ENTRYPOINT区别</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">一、dockerfile中的 CMD</span><br><span class="line"></span><br><span class="line">1、每个dockerfile中只能有一个CMD如果有多个那么只执行最后一个。</span><br><span class="line">2、CMD 相当于启动docker时候后面添加的参数看，举个简单例子：</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker run -itd --name <span class="built_in">test</span> image(镜像) /bin/bash -c</span></span><br><span class="line">a、镜像名称后面跟了一个/bin/bash -c ，其实等价于在dockerfile中的CMD ["/bin/bash","-c"]。</span><br><span class="line">b、如果dockerfile中的CMD中有了CMD["/bin/bash","-c"],那么就不用在执行的时候再添加了，如果添加了参数的话那么就相当于要执行你添加的参数，默认的CMD中的参数就无效了。</span><br><span class="line"></span><br><span class="line">二、dockerfile中的ENTRYPOINT</span><br><span class="line">1、一个dockerfile中ENTRYPOINT也只能存在一个，若存在多个那么只执行最后一个，你可以理解为开机启动的意思，和CMD有点像，不过还是有区别。</span><br><span class="line"></span><br><span class="line">2、举个简单例子：</span><br><span class="line">a、dockerfile中有ENTRYPOINT ["tail","-f","/var/log/nginx/access.log"]，那么启动的时候镜像就执行了这个里面的内容，如果你像上面带参数的话就相当于在这个执行的内容后面再加入参数。</span><br><span class="line">案例:</span><br><span class="line">如果我们的dockerfile中有a中的这句话然后我们启动我们的docker:</span><br><span class="line"><span class="meta">#</span><span class="bash">docker run -itd --name <span class="built_in">test</span> image(镜像名) /bin/bash -c</span></span><br><span class="line"></span><br><span class="line">此时就相当于我们启动docker的时候执行了：tail -f /var/log/nginx/access.log /bin/bash -c</span><br><span class="line">这个命令明显就不对.</span><br></pre></td></tr></table></figure>

<h2 id="dockerfile优化"><a href="#dockerfile优化" class="headerlink" title="dockerfile优化"></a>dockerfile优化</h2><p>编译一个简单的nginx成功以后发现好几百M。</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、RUN 命令要尽量写在一条里，每次 RUN 命令都是在之前的镜像上封装，只会增大不会减小</span><br><span class="line"></span><br><span class="line">2、每次进行依赖安装后，记得yum clean all【centos】 </span><br><span class="line"><span class="meta">#</span><span class="bash">yum clean all 清除缓存中的rpm头文件和包文件</span></span><br><span class="line"></span><br><span class="line">3、选择比较小的基础镜像。alpine</span><br></pre></td></tr></table></figure>

<h1 id="部署私有仓库应用"><a href="#部署私有仓库应用" class="headerlink" title="部署私有仓库应用"></a><strong>部署私有仓库应用</strong></h1><p>私有仓库镜像:</p>
<p>registry  –官方出品， 没有图形界面.Docker hub官方已提供容器镜像registry,用于搭建私有仓库</p>
<p>拉取镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/registry:latest</span><br></pre></td></tr></table></figure>

<p>运行容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run -d -v /home/dockerdata/registry:/var/lib/registry --name "pri_registry" --restart=always -p 5000:5000 daocloud.io/library/registry</span><br><span class="line"></span><br><span class="line">参数解释:</span><br><span class="line">/home/dockerdata/registry表示为宿主机的目录，如果不存在自动创建</span><br><span class="line">-v映射目录：  宿主机的目录:容器目录</span><br><span class="line">把宿主机的目录挂载到容器中，将数据目录挂载出来就是为了防止docker私有仓库这个容器被删除的时候，仓库里面的镜像也被删除。</span><br><span class="line">-p 端口映射：本地端口:容器端口</span><br></pre></td></tr></table></figure>

<p>​    注：如果创建容器不成功，报错防火墙，解决方案如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">systemctl stop firewalld</span></span><br><span class="line"><span class="meta">#</span><span class="bash">yum install iptaqbles*</span></span><br><span class="line"><span class="meta">#</span><span class="bash">systemctl start iptables</span></span><br><span class="line"><span class="meta">#</span><span class="bash">iptables -F</span></span><br><span class="line"><span class="meta">#</span><span class="bash">systemctl restart docker</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker ps </span><br><span class="line">CONTAINER ID        IMAGE                          COMMAND                  CREATED              STATUS              PORTS                    NAMES</span><br><span class="line">0823df72b160        daocloud.io/library/registry   "/entrypoint.sh /etc…"   About a minute ago   Up About a minute   0.0.0.0:5000-&gt;5000/tcp   pri_registry</span><br></pre></td></tr></table></figure>

<p>﻿连接容器查看端口状态：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker exec -it  0823df7  /bin/sh</span><br><span class="line">/ # netstat -lntp    #查看5000端口是否开启</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 :::5000                 :::*                    LISTEN      1/registry</span><br><span class="line">/ #</span><br></pre></td></tr></table></figure>

<p>﻿在本机查看能否访问该私有仓库,﻿ 看看状态码是不是200</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# curl -I http://127.0.0.1:5000</span><br><span class="line">HTTP/1.1 200 OK</span><br></pre></td></tr></table></figure>

<p>为了测试，下载1个比较小的镜像,buysbox</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/busybox</span><br></pre></td></tr></table></figure>

<p>上传前必须给镜像打tag  注明ip和端口：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker tag daocloud.io/library/busybox 192.168.246.141:5000/busybox</span><br></pre></td></tr></table></figure>

<p>   下面这个Mysql是我测试的第二个镜像，从daocloud拉取的：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/mysql</span><br><span class="line">[root@yixuan ~]# docker tag daocloud.io/library/mysql 192.168.246.141:5000/daocloud.io/library/mysql</span><br><span class="line">[root@yixuan ~]# docker images</span><br></pre></td></tr></table></figure>

<p>注：tag后面可以使用镜像名称也可以使用id,我这里使用的镜像名称，如果使用官方的镜像，不需要加前缀，但是daocloud.io的得加前缀.</p>
<p>修改请求方式为http:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">默认为https，不改会报以下错误:</span><br><span class="line">Get https://master.up.com:5000/v1/_ping: http: server gave HTTP response to HTTPS client</span><br><span class="line"></span><br><span class="line">[root@yixuan ~]# vim /etc/docker/daemon.json    #不存在则创建</span><br><span class="line">&#123; "insecure-registries":["192.168.246.141:5000"] &#125;</span><br><span class="line"></span><br><span class="line">重启docker：</span><br><span class="line">[root@yixuan ~]# systemctl restart docker</span><br></pre></td></tr></table></figure>

<p>上传镜像到私有仓库：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker push 192.168.246.141:5000/busybox</span><br><span class="line">[root@yixuan ~]# docker push 192.168.246.141:5000/daocloud.io/library/mysql</span><br><span class="line"></span><br><span class="line">宿主机查看存放镜像目录：</span><br><span class="line">[root@yixuan ~]# ls /home/dockerdata/registry/docker/registry/v2/repositories/</span><br></pre></td></tr></table></figure>

<p>查看私有仓库里的所有镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法： # curl  http://ip:port/v2/repo名字/tags/list</span><br><span class="line">[root@yixuan ~]# curl http://192.168.246.141:5000/v2/busybox/tags/list</span><br><span class="line">&#123;"name":"busybox","tags":["latest"]&#125;</span><br><span class="line"></span><br><span class="line">[root@yixuan ~]# curl http://192.168.246.141:5000/v2/daocloud.io/library/mysql/tags/list</span><br><span class="line">&#123;"name":"daocloud.io/library/mysql","tags":["latest"]&#125; </span><br><span class="line"></span><br><span class="line">这条命令会查看仓库下面所有的镜像：</span><br><span class="line">[root@yixuan ~]# curl http://192.168.246.141:5000/v2/_catalog</span><br></pre></td></tr></table></figure>

<p>拉取镜像测试：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.先将刚才打了tags的镜像删掉</span><br><span class="line">[root@yixuan ~]# docker rmi 192.168.246.141:5000/busybox</span><br><span class="line">2.拉取镜像：</span><br><span class="line">[root@yixuan ~]# docker pull 192.168.246.141:5000/busybox</span><br><span class="line">[root@yixuan ~]# docker images</span><br></pre></td></tr></table></figure>

<h1 id="部署docker-web-ui应用"><a href="#部署docker-web-ui应用" class="headerlink" title="部署docker web ui应用"></a><strong>部署docker web ui应用</strong></h1><p>下载并运行容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull uifd/ui-for-docker</span><br><span class="line">[root@yixuan ~]# docker run -it -d --name docker-web -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock docker.io/uifd/ui-for-docker</span><br></pre></td></tr></table></figure>

<p>浏览器访问测试：</p>
<p>​    ip:9000    </p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/wps1-1570414924725.jpg" alt="img"></p>
<h1 id="docker资源限制"><a href="#docker资源限制" class="headerlink" title="docker资源限制"></a><strong>docker资源限制</strong></h1><p>在使用 docker 运行容器时，一台主机上可能会运行几百个容器，这些容器虽然互相隔离，但是底层却使用着相同的 CPU、内存和磁盘资源。如果不对容器使用的资源进行限制，那么容器之间会互相影响，小的来说会导致容器资源使用不公平；大的来说，可能会导致主机和集群资源耗尽，服务完全不可用。</p>
<p>CPU 和内存的资源限制已经是比较成熟和易用，能够满足大部分用户的需求。磁盘限制也是不错的，虽然现在无法动态地限制容量，但是限制磁盘读写速度也能应对很多场景。</p>
<p>至于网络，docker 现在并没有给出网络限制的方案，也不会在可见的未来做这件事情，因为目前网络是通过插件来实现的，和容器本身的功能相对独立，不是很容易实现，扩展性也很差。</p>
<p>资源限制一方面可以让我们为容器（应用）设置合理的 CPU、内存等资源，方便管理；另外一方面也能有效地预防恶意的攻击和异常，对容器来说是非常重要的功能。</p>
<h2 id="系统压力测试工具stress"><a href="#系统压力测试工具stress" class="headerlink" title="系统压力测试工具stress"></a><strong>系统压力测试工具stress</strong></h2><p>​    stress是一个linux下的压力测试工具，专门为那些想要测试自己的系统，完全高负荷和监督这些设备运行的用户。</p>
<h2 id="cpu资源限制"><a href="#cpu资源限制" class="headerlink" title="cpu资源限制"></a><strong>cpu资源限制</strong></h2><h3 id="限制CPU-Share"><a href="#限制CPU-Share" class="headerlink" title="限制CPU Share"></a><strong>限制CPU Share</strong></h3><p>什么是cpu share:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker 允许用户为每个容器设置一个数字，代表容器的 CPU share，默认情况下每个容器的 share 是 1024。这个 share 是相对的，本身并不能代表任何确定的意义。当主机上有多个容器运行时，每个容器占用的 CPU 时间比例为它的 share 在总额中的比例。docker 会根据主机上运行的容器和进程动态调整每个容器使用 CPU 的时间比例。</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">如果主机上有两个一直使用 CPU 的容器（为了简化理解，不考虑主机上其他进程），其 CPU share 都是 1024，那么两个容器 CPU 使用率都是 50%；如果把其中一个容器的 share 设置为 512，那么两者 CPU 的使用率分别为 70% 和 30%；如果删除 share 为 1024 的容器，剩下来容器的 CPU 使用率将会是 100%。</span><br></pre></td></tr></table></figure>

<p>  好处：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">能保证 CPU 尽可能处于运行状态，充分利用 CPU 资源，而且保证所有容器的相对公平；</span><br></pre></td></tr></table></figure>

<p>   缺点：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">无法指定容器使用 CPU 的确定值。</span><br></pre></td></tr></table></figure>

<p>设置 CPU share 的参数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-c --cpu-shares，它的值是一个整数</span><br></pre></td></tr></table></figure>

<p>我的机器是 4 核 CPU，因此运行一个stress容器,使用 stress 启动 4 个进程来产生计算压力：（无CPU限制）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull progrium/stress</span><br><span class="line">[root@yixuan ~]# yum install -y htop</span><br><span class="line">[root@yixuan ~]# docker run --rm -it progrium/stress --cpu 4</span><br><span class="line">stress: info: [1] dispatching hogs: 4 cpu, 0 io, 0 vm, 0 hdd</span><br><span class="line">stress: dbug: [1] using backoff sleep of 12000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 4 [6] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 9000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 3 [7] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 6000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 2 [8] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 3000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 1 [9] forked</span><br></pre></td></tr></table></figure>

<p>在另外一个 terminal 使用 htop 查看资源的使用情况：</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570424556113.png" alt="1570424556113"> </p>
<p>上图中看到，CPU 四个核资源都达到了 100%。</p>
<p> 为了比较，另外启动一个 share 为 512 的容器：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.先将没有做限制的命令运行起来</span><br><span class="line">[root@yixuan ~]# docker run --rm -it progrium/stress --cpu 4</span><br><span class="line">2.在开启一个终端，运行做了CPU限制的命令</span><br><span class="line">[root@yixuan ~]# docker run --rm -it -c 512 progrium/stress --cpu 4</span><br><span class="line">stress: info: [1] dispatching hogs: 4 cpu, 0 io, 0 vm, 0 hdd</span><br><span class="line">stress: dbug: [1] using backoff sleep of 12000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 4 [6] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 9000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 3 [7] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 6000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 2 [8] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 3000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 1 [9] forked</span><br><span class="line">3.在开启一个终端执行htop命令</span><br><span class="line">[root@yixuan ~]# htop</span><br></pre></td></tr></table></figure>

<p>因为默认情况下，容器的 CPU share 为 1024，所以这两个容器的 CPU 使用率应该大致为 2：1，下面是启动第二个容器之后的监控截图：</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570425017249.png" alt="1570425017249"> </p>
<p>两个容器分别启动了四个 stress 进程，第一个容器 stress 进程 CPU 使用率都在 60% 左右，第二个容器 stress 进程 CPU 使用率在 30% 左右，比例关系大致为 2：1，符合之前的预期。 </p>
<h3 id="限制CPU-核数"><a href="#限制CPU-核数" class="headerlink" title="限制CPU 核数"></a><strong>限制CPU 核数</strong></h3><p>限制容器能使用的 CPU 核数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-c --cpu-shares 参数只能限制容器使用 CPU 的比例，或者说优先级，无法确定地限制容器使用 CPU 的具体核数；从 1.13 版本之后，docker 提供了 --cpus 参数可以限定容器能使用的 CPU 核数。这个功能可以让我们更精确地设置容器 CPU 使用量，是一种更容易理解也因此更常用的手段.</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--cpus 后面跟着一个浮点数，代表容器最多使用的核数，可以精确到小数点二位，也就是说容器最小可以使用 0.01 核 CPU。</span><br></pre></td></tr></table></figure>

<p>限制容器只能使用 1.5 核数 CPU：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run --rm -it --cpus 1.5 progrium/stress --cpu 3</span><br><span class="line">stress: info: [1] dispatching hogs: 3 cpu, 0 io, 0 vm, 0 hdd</span><br><span class="line">stress: dbug: [1] using backoff sleep of 9000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 3 [6] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 6000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 2 [7] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 3000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 1 [8] forked</span><br></pre></td></tr></table></figure>

<p>在容器里启动三个 stress 来跑 CPU 压力，如果不加限制，这个容器会导致 CPU 的使用率为 300% 左右（也就是说会占用三个核的计算能力）。实际的监控如下图：</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570425708170.png" alt="img"> </p>
<p>可以看到，每个 stress 进程 CPU 使用率大约在 50%，总共的使用率为 150%，符合 1.5 核的设置。 </p>
<p>如果设置的 –cpus 值大于主机的 CPU 核数，docker 会直接报错：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run --rm -it --cpus 8 progrium/stress --cpu 3  #启用三个进程做测试</span><br><span class="line">docker: Error response from daemon: Range of CPUs is from 0.01 to 4.00, as there are only 4 CPUs available.</span><br><span class="line">See 'docker run --help'.</span><br></pre></td></tr></table></figure>

<p>如果多个容器都设置了 –cpus ，并且它们之和超过主机的 CPU 核数，并不会导致容器失败或者退出，这些容器之间会竞争使用 CPU，具体分配的 CPU 数量取决于主机运行情况和容器的 CPU share 值。也就是说 –cpus 只能保证在 CPU 资源充足的情况下容器最多能使用的 CPU 数，docker 并不能保证在任何情况下容器都能使用这么多的 CPU（因为这根本是不可能的）。    </p>
<h3 id="CPU-绑定"><a href="#CPU-绑定" class="headerlink" title="CPU 绑定"></a><strong>CPU 绑定</strong></h3><p>限制容器运行在某些 CPU 核</p>
<p><strong>注</strong>：</p>
<p>一般并不推荐在生产中这样使用</p>
<p>docker 允许调度的时候限定容器运行在哪个 CPU 上。</p>
<p>案例：</p>
<p>假如主机上有 4 个核，可以通过 –cpuset 参数让容器只运行在前两个核上：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run --rm -it --cpuset-cpus=0,1 progrium/stress --cpu 2 </span><br><span class="line">stress: info: [1] dispatching hogs: 2 cpu, 0 io, 0 vm, 0 hdd</span><br><span class="line">stress: dbug: [1] using backoff sleep of 6000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 2 [6] forked</span><br><span class="line">stress: dbug: [1] using backoff sleep of 3000us</span><br><span class="line">stress: dbug: [1] --&gt; hogcpu worker 1 [7] forked</span><br></pre></td></tr></table></figure>

<p>这样，监控中可以看到只有前面两个核 CPU 达到了 100% 使用率。</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570426108182.png" alt="img"> </p>
<h2 id="mem资源限制"><a href="#mem资源限制" class="headerlink" title="mem资源限制"></a><strong>mem资源限制</strong></h2><p>docker 默认没有对容器内存进行限制，容器可以使用主机提供的所有内存。 </p>
<p>不限制内存带来的问题：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">这是非常危险的事情，如果某个容器运行了恶意的内存消耗软件，或者代码有内存泄露，很可能会导致主机内存耗尽，因此导致服务不可用。可以为每个容器设置内存使用的上限，一旦超过这个上限，容器会被杀死，而不是耗尽主机的内存。</span><br></pre></td></tr></table></figure>

<p>限制内存带来的问题：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">限制内存上限虽然能保护主机，但是也可能会伤害到容器里的服务。如果为服务设置的内存上限太小，会导致服务还在正常工作的时候就被 OOM 杀死；如果设置的过大，会因为调度器算法浪费内存。</span><br></pre></td></tr></table></figure>

<p>合理做法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1. 为应用做内存压力测试，理解正常业务需求下使用的内存情况，然后才能进入生产环境使用</span><br><span class="line">2. 一定要限制容器的内存使用上限，尽量保证主机的资源充足，一旦通过监控发现资源不足，就进行扩容或者对容器进行迁移</span><br><span class="line">3. 尽量不要使用 swap，swap 的使用会导致内存计算复杂，对调度器非常不友好</span><br></pre></td></tr></table></figure>

<p><strong>docker 限制容器内存使用量:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker 启动参数中，和内存限制有关的包括（参数的值一般是内存大小，也就是一个正数，后面跟着内存单位 b、k、m、g，分别对应 bytes、KB、MB、和 GB):</span><br><span class="line"></span><br><span class="line">-m --memory：容器能使用的最大内存大小，最小值为 4m</span><br></pre></td></tr></table></figure>

<p>如果限制容器的内存使用为 64M，在申请 64M 资源的情况下，容器运行正常（如果主机上内存非常紧张，并不一定能保证这一点）：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run --rm -it -m 64m progrium/stress --vm 1 --vm-bytes 64M --vm-hang 0</span><br><span class="line">stress: info: [1] dispatching hogs: 0 cpu, 0 io, 1 vm, 0 hdd</span><br><span class="line">stress: dbug: [1] using backoff sleep of 3000us</span><br><span class="line">stress: dbug: [1] --&gt; hogvm worker 1 [6] forked</span><br><span class="line">stress: dbug: [6] allocating 67108864 bytes ...</span><br><span class="line">stress: dbug: [6] touching bytes in strides of 4096 bytes ...</span><br><span class="line">stress: dbug: [6] sleeping forever with allocated memory</span><br><span class="line"></span><br><span class="line">容器可以正常运行。</span><br><span class="line">-m 64m：限制你这个容器只能使用64M</span><br><span class="line">--vm-bytes 64M：将内存撑到64兆是不会报错，因为我有64兆内存可用。</span><br><span class="line">hang:就是卡在这里。</span><br><span class="line">--vm：生成几个占用内存的进程</span><br></pre></td></tr></table></figure>

<p>而如果申请 150M 内存，会发现容器里的进程被 kill 掉了（worker 6 got signal 9，signal 9 就是 kill 信号）</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run --rm -it -m 64m progrium/stress --vm 1 --vm-bytes 150M --vm-hang 0</span><br><span class="line">stress: info: [1] dispatching hogs: 0 cpu, 0 io, 1 vm, 0 hdd</span><br><span class="line">stress: dbug: [1] using backoff sleep of 3000us</span><br><span class="line">stress: dbug: [1] --&gt; hogvm worker 1 [6] forked</span><br><span class="line">stress: dbug: [6] allocating 157286400 bytes ...</span><br><span class="line">stress: dbug: [6] touching bytes in strides of 4096 bytes ...</span><br><span class="line">stress: FAIL: [1] (416) &lt;-- worker 6 got signal 9</span><br><span class="line">stress: WARN: [1] (418) now reaping child worker processes</span><br><span class="line">stress: FAIL: [1] (422) kill error: No such process</span><br><span class="line">stress: FAIL: [1] (452) failed run completed in 1s</span><br></pre></td></tr></table></figure>

<h2 id="io-资源限制-了解"><a href="#io-资源限制-了解" class="headerlink" title="io 资源限制(了解)"></a><strong>io 资源限制(了解)</strong></h2><p>对于磁盘来说，考量的参数是容量和读写速度，因此对容器的磁盘限制也应该从这两个维度出发。目前 docker 支持对磁盘的读写速度进行限制，但是并没有方法能限制容器能使用的磁盘容量（一旦磁盘 mount 到容器里，容器就能够使用磁盘的所有容量）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">第一种是：磁盘的读写速率的限制</span><br><span class="line">第二种是：磁盘的读写频率的限制</span><br></pre></td></tr></table></figure>

<h1 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a><strong>端口转发</strong></h1><p> <img src= "/img/loading.gif" data-src="/2020/07/27/docker/1570429105816.png" alt="1570429105816"></p>
<p>使用端口转发解决容器端口访问问题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-p:创建应用容器的时候，一般会做端口映射，这样是为了让外部能够访问这些容器里的应用。可以用多个-p指定多个端口映射关系。</span><br></pre></td></tr></table></figure>

<p>mysql应用端口转发：</p>
<p>查看本地地址：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# ip a </span><br><span class="line">...</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:9c:bf:66 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.246.141/24 brd 192.168.246.255 scope global dynamic ens33</span><br><span class="line">       valid_lft 5217593sec preferred_lft 5217593sec</span><br><span class="line">    inet6 fe80::a541:d470:4d9a:bc29/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>

<p>运行容器：使用-p作端口转发，<strong>把本地3307转发到容器的3306</strong>，其他参数需要查看发布容器的页面提示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/mysql:5.7</span><br><span class="line">[root@yixuan ~]# docker run -d --name mysql1 -p 3307:3306  -e MYSQL_ROOT_PASSWORD=Qf@123! daocloud.io/library/mysql:5.7</span><br><span class="line">a4327dbddf665b4302c549320bff869b8a027c2e1eead363d84ce5d06acf2698</span><br><span class="line"></span><br><span class="line">-e MYSQL_ROOT_PASSWORD= 设置环境变量，这里是设置mysql的root用户的密码</span><br></pre></td></tr></table></figure>

<p>通过本地IP：192.168.246.141的3307端口访问容器mysql1内的数据库，出现如下提示恭喜你</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.安装一个mysql客户端</span><br><span class="line">[root@yixuan ~]# yum install -y mysql</span><br><span class="line">2.登录</span><br><span class="line">[root@yixuan ~]# mysql -uroot -p'Qf@123!' -h 192.168.246.141 -P3307</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.7.26 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-P（大P）:当使用-P标记时，Docker 会随机映射一个 32768~49900 的端口到内部容器开放的网络端口。如下：</span><br><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/redis</span><br><span class="line">[root@yixuan ~]# docker images</span><br><span class="line">REPOSITORY                   TAG        IMAGE ID            CREATED           SIZE</span><br><span class="line">daocloud.io/library/redis    latest     598a6f110d01        2months ago       118MB</span><br><span class="line">[root@yixuan ~]# docker run --name myredis -P -d daocloud.io/library/redis</span><br><span class="line">ca06a026d84a0605d9a9ce6975389a79f4ab9a9a043a03f088cd909c1fe52e29</span><br><span class="line">[root@yixuan ~]# docker ps </span><br><span class="line">CONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line">ca06a026d84a        daocloud.io/library/redis       "docker-entrypoint.s…"   22 seconds ago      Up 21 seconds       0.0.0.0:32768-&gt;6379/tcp             myredis</span><br></pre></td></tr></table></figure>

<p>从上面的结果中可以看出，本地主机的32768端口被映射到了redis容器的6379端口上，也就是说访问本机的32768端口即可访问容器内redis端口。</p>
<p>在别的机器上通过上面映射的端口32768连接这个容器的redis</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@docker-server2 ~]# yum install -y redis</span><br><span class="line">[root@docker-server2 ~]# redis-cli -h 192.168.246.141 -p 32768</span><br><span class="line">192.168.246.141:32768&gt; ping</span><br><span class="line">PONG</span><br><span class="line">192.168.246.141:32768&gt;</span><br></pre></td></tr></table></figure>

<h1 id="容器卷"><a href="#容器卷" class="headerlink" title="容器卷"></a><strong>容器卷</strong></h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">把本地宿主机上面的某一个目录挂载到容器里面的目录去。这两个目录都不用提前存在，会自动创建</span><br></pre></td></tr></table></figure>

<p>新卷只能在容器创建过程当中挂载</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run -it --name testnginx -v /test:/test2 daocloud.io/library/nginx /bin/bash</span><br><span class="line">root@86320e734cd1:/# ls</span><br><span class="line">root@86320e734cd1:/# ctrl+p+q  #退出</span><br><span class="line"></span><br><span class="line">测试：</span><br><span class="line">[root@yixuan ~]# cd /test/</span><br><span class="line">[root@yixuan test]# ls</span><br><span class="line">[root@yixuan test]# touch a.txt </span><br><span class="line">[root@yixuan test]# cd</span><br><span class="line">[root@yixuan ~]# docker exec -it testnginx /bin/bash</span><br><span class="line">root@86320e734cd1:/# cd test2/</span><br><span class="line">root@86320e734cd1:/test2# ls</span><br><span class="line">a.txt</span><br><span class="line"></span><br><span class="line">共享文件：</span><br><span class="line">[root@yixuan ~]# mkdir /dir</span><br><span class="line">[root@yixuan ~]# vim /dir/a.txt</span><br><span class="line">123</span><br><span class="line">[root@yixuan ~]# docker run -it --name testnginx2 -v /dir/a.txt:/dir1/a.txt daocloud.io/library/nginx /bin/bash</span><br><span class="line">root@f899be627552:/# cat dir1/a.txt </span><br><span class="line">123</span><br><span class="line">root@f899be627552:/#</span><br></pre></td></tr></table></figure>

<p>共享其他容器的卷（其他容器用同一个卷）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker run -it --name testnginx1 --volumes-from testnginx daocloud.io/library/nginx /bin/bash</span><br><span class="line">root@50e6f726335c:/# ls</span><br><span class="line">bin   dev  home  lib64	mnt  proc  run	 srv  test2  usr</span><br><span class="line">boot  etc  lib	 media	opt  root  sbin  sys  tmp    var</span><br><span class="line">root@50e6f726335c:/# cd test2/</span><br><span class="line">root@50e6f726335c:/test2# ls</span><br><span class="line">a.txt</span><br></pre></td></tr></table></figure>

<p>实际应用中可以利用多个-v选项把宿主机上的多个目录同时共享给新建容器：</p>
<p>比如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -it -v /abc:/abc -v /def:/def 1ae9</span></span><br></pre></td></tr></table></figure>

<h1 id="部署centos7容器应用"><a href="#部署centos7容器应用" class="headerlink" title="部署centos7容器应用"></a><strong>部署centos7容器应用</strong></h1><p>镜像下载：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker pull daocloud.io/library/centos:7</span><br></pre></td></tr></table></figure>

<p>systemd 整合:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">因为 systemd 要求 CAPSYSADMIN 权限，从而得到了读取到宿主机 cgroup 的能力，CentOS7 中已经用 fakesystemd 代替了 systemd 。 但是我们使用systemd，可用参考下面的 Dockerfile：</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# mkdir test</span><br><span class="line">[root@yixuan ~]# cd test/</span><br><span class="line">[root@yixuan test]# vim Dockerfile</span><br><span class="line">FROM daocloud.io/library/centos:7</span><br><span class="line">MAINTAINER "soso"  soso@qq.com</span><br><span class="line">ENV container docker</span><br><span class="line"></span><br><span class="line">RUN yum -y swap -- remove fakesystemd -- install systemd systemd-libs</span><br><span class="line">RUN yum -y update; yum clean all; \</span><br><span class="line">(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \</span><br><span class="line">rm -f /lib/systemd/system/multi-user.target.wants/*;\</span><br><span class="line">rm -f /etc/systemd/system/*.wants/*;\</span><br><span class="line">rm -f /lib/systemd/system/local-fs.target.wants/*; \</span><br><span class="line">rm -f /lib/systemd/system/sockets.target.wants/*udev*; \</span><br><span class="line">rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \</span><br><span class="line">rm -f /lib/systemd/system/basic.target.wants/*;\</span><br><span class="line">rm -f /lib/systemd/system/anaconda.target.wants/*;</span><br><span class="line"></span><br><span class="line">VOLUME [ "/sys/fs/cgroup" ]</span><br><span class="line"></span><br><span class="line">CMD ["/usr/sbin/init"]</span><br></pre></td></tr></table></figure>

<p>这个Dockerfile删除fakesystemd 并安装了 systemd。然后再构建基础镜像:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan test]# docker build -t local/c7-systemd .</span><br></pre></td></tr></table></figure>

<p>执行没有问题这就生成一个包含 systemd 的应用容器示例</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan test]# docker images</span><br><span class="line">REPOSITORY         TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">local/c7-systemd   latest              a153dcaa642e        6 minutes ago       391MB</span><br></pre></td></tr></table></figure>

<p>为了使用像上面那样包含 systemd 的容器，需要创建一个类似下面的Dockerfile：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan test]# mkdir http</span><br><span class="line">[root@yixuan test]# cd http/</span><br><span class="line">[root@yixuan http]# vim Dockerfile</span><br><span class="line">FROM local/c7-systemd</span><br><span class="line">RUN yum -y install httpd; yum clean all; systemctl enable httpd.service</span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD ["/usr/sbin/init"]</span><br></pre></td></tr></table></figure>

<p>构建镜像:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan http]# docker build -t local/c7-systemd-httpd .</span><br></pre></td></tr></table></figure>

<p>运行包含 systemd 的应用容器:</p>
<p>为了运行一个包含 systemd 的容器，需要使用–privileged选项， 并且挂载主机的 cgroups 文件夹。 下面是运行包含 systemd 的 httpd 容器的示例命令：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan http]# docker run --privileged -tid -v /sys/fs/cgroup:/sys/fs/cgroup:ro -p 80:80 local/c7-systemd-httpd</span><br><span class="line"></span><br><span class="line">--privileged:授权提权。让容器内的root用户拥有正真root权限(有些权限是没有的)</span><br></pre></td></tr></table></figure>

<p>注意：如果不加会运行在前台(没有用-d)，可以用ctrl+p+q放到后台去</p>
<p>测试可用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan http]# yum install -y elinks</span><br><span class="line">[root@yixuan http]# elinks --dump http://192.168.246.141  #apache的默认页面</span><br><span class="line">                                 Testing 123..</span><br><span class="line"></span><br><span class="line">   This page is used to test the proper operation of the [1]Apache HTTP</span><br><span class="line">   server after it has been installed. If you can read this page it means</span><br><span class="line">   that this site is working properly. This server is powered by [2]CentOS.</span><br></pre></td></tr></table></figure>

<p>再来个安装openssh-server的例子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan http]# cd ..</span><br><span class="line">[root@yixuan test]# mkdir ssh</span><br><span class="line">[root@yixuan test]# cd ssh/</span><br><span class="line">[root@yixuan ssh]# vim Dockerfile</span><br><span class="line">FROM local/c7-systemd</span><br><span class="line">RUN yum -y install openssh-server; yum clean all; systemctl enable sshd.service</span><br><span class="line">RUN echo 1 | passwd --stdin root</span><br><span class="line">EXPOSE 22</span><br><span class="line">CMD ["/usr/sbin/init"]</span><br><span class="line">[root@yixuan ssh]# docker build --rm -t local/c7-systemd-sshd .</span><br><span class="line">[root@yixuan ssh]# docker run --privileged -tid -v /sys/fs/cgroup:/sys/fs/cgroup:ro -p 2222:22 local/c7-systemd-sshd</span><br><span class="line">[root@yixuan ssh]# ssh 192.168.246.141 -p 2222</span><br><span class="line">[root@ce1af52a6f6c ~]#</span><br></pre></td></tr></table></figure>

<h1 id="docker数据存储位置"><a href="#docker数据存储位置" class="headerlink" title="docker数据存储位置"></a>docker数据存储位置</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查看存储路径</span><br><span class="line">[root@yixuan ~]# docker info | grep Root</span><br><span class="line"> Docker Root Dir: /var/lib/docker</span><br><span class="line"> </span><br><span class="line">修改默认存储位置：</span><br><span class="line">在dockerd的启动命令后面追加--data-root参数指定新的位置</span><br><span class="line">[root@yixuan ~]# vim  /usr/lib/systemd/system/docker.service</span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --data-root=/data</span><br><span class="line"></span><br><span class="line">[root@yixuan ~]# systemctl daemon-reload </span><br><span class="line">[root@yixuan ~]# systemctl restart docker</span><br><span class="line"></span><br><span class="line">查看是否生效：</span><br><span class="line">[root@yixuan ~]# docker info | grep Root</span><br><span class="line"> Docker Root Dir: /data</span><br><span class="line"> </span><br><span class="line"> [root@yixuan ~]# cd /data/</span><br><span class="line">[root@yixuan data]# ls</span><br><span class="line">builder  buildkit  containers  image  network  overlay2  plugins  runtimes  swarm  tmp  trust  volumes</span><br></pre></td></tr></table></figure>

<h1 id="docker网络"><a href="#docker网络" class="headerlink" title="docker网络"></a>docker网络</h1><h2 id="容器网络分类"><a href="#容器网络分类" class="headerlink" title="容器网络分类"></a><strong>容器网络分类</strong></h2><p>注：</p>
<p>面试用，用了编排之后就没有用了</p>
<p> 查看当前网络：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yixuan ~]# docker network list</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">9b902ee3eafb        bridge              bridge              local</span><br><span class="line">140a9ff4bb94        host                host                local</span><br><span class="line">d1210426b3b0        none                null                local</span><br></pre></td></tr></table></figure>

<p><strong>docker安装后，默认会创建三种网络类型，bridge、host和none</strong></p>
<p>1、bridge:网络桥接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">默认情况下启动、创建容器都是用该模式，所以每次docker容器重启时会按照顺序获取对应ip地址。</span><br></pre></td></tr></table></figure>

<p>2、none：无指定网络</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">启动容器时，可以通过--network=none,docker容器不会分配局域网ip</span><br></pre></td></tr></table></figure>

<p>3、host：主机网络</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> docker容器和主机共用一个ip地址。</span><br><span class="line"> 使用host网络创建容器：</span><br><span class="line">[root@yixuan ~]# docker run -it --name testnginx2 --net host 98ebf73ab</span><br><span class="line">[root@yixuan ~]# netstat -lntp | grep 80</span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      3237/docker-proxy</span><br><span class="line"></span><br><span class="line">浏览器访问宿主ip地址</span><br></pre></td></tr></table></figure>

<p>4、固定ip:</p>
<p>  创建固定Ip的容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">4.1、创建自定义网络类型，并且指定网段</span><br><span class="line">[root@yixuan ~]# docker network create --subnet=192.168.0.0/16 staticnet</span><br><span class="line">4efd309244c6ad70eda2d047a818a3aec5b162f5ca29fb6024c09a5efbf15854</span><br><span class="line">通过docker network ls可以查看到网络类型中多了一个staticnet:</span><br><span class="line">[root@yixuan ~]# docker network ls</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">9b902ee3eafb        bridge              bridge              local</span><br><span class="line">140a9ff4bb94        host                host                local</span><br><span class="line">d1210426b3b0        none                null                local</span><br><span class="line">4efd309244c6        staticnet           bridge              local</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> 4.2、使用新的网络类型创建并启动容器</span><br><span class="line"> [root@yixuan ~]# docker run -itd --name userserver --net staticnet --ip 192.168.0.2 daocloud.io/library/centos:7</span><br><span class="line"> 通过docker inspect可以查看容器ip为192.168.0.2:</span><br><span class="line"> [root@yixuan ~]# docker inspect userserver | grep -i ipaddress</span><br><span class="line">            "SecondaryIPAddresses": null,</span><br><span class="line">            "IPAddress": "",</span><br><span class="line">                    "IPAddress": "192.168.0.2",</span><br><span class="line"></span><br><span class="line">关闭容器并重启，发现容器ip并未发生改变</span><br></pre></td></tr></table></figure>

<h2 id="异主容器互联"><a href="#异主容器互联" class="headerlink" title="异主容器互联"></a><strong>异主容器互联</strong></h2><h3 id="方式1、路由方式"><a href="#方式1、路由方式" class="headerlink" title="方式1、路由方式"></a><strong>方式1、路由方式</strong></h3><p>小规模docker环境大部分运行在单台主机上，如果公司大规模采用docker，那么多个宿主机上的docker如何互联</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/wps2-1570439764225.jpg" alt="img"></p>
<p>Docker默认的内部ip为172.17.42.0网段，所以必须要修改其中一台的默认网段以免ip冲突。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">注:docker版本为1.13</span><br><span class="line">1.在docker-server1上面操作----192.168.246.141</span><br><span class="line">[root@docker-server1 ~]# docker pull daocloud.io/library/centos</span><br><span class="line">[root@docker-server1 ~]# vim /etc/sysconfig/docker-network</span><br><span class="line">DOCKER_NETWORK_OPTIONS=--bip=172.17.0.1/16</span><br><span class="line">[root@docker-server1 ~]# vim /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">[root@docker-server1 ~]# sysctl -p</span><br><span class="line">[root@docker-server1 ~]# reboot</span><br><span class="line">[root@docker-server1 ~]# docker images</span><br><span class="line">REPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">daocloud.io/library/centos   latest              0f3e07c0138f        3 weeks ago         220MB</span><br><span class="line">[root@docker-server1 ~]# docker run -it --name centos 0f3e07c0138f /bin/bash</span><br><span class="line">[root@ef1a4d6be97f /]#</span><br><span class="line">[root@docker-server1 ~]# docker inspect centos | grep IPAddress</span><br><span class="line">            "SecondaryIPAddresses": null,</span><br><span class="line">            "IPAddress": "172.17.0.2",</span><br><span class="line">                    "IPAddress": "172.17.0.2",</span><br><span class="line">===============================================</span><br><span class="line">2.docker-server2(192.168.246.143)上：</span><br><span class="line">[root@docker-server2 ~]# vim /etc/sysconfig/docker-network</span><br><span class="line">DOCKER_NETWORK_OPTIONS=--bip=172.18.0.1/16</span><br><span class="line">[root@docker-server2 ~]# vim /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">[root@docker-server2 ~]# sysctl -p</span><br><span class="line">[root@docker-server2 ~]# reboot</span><br><span class="line">[root@docker-server2 ~]# systemctl daemon-reload</span><br><span class="line">[root@docker-server2 ~]# systemctl restart docker</span><br><span class="line">[root@docker-server2 ~]# docker images</span><br><span class="line">REPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">daocloud.io/library/centos   latest              0f3e07c0138f        3 weeks ago         220MB</span><br><span class="line">[root@docker-server2 ~]# docker run -it --name centos 0f3e07c0138f /bin/bash </span><br><span class="line">[root@c84a8c704d03 /]#</span><br><span class="line">[root@docker-server2 ~]# docker inspect c | grep IPAddress</span><br><span class="line">            "SecondaryIPAddresses": null,</span><br><span class="line">            "IPAddress": "172.18.0.2",</span><br><span class="line">                    "IPAddress": "172.18.0.2",</span><br></pre></td></tr></table></figure>

<p>添加路由：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@docker-server1 ~]# route add -net 172.18.0.0/16 gw 192.168.246.143</span><br><span class="line">[root@docker-server2 ~]# route add -net 172.17.0.0/16 gw 192.168.246.141</span><br></pre></td></tr></table></figure>

<p>验证：</p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1571838897484.png" alt="1571838897484"></p>
<p><img src= "/img/loading.gif" data-src="/2020/07/27/docker/1571839100999.png" alt="1571839100999"></p>
<p>现在两台宿主机里的容器就可以通信了。</p>
<h3 id="方式二、open-vswitch"><a href="#方式二、open-vswitch" class="headerlink" title="方式二、open vswitch"></a><strong>方式二、open vswitch</strong></h3><p>如果要在生产和测试环境大规模采用docker技术，首先就需要解决不同物理机建的docker容器互联问题。</p>
<p>centos7环境下可以采用open vswitch实现不同物理服务器上的docker容器互联</p>
]]></content>
      <categories>
        <category>容器</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>软件</title>
    <url>/2020/08/21/%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><div class="theme-reco-content content__default" style="transition: all 0.25s ease-in-out 0.08s; transform: translateY(0px); opacity: 1;"><h3 id="软件安装-声明"><a href="#软件安装-声明" aria-hidden="true" class="header-anchor">#</a> 软件安装 声明</h3> <div class="custom-block tip"><p>最开始是在公众号【软件安装管家】中来安装一系列的软件。后来估计是被人举报了，一直显示 ‘后台系统升级维护中，暂停服务’，今天刚好在网上查到了公众号中软件链接，顺便记录下来，方便日后使用。我只是一个搬运工，所有功劳归功于【软件安装管家】公众号。</p></div> <h3 id="软件安装链接"><a href="#软件安装链接" aria-hidden="true" class="header-anchor">#</a> 软件安装链接</h3> <div id="content_views" class="markdown_views prism-atom-one-dark"><svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"/></svg> <p>该资源引用公众号**
  <a target="_blank" href="https://mp.weixin.qq.com/s/nZqeGBvb0DzTTYyBWKHB8g" rel="nofollow">软件安装目录</a>**,下图是原文档链接
  </p> <div class="table-box"><table><thead><tr><th><mark><strong>①电脑办公</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>电脑系统(U盘安装）</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203671&amp;idx=7&amp;sn=ad6961a0ec145bd59c089d6611360ffe&amp;chksm=8ee146fbb996cfed26aff93a3945e46231cf14ad655a694b085a80af3566d2f2ee5aa60e087f&amp;scene=21#wechat_redirect" rel="nofollow">PE系统</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202226&amp;idx=8&amp;sn=6898f0ee793493c32ec1452567dac4f9&amp;chksm=8ee1409eb996c9884dfa9f1ea13a3c832da9d6cd43e7a312c74d4cb900af980ee7bd52c90065&amp;scene=21#wechat_redirect" rel="nofollow">Win7</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205376&amp;idx=5&amp;sn=df787b5420c54d7670e245dc06b2e199&amp;chksm=8ee14c2cb996c53a7e11fe71d779f87ffc4ae3921672bfdebd74c0ab6a147af6ec42f8977a85&amp;scene=21#wechat_redirect" rel="nofollow">Win8</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203538&amp;idx=3&amp;sn=86ad2269949d7cb09b6ecbf3a38f5822&amp;chksm=8ee1457eb996cc6803b8d151844740325b9ab39e06511c7f31183c386bb91f9a67a82200fb7f&amp;scene=21#wechat_redirect" rel="nofollow">Win10</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203072&amp;idx=6&amp;sn=0c75659c7e7b67ef6cf25b96913b703b&amp;chksm=8ee1432cb996ca3a3ffc45ade1a14f0d1f29a4d8b1b6e7ff379311984d2a3e14094d7a9ac8f6&amp;scene=21#wechat_redirect" rel="nofollow">XP</a></td> <td></td></tr> <tr><td><strong>电脑系统（直接安装）</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202214&amp;idx=3&amp;sn=295943be1f8e5e3142612e19e5de479f&amp;chksm=8ee1408ab996c99c2751593dfccbeafb28cff03e42a3daae9155f157a590cf4b508f40cd893f&amp;scene=21#wechat_redirect" rel="nofollow">Win7</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205376&amp;idx=6&amp;sn=6017b6952fab884f5d1e961227379301&amp;chksm=8ee14c2cb996c53adc37a7817f54c0d8e606e91a81a8593537ff126b61ba966e2c63b1826a5d&amp;scene=21#wechat_redirect" rel="nofollow">Win8</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203484&amp;idx=4&amp;sn=516d19240ee009a5272317c49d3567ad&amp;chksm=8ee145b0b996cca623a12ba0b1faf49bc8811ab343bd99725d4a52cec9446e520e31d7294c4c&amp;scene=21#wechat_redirect" rel="nofollow">Win10</a></td></tr> <tr><td><strong>浏览器（纯净版）</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205446&amp;idx=6&amp;sn=d97583f67980ae5f191c8f215c0835c4&amp;chksm=8ee14deab996c4fc7ee80db800131980d66fe8be646c10dd25ea6ae88134be09e68842052662&amp;scene=21#wechat_redirect" rel="nofollow">星愿浏览器</a></td> <td></td> <td></td></tr> <tr><td><strong>Office</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204663&amp;idx=6&amp;sn=319699d28ed9a2e03a3aea8b69a43eb4&amp;chksm=8ee1491bb996c00dfacbde9a1309fbcf95f9bb7c2902f6aab8b633a0d3f251eb342005bbe2a1&amp;scene=21#wechat_redirect" rel="nofollow">office2003</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204663&amp;idx=5&amp;sn=26bbbcedb767fbb76d5b0688d7ed6aa1&amp;chksm=8ee1491bb996c00df48fc4c38f3c43aa8abbcb3ea3cabc68989b15dcd47c7b53292b4ec45c2b&amp;scene=21#wechat_redirect" rel="nofollow">office2007</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204663&amp;idx=4&amp;sn=304afc177e608217423448aadd168e72&amp;chksm=8ee1491bb996c00d139f83a721769ba308f864871801a51ec13ae6167bbd576440186adcfdbf&amp;scene=21#wechat_redirect" rel="nofollow">office2010</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204663&amp;idx=3&amp;sn=56aa2d756835592daf55b189e19b02b9&amp;chksm=8ee1491bb996c00d39baceb26056678ea315111f2252cef937263a7c8a2ebe3381018088e989&amp;scene=21#wechat_redirect" rel="nofollow">office2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204663&amp;idx=2&amp;sn=19df4eec02b6c1adaf30eb0809335a72&amp;chksm=8ee1491bb996c00d8b74a96edac7ec70d5e3107af92be62c262e85cbeb967fc3aab5ebfb5420&amp;scene=21#wechat_redirect" rel="nofollow">office2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204663&amp;idx=1&amp;sn=7379cd12c62c1b0ed30ca61922d0b80e&amp;chksm=8ee1491bb996c00dd9711d04fceb884b5fc7037813be2a6867e3fb8bca69d3d5e024b5969106&amp;scene=21#wechat_redirect" rel="nofollow">office2019</a></td></tr> <tr><td><strong>Project</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204825&amp;idx=1&amp;sn=2567cb963f377ce8c10f5ad67b7df4be&amp;chksm=8ee14a75b996c36329738b1a015e28416cabbfa02873fbd6847c45ba6d86ec38e7e6648deaa6&amp;scene=21#wechat_redirect" rel="nofollow">project2007</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204825&amp;idx=2&amp;sn=cecd119f99293f87d2fad57be7e522af&amp;chksm=8ee14a75b996c36352f797e02188e2eb08386c19b08ac334dba144da402e94005b747f067af6&amp;scene=21#wechat_redirect" rel="nofollow">project2010</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=4&amp;sn=2c5a63caa6e701d372eb5faccb289fa2&amp;chksm=8ee14c2db996c53ba484f25349bb642d05b40ee865f951b55b860baaccefb6afcb711b8d61d1&amp;scene=21#wechat_redirect" rel="nofollow">project2016</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204825&amp;idx=4&amp;sn=a59727eea8293cf2bda61f258a16e1dc&amp;chksm=8ee14a75b996c363398c1786df222a9899e63b24a14401c032834850717672430294b7d22477&amp;scene=21#wechat_redirect" rel="nofollow">project2019</a></td> <td></td> <td></td></tr> <tr><td><strong>Visio</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204825&amp;idx=5&amp;sn=defb0aca96c13a5edb992b7abc22ed7d&amp;chksm=8ee14a75b996c363c524c5e05ff3c9e39a4b7f012813794ffb3b2180f9251d53b6900886259a&amp;scene=21#wechat_redirect" rel="nofollow">visio2003</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204825&amp;idx=6&amp;sn=0439d5bd91ac20456740486e06a43cdd&amp;chksm=8ee14a75b996c36307fcfb97b35579a0be3a4cef89f367b639c97a347d8da6f7aa6f1968fe8d&amp;scene=21#wechat_redirect" rel="nofollow">visio2007</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204825&amp;idx=7&amp;sn=a1d282abe3c6f4467e458de66ee6189b&amp;chksm=8ee14a75b996c363b02cb5253da9b34edb49d949208d779c85e6ca98a98ed96a3b0d1e5d34dd&amp;scene=21#wechat_redirect" rel="nofollow">visio2010</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204663&amp;idx=8&amp;sn=191be5f81039e5cd36b0bd0abc0e0a1d&amp;chksm=8ee1491bb996c00da1cbd521fd581d0e31e2ef34f6c9e42238f82db742801dbd0d69a77db6f8&amp;scene=21#wechat_redirect" rel="nofollow">visio2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204663&amp;idx=7&amp;sn=755585a8d1830daf0b968a6a655ff03e&amp;chksm=8ee1491bb996c00d2ff3ce17164cfdd9d422c52434430b34e067a00367c98977f0228df3894b&amp;scene=21#wechat_redirect" rel="nofollow">visio2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204825&amp;idx=8&amp;sn=19f3a56115776abd25c5c37a375aa392&amp;chksm=8ee14a75b996c36357ed163050646e7c18ed1bab2fe8fe6f40be7e6d0505dfe7abf8b1f11f15&amp;scene=21#wechat_redirect" rel="nofollow">visio2019</a></td></tr> <tr><td><strong>PDF工具</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202174&amp;idx=3&amp;sn=38b1bb8dd9c33c74b2ccdb9e20bb4da4&amp;chksm=8ee140d2b996c9c4025b17ede4906c1501245372268e1d18af0a8be74b2be57d096a5e1cdc40&amp;scene=21#wechat_redirect" rel="nofollow">PDF转换器</a></td> <td></td> <td></td></tr> <tr><td><strong>Acrobat</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204715&amp;idx=3&amp;sn=d98c9a1c68c68f672acb277f1691a3f5&amp;chksm=8ee14ac7b996c3d1d24d22e9d9bce09bfe645b1cacb0f12293d7e0db84a4f6ab84710e87ba07&amp;scene=21#wechat_redirect" rel="nofollow">Acrobat 9 Pro</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204715&amp;idx=2&amp;sn=11678f8107dd12630a4c0c2d215d5654&amp;chksm=8ee14ac7b996c3d1784c6f6fc9a752a486592f35a766ccea7e74ccaf6ab794519e3517678b22&amp;scene=21#wechat_redirect" rel="nofollow">Acrobat XI Pro</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204715&amp;idx=1&amp;sn=72cf0905dc7639c2bbc1e6a92f65c17c&amp;chksm=8ee14ac7b996c3d14301742e186f85a97d3bdab2bbc4052f84f6edb84025dc4ebbf38dbf1750&amp;scene=21#wechat_redirect" rel="nofollow">Acrobat DC</a></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>②室内/外设计</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>AutoCAD</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203048&amp;idx=3&amp;sn=1c1dfa7635be2573f6651ddb4f537cd0&amp;chksm=8ee14344b996ca52f3a270614421ce22982eb577a9a724eb97b7f123a32618475cc0eb12bfd3&amp;scene=21#wechat_redirect" rel="nofollow">CAD2004</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199013&amp;idx=7&amp;sn=be6477fd0084db4dc1112821c9b553b7&amp;chksm=8ee17309b996fa1fc64e9f016eb79120ec5e642c267f7228556b3f9f6d00970dbe271598a36c&amp;scene=21#wechat_redirect" rel="nofollow">CAD2005</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=6&amp;sn=3169bcac505c1b387f4cab32f6165324&amp;chksm=8ee14c4cb996c55a58531593669356edaa5d57c0c8d539660dedf8a7291399adfc598a000816&amp;scene=21#wechat_redirect" rel="nofollow">CAD2006</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202647&amp;idx=7&amp;sn=62bb2ed78278f411f286cbcee0cc5ded&amp;chksm=8ee142fbb996cbedcd87bce4935c7fba9d0c232c328d98b10c4340d3fdbf9463618dc49f4817&amp;scene=21#wechat_redirect" rel="nofollow">CAD2007</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=8&amp;sn=68bdf88d204cf34e078836bade322b2d&amp;chksm=8ee1427ab996cb6cd2eba53fc604f0098e108e30f4bc53d939143e6a139ac7eedf8f8763925c&amp;scene=21#wechat_redirect" rel="nofollow">CAD2008</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205446&amp;idx=2&amp;sn=eb67a791a47eb4324944817fe49bb4af&amp;chksm=8ee14deab996c4fc325abf79a872123bf575a5e02b149625a9f24284d5fdd87c0976cdaa4fd9&amp;scene=21#wechat_redirect" rel="nofollow">CAD2009</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=2&amp;sn=3894b6f433e64903979e907c5ba9ab23&amp;chksm=8ee14c4cb996c55a217ca586f0f0a81eafec49e6419d5955ec879fab3bb3b1d25eb78cebb109&amp;scene=21#wechat_redirect" rel="nofollow">CAD2010</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204274&amp;idx=1&amp;sn=2b0d21fceb1328e91da0df4699148fe8&amp;chksm=8ee1489eb996c188eb3249710074674e2d591c73267104399a4bf9f4f756f02b652b435cf509&amp;scene=21#wechat_redirect" rel="nofollow">CAD2011</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204346&amp;idx=1&amp;sn=5d268c7aa02e6db75ef2184e2ff4afdf&amp;chksm=8ee14856b996c140fb6bd446d83e5ce185855d281f9b05e7475df1f948d34d7d7c545815b93a&amp;scene=21#wechat_redirect" rel="nofollow">CAD2012</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202834&amp;idx=1&amp;sn=8f4fc25d267ef32da0f24fef89bce673&amp;chksm=8ee1423eb996cb28f43e9922a437961e06c4081be82317d9829d22f7ee3a05f8a3dcdd2782d5&amp;scene=21#wechat_redirect" rel="nofollow">CAD2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203973&amp;idx=1&amp;sn=a2584af606f0b35d5526fce1a5e11e3a&amp;chksm=8ee147a9b996cebf91e652c481920a5805f5d4208f5f078c516ea44b18f949692a567c17d78b&amp;scene=21#wechat_redirect" rel="nofollow">CAD2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204362&amp;idx=4&amp;sn=5cf934a7f75e2688814b53ce18111da8&amp;chksm=8ee14826b996c1309bcdc649a74da9ebd70cd0173a2c1ecf9ad8f37711117d3e83f0843cacee&amp;scene=21#wechat_redirect" rel="nofollow">CAD2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=1&amp;sn=71f879398fd31f1c723873eb127d1649&amp;chksm=8ee14c2db996c53b5bca4288177f0774b8a9498c742399703c0fa0b505d070f997937c65fddd&amp;scene=21#wechat_redirect" rel="nofollow">CAD2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204362&amp;idx=5&amp;sn=327c6db1eff9d75f0768404af7eab2f1&amp;chksm=8ee14826b996c13094d6d664e7db369287dd58214c93ebb9edf14f5fae6926c9dc1809434681&amp;scene=21#wechat_redirect" rel="nofollow">CAD2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=2&amp;sn=711bfe2379a9061a0b0254272b27fc43&amp;chksm=8ee14c2db996c53b13e98ca33a9d655d8af79ecd1a29960f3111eface33d366a780c3a78c5da&amp;scene=21#wechat_redirect" rel="nofollow">CAD2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203683&amp;idx=7&amp;sn=6bd1ec66de3686f611e6cea0fe3ae004&amp;chksm=8ee146cfb996cfd9be3b5fdd5acbe5e83a9dc1d44c852d9e1c4dd063135c91189daa9a4e3692&amp;scene=21#wechat_redirect" rel="nofollow">CAD2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204223&amp;idx=2&amp;sn=4866999074212234202c3862e64ce35a&amp;chksm=8ee148d3b996c1c516adcaa4e8fa616c0cf8597eb71c27abafee8a1b137cd210f302d7e44ae9&amp;scene=21#wechat_redirect" rel="nofollow">CAD2020</a></td> <td></td></tr> <tr><td><strong>3Ds MAX</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204036&amp;idx=1&amp;sn=79105f789ae9b4cc49e406406681961c&amp;chksm=8ee14768b996ce7ed0d6765166964aa347bfdb4d78bf9cfc92cbdb77744e51d6e8782a0adbe3&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2009</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=8&amp;sn=fe9238b9421f0974bb45ee777c44b2d7&amp;chksm=8ee16851b996e147a60ae970c451827e5a2e7d66f55fe4c4f4f8a6996f37e8c3c1358721722f&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2010</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=7&amp;sn=72ed0d8cb164973f9830e971242f1e57&amp;chksm=8ee16851b996e1478f5b9f49c727a36dbde57f01799f35270be8005a89f48330a0cf3ad3fd9a&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2011</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=6&amp;sn=d03935a4ad80da4d253aa58a6f1b15ad&amp;chksm=8ee16851b996e14709f70bd01fd960838bcb443605248226c6d6c04bc40a4f79e84a63f1ca63&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199059&amp;idx=5&amp;sn=56d2e6af41af40bf5746245c4713fef9&amp;chksm=8ee174ffb996fde9497ed66d91d1babce320a0d37089ce02cba1e6bfcec7e1e03db194ddf54d&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202654&amp;idx=2&amp;sn=cb7d4c852a1f00f20d5dfab6b149de9a&amp;chksm=8ee142f2b996cbe422a7d6f460c37f4b1e8eec0ed42885c73a55034fee255ed466f203aeafce&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=3&amp;sn=63dcbce542c51bb2dc14d0766b1ed660&amp;chksm=8ee16851b996e147d898a1f1376f0427a2e26232d40d017c25a2332cf2aad9574f68f931712a&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202121&amp;idx=1&amp;sn=a86710a05f020232cfef9ae5211023ea&amp;chksm=8ee140e5b996c9f3d6a072641607caca5786d66fe99500d962e95c5e586816991306bd28a7f2&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199059&amp;idx=1&amp;sn=272d176a457c98cb96a59aa2e16bbe57&amp;chksm=8ee174ffb996fde9962151e4a72c289e1e8b6abd7c798af3531066d3497986d8786e71a04147&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203989&amp;idx=2&amp;sn=ee56563326f6b607bcf6150705f36788&amp;chksm=8ee147b9b996ceafb75bb01e261219e491dcf1df3b8425ac643fc7f251795daf6b5e7bb119e3&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202157&amp;idx=6&amp;sn=b40cf6a0ee6099709a2e562e6cd46dbe&amp;chksm=8ee140c1b996c9d78462ccc15403c167c4e80f376acb5e768a3523a0d628f4a5b3946bda00a0&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203008&amp;idx=5&amp;sn=39d54e0be1a134116b532163b616ffd8&amp;chksm=8ee1436cb996ca7a301fc0e4b05f4b8bcf76219bf3d4494033b3989a56d4ab7f2963bcc25210&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2020</a></td></tr> <tr><td><strong>Photoshop</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204362&amp;idx=6&amp;sn=a5f8e5457f22ca3f3c8ceabf3afaac85&amp;chksm=8ee14826b996c1303e7a4ca24996bf520924b27fa6d402c4c9da03cbf2098dfffc05ee6c6e45&amp;scene=21#wechat_redirect" rel="nofollow">ps cs2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203362&amp;idx=1&amp;sn=7481c3090695d68b21444cf64352bf2c&amp;chksm=8ee1440eb996cd183b77c0d4364aa9174b27d1aeede350208500338486e1c1ffe9cd2a873b28&amp;scene=21#wechat_redirect" rel="nofollow">ps cs5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203538&amp;idx=1&amp;sn=af688045db2b289c96f26fa9dd7fa078&amp;chksm=8ee1457eb996cc6895354581f6b31645258cfd2a35934389c75e01f3a7a959610e7f2cb006f1&amp;scene=21#wechat_redirect" rel="nofollow">ps cs6</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203077&amp;idx=1&amp;sn=c0982ad7316523509190f889722ab746&amp;chksm=8ee14329b996ca3fa1fbf68dec757a3c5240435f4ae6ea22f0afa00f904ec1f0b472f1d14e59&amp;scene=21#wechat_redirect" rel="nofollow">ps cc2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203692&amp;idx=1&amp;sn=0da075b4d5ca646bcac8a68156818c12&amp;chksm=8ee146c0b996cfd6f4767dd3eff388e54e1cebb717af966194f64fbee084ac3fc35e5c9d5601&amp;scene=21#wechat_redirect" rel="nofollow">ps cc2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203973&amp;idx=3&amp;sn=f4a4550a35c53cfba3a711b51fe01930&amp;chksm=8ee147a9b996cebfab8a7d09339c43df4a6ccbe7a45b9d7753b8a9b408749393e056d24c28e4&amp;scene=21#wechat_redirect" rel="nofollow">ps cc2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203916&amp;idx=1&amp;sn=a8dfe1bea9c7e6d6bab12c638f4ec0a8&amp;chksm=8ee147e0b996cef644e1b21ce6c801a55fe8e1e3e3646b71689904f5eb48f35310f768e461c4&amp;scene=21#wechat_redirect" rel="nofollow">ps cc2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203464&amp;idx=6&amp;sn=55b10452803c66d61fd56101187a75bb&amp;chksm=8ee145a4b996ccb2feed86e82ee60c8f1d44d11369002e63aa2115c24448dd0a6a27d2b85e33&amp;scene=21#wechat_redirect" rel="nofollow">ps 2020</a></td> <td></td></tr> <tr><td><strong>Vray for 3dmax</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204165&amp;idx=1&amp;sn=a329745160792de0893fe4d9704ce4f9&amp;chksm=8ee148e9b996c1ff234f66fc17817fbb408e214a76857d5c35deb6dab441fc120c6625350efb&amp;scene=21#wechat_redirect" rel="nofollow">Vray1.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=7&amp;sn=29ef4987d511ed626e85d23ea87c68cb&amp;chksm=8ee14c2db996c53b76f58926b31953d074b7ccd37aa93ef59c376d7475d69d1c9a63b341683c&amp;scene=21#wechat_redirect" rel="nofollow">Vray2.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196227&amp;idx=3&amp;sn=be4a3f41949791467aeb4e4131c3864e&amp;chksm=8ee169efb996e0f9ff8f90b8149a8e0bc9e6d85fc8eecf6cb8dfefbbab8c898e55f569914c51&amp;scene=21#wechat_redirect" rel="nofollow">Vray2.3</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196227&amp;idx=4&amp;sn=f35f64aed2c03a27e1d187c6de7e3660&amp;chksm=8ee169efb996e0f9bcb41365b9d854a110076f8e7810f57f4e5b599abdc7bb090e48db4fa4e5&amp;scene=21#wechat_redirect" rel="nofollow">Vray2.4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196227&amp;idx=5&amp;sn=27b0f98e4616af5bc10f53311d075558&amp;chksm=8ee169efb996e0f990818c9ba64d46750f972d0d0ab6086b2331d5b175e434dd8a3fb2125ec1&amp;scene=21#wechat_redirect" rel="nofollow">Vray3.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200791&amp;idx=1&amp;sn=7393a19caa277a1e9064bdf4a0ff08ba&amp;chksm=8ee17a3bb996f32dc077cee9f5a3dcfea0286479b63e60b75fe73781f894155ea3aa91acc255&amp;scene=21#wechat_redirect" rel="nofollow">Vray4.1</a></td></tr> <tr><td><strong>Vray3.4</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204362&amp;idx=7&amp;sn=8ddc92f0dc7499e32a7f5f38ccdd61e6&amp;chksm=8ee14826b996c130d2e249d9dfcc0c1e1c78c31a1380bbea6c2e055250c14c230e556adde2e9&amp;scene=21#wechat_redirect" rel="nofollow">for 3dmax</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199055&amp;idx=1&amp;sn=4c3afab238aef718e95db8743107de93&amp;chksm=8ee174e3b996fdf59efa405af208d52c3ba40a2904e42e5a08da4cd5ecb7fd1eb7ff5a564273&amp;scene=21#wechat_redirect" rel="nofollow">for sketchup</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202255&amp;idx=8&amp;sn=cd8ff89c7325519a75cf856cbe72c3a8&amp;chksm=8ee14063b996c9755d5f403220ddeb333f33f49776ed8e363e73efc5ad8de87b23fb0b26984d&amp;scene=21#wechat_redirect" rel="nofollow">for rhino5.0</a></td></tr> <tr><td><strong>Vray3.6</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203708&amp;idx=4&amp;sn=f52c224157e2359f8311d316fe275ca8&amp;chksm=8ee146d0b996cfc679b7f774cc39da2064c4b0a76a6237223fccc386a333a0811c2844ce4f18&amp;scene=21#wechat_redirect" rel="nofollow">for 3dmax</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202563&amp;idx=1&amp;sn=90ac62077c9ecbac05cb002c3e092916&amp;chksm=8ee1412fb996c839d22e19a7d7d951fc976679b173d78d8e3c47575251810f91679381f829e3&amp;scene=21#wechat_redirect" rel="nofollow">for sketchup</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202563&amp;idx=2&amp;sn=2c7b739701fe3a36c1c04b238fdf5212&amp;chksm=8ee1412fb996c839f7d2141ca6bf3f337885bea8aed16ac525bbed5daeaa4b727a23c97e6b59&amp;scene=21#wechat_redirect" rel="nofollow">for rhino6.0</a></td></tr> <tr><td><strong>Vray4.2</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204036&amp;idx=2&amp;sn=c634010f0a32c2d1f6c9cc4b3f59bad9&amp;chksm=8ee14768b996ce7e80efc8e0854c613bc7cdd3ab99340e9b9e84622e2e9af9b66597ce2f4369&amp;scene=21#wechat_redirect" rel="nofollow">for 3dmax</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204299&amp;idx=2&amp;sn=93bced4d9df1fead0bab66c3741ea43a&amp;chksm=8ee14867b996c17148aa11d51b89d8bed3ea35a353dd8419f63fd1073fa62cd15b254738d85f&amp;scene=21#wechat_redirect" rel="nofollow">for sketchup</a></td> <td></td></tr> <tr><td><em><strong>*Sketchup*</strong></em></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=6&amp;sn=0c4fb42a61ddf699ca42edc85e34028c&amp;chksm=8ee14c12b996c5045c49540c01791b62dec7f9714a57726f42d9ffc4c304d452be99a600263f&amp;scene=21#wechat_redirect" rel="nofollow">Su2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=5&amp;sn=95c7585dd4b182065e10625eceb0eeb7&amp;chksm=8ee14c12b996c504539ce2b8ff17d6087c940ea51e9d7e69a587725f40c9d050a3cbe96b86b7&amp;scene=21#wechat_redirect" rel="nofollow">Su2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=4&amp;sn=a980d3609063ef6878958e837d1ec6dd&amp;chksm=8ee14c12b996c50495d8acb55eb0f4c08f27d07dbd6b8759924e77f85a1d739ba29093722f08&amp;scene=21#wechat_redirect" rel="nofollow">Su2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=3&amp;sn=b600b7177c070e72f6cf3399cfbafd5d&amp;chksm=8ee14c12b996c50455954fe0d2959cf23245035adb70c1975573f896fd6cf30761d5546d2794&amp;scene=21#wechat_redirect" rel="nofollow">Su2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=2&amp;sn=7394d7564f8b2faceddef0cb17f5f04f&amp;chksm=8ee14c12b996c504d781006192065bd8ab7d68b96a1ba14f872951d61b358196da7c43eb718f&amp;scene=21#wechat_redirect" rel="nofollow">Su2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=1&amp;sn=39291198cdd0a79fe71d7f4d1217d891&amp;chksm=8ee14c12b996c50408048f2dff8c606ae3923744506e3530a7a85e2b34c45f3f64a469949350&amp;scene=21#wechat_redirect" rel="nofollow">Su2020</a></td></tr> <tr><td><strong>Lumion</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196725&amp;idx=6&amp;sn=548d8f4e45b58702d67fa03eed6c5ad6&amp;chksm=8ee16a19b996e30f06f4482edd62ea6cde45fe3cfceeb68021f0b6a69714222dd7c89e4b0ffe&amp;scene=21#wechat_redirect" rel="nofollow">lumion2.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202255&amp;idx=6&amp;sn=16f228f87b8574dce919d1bc74fb25a2&amp;chksm=8ee14063b996c975d9dca0bc95adf86dfb786bb226b14b92195bb1c8ce6c7f45f52df93a3a20&amp;scene=21#wechat_redirect" rel="nofollow">lumion3.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196725&amp;idx=4&amp;sn=65fef534f3fd0a179af7729b5543e39b&amp;chksm=8ee16a19b996e30f3075546ab89f577f298d7658b1284ec4be77b12f32a75e27809e43519b1a&amp;scene=21#wechat_redirect" rel="nofollow">lumion4.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196725&amp;idx=3&amp;sn=2061aadf6bec4fc27cbde047df0f63f2&amp;chksm=8ee16a19b996e30f13a90816cca3d760dde6183c365b9d40fe876a6769901573dadd5224fc40&amp;scene=21#wechat_redirect" rel="nofollow">lumion4.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196725&amp;idx=2&amp;sn=fed34e325d0714681416c6fb0318c83c&amp;chksm=8ee16a19b996e30f8aa384b7d0465915f77a74d2db16862795debf96a145e7a08eb1e2f28468&amp;scene=21#wechat_redirect" rel="nofollow">lumion5.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196725&amp;idx=1&amp;sn=bf677953881ac1c13f3db748a6d1447d&amp;chksm=8ee16a19b996e30fc4398c8f98c0a3be3a203b871d937d94b6d543fbee601525a5057d2bbfc1&amp;scene=21#wechat_redirect" rel="nofollow">lumion6.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204362&amp;idx=8&amp;sn=a53a1feeba9e1eccaa061d5cb137b7e5&amp;chksm=8ee14826b996c130dbb55e9385b011228792a2f8ffd0bb83c8df7d64b9dd64716a745054e3e5&amp;scene=21#wechat_redirect" rel="nofollow">lumion8.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203947&amp;idx=2&amp;sn=3ac47a366d8e6c2102a740f91bfde81a&amp;chksm=8ee147c7b996ced17259846b36c16863b27648bb9fe652f74210216862d2fa47b8f7b434184d&amp;scene=21#wechat_redirect" rel="nofollow">lumion8.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203947&amp;idx=1&amp;sn=1659ac0cd882f702a5ad5a624ef2b069&amp;chksm=8ee147c7b996ced1d371cb805953eb870de092340b462ef197bb135896bdcded34661e3c0a54&amp;scene=21#wechat_redirect" rel="nofollow">lumion9.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204299&amp;idx=6&amp;sn=e11527848e6cfb9801f6f3199bbd382c&amp;chksm=8ee14867b996c171d0398b788a59268dabc3672e0e448893340e5ddfe8eceb65a391a8b73f76&amp;scene=21#wechat_redirect" rel="nofollow">lumion10.0</a></td> <td></td> <td></td></tr> <tr><td><strong>天正（建筑、暖通、给排水、电气*<em>、结构*</em>）</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203989&amp;idx=4&amp;sn=2993110aaa658967d1ea43cfbd483dcc&amp;chksm=8ee147b9b996ceaf7549b633ba5b4b464f9b8cc7431d45cd9c36fb6d0411824ef035bb772df3&amp;scene=21#wechat_redirect" rel="nofollow">天正2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204342&amp;idx=1&amp;sn=68872d9cc0b7bf6b4fa1a36c34ab2644&amp;chksm=8ee1485ab996c14c97f7130f39c6aacbe28168448c0b219f5ed2eb79e28100a4f641fe3e8963&amp;scene=21#wechat_redirect" rel="nofollow">天正2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205376&amp;idx=3&amp;sn=0065d907f331ca98b16095dd6f11ac35&amp;chksm=8ee14c2cb996c53afd1f28886f5faad36101d03f6719a2b6b6ab11f786a81f621aa9b93bc562&amp;scene=21#wechat_redirect" rel="nofollow">T20V3.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199473&amp;idx=1&amp;sn=6d26184e9b5f7eb5a12bccf9532f5536&amp;chksm=8ee1755db996fc4b195eeecb121c1fc595788fbe431d4b67c800ac433259cf2002bc67b17264&amp;scene=21#wechat_redirect" rel="nofollow">T20V4.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205376&amp;idx=8&amp;sn=b6b46f53254dec24c113b508fa56edbe&amp;chksm=8ee14c2cb996c53af5e863430a9a0cfcf8a76fcca9528228638440a86e80fa76fde88917ecd7&amp;scene=21#wechat_redirect" rel="nofollow">T20V5.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203947&amp;idx=3&amp;sn=ec0a12c5af3d90d3e92cc96406a86dac&amp;chksm=8ee147c7b996ced1eb8e6c564726c287ad516e841aaaefb8b1db49a6af1f9258872f4d94d1b7&amp;scene=21#wechat_redirect" rel="nofollow">T20V6.0</a></td></tr> <tr><td><strong>SketchBook</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202891&amp;idx=7&amp;sn=8982292af54d2c7e09ef5cade9aa8437&amp;chksm=8ee143e7b996caf18e2c28b632db0feaa3d2b8add516111a9b6d7e02c25f5f718295bc5cfa41&amp;scene=21#wechat_redirect" rel="nofollow">SKB6.2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202891&amp;idx=6&amp;sn=e133a7482cb55dec0384e06be57dd773&amp;chksm=8ee143e7b996caf1d4e0acd981d6a90a7c9f0688b59b90a2c5c234af92ca53b8b5a46d7ad1da&amp;scene=21#wechat_redirect" rel="nofollow">SKB2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202891&amp;idx=5&amp;sn=08add9b4eb17c4966ec7227fd4525efe&amp;chksm=8ee143e7b996caf111826fbc50768c6ca6ca89ec1563214418485e6b69ab322e316fcd3bcffb&amp;scene=21#wechat_redirect" rel="nofollow">SKB2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202891&amp;idx=4&amp;sn=baaa32374f345dbf3e8f61792c1d95ad&amp;chksm=8ee143e7b996caf1696283b68d1ebb0837c2fa737ad6b56831191a8471e7ae16be48825faa3c&amp;scene=21#wechat_redirect" rel="nofollow">SKB2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202891&amp;idx=3&amp;sn=7d931dbce5413c65cdc16be1ed6096e3&amp;chksm=8ee143e7b996caf1e90b0ef40ea78a97ae054e06927bfe04c020baa990e690ffcc0d742887b5&amp;scene=21#wechat_redirect" rel="nofollow">SKB2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202891&amp;idx=2&amp;sn=46d20b7bae81b384ac5445c816e79767&amp;chksm=8ee143e7b996caf1fefbc39f9f1705c82851ce2c49b2dd5353f516a40b5abe78d04290d05d06&amp;scene=21#wechat_redirect" rel="nofollow">SKB2019</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202891&amp;idx=1&amp;sn=51d634c21bcd0caf6208a54a5b960d7b&amp;chksm=8ee143e7b996caf10acbc570802c5af684f5cd94b27d922d8cf2fa07a3ff0e02cb735cddd01c&amp;scene=21#wechat_redirect" rel="nofollow">SKB2020</a></td> <td></td> <td></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>③平面设计</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>Photoshop</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204362&amp;idx=6&amp;sn=a5f8e5457f22ca3f3c8ceabf3afaac85&amp;chksm=8ee14826b996c1303e7a4ca24996bf520924b27fa6d402c4c9da03cbf2098dfffc05ee6c6e45&amp;scene=21#wechat_redirect" rel="nofollow">ps cs2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203362&amp;idx=1&amp;sn=7481c3090695d68b21444cf64352bf2c&amp;chksm=8ee1440eb996cd183b77c0d4364aa9174b27d1aeede350208500338486e1c1ffe9cd2a873b28&amp;scene=21#wechat_redirect" rel="nofollow">ps cs5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203538&amp;idx=1&amp;sn=af688045db2b289c96f26fa9dd7fa078&amp;chksm=8ee1457eb996cc6895354581f6b31645258cfd2a35934389c75e01f3a7a959610e7f2cb006f1&amp;scene=21#wechat_redirect" rel="nofollow">ps cs6</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203077&amp;idx=1&amp;sn=c0982ad7316523509190f889722ab746&amp;chksm=8ee14329b996ca3fa1fbf68dec757a3c5240435f4ae6ea22f0afa00f904ec1f0b472f1d14e59&amp;scene=21#wechat_redirect" rel="nofollow">ps cc2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203692&amp;idx=1&amp;sn=0da075b4d5ca646bcac8a68156818c12&amp;chksm=8ee146c0b996cfd6f4767dd3eff388e54e1cebb717af966194f64fbee084ac3fc35e5c9d5601&amp;scene=21#wechat_redirect" rel="nofollow">ps cc2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203973&amp;idx=3&amp;sn=f4a4550a35c53cfba3a711b51fe01930&amp;chksm=8ee147a9b996cebfab8a7d09339c43df4a6ccbe7a45b9d7753b8a9b408749393e056d24c28e4&amp;scene=21#wechat_redirect" rel="nofollow">ps cc2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203916&amp;idx=1&amp;sn=a8dfe1bea9c7e6d6bab12c638f4ec0a8&amp;chksm=8ee147e0b996cef644e1b21ce6c801a55fe8e1e3e3646b71689904f5eb48f35310f768e461c4&amp;scene=21#wechat_redirect" rel="nofollow">ps cc2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203464&amp;idx=6&amp;sn=55b10452803c66d61fd56101187a75bb&amp;chksm=8ee145a4b996ccb2feed86e82ee60c8f1d44d11369002e63aa2115c24448dd0a6a27d2b85e33&amp;scene=21#wechat_redirect" rel="nofollow">ps 2020</a></td> <td></td></tr> <tr><td><strong>Illustrator</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202359&amp;idx=2&amp;sn=f8d060c7fc7298591c05400ce2078909&amp;chksm=8ee1401bb996c90dbbc059c03f678678dc85e0ea2bc261ec58a35884952aae9de3677b9c11c8&amp;scene=21#wechat_redirect" rel="nofollow">AI cs5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203324&amp;idx=1&amp;sn=df501d48d214cb936be5123719a8543b&amp;chksm=8ee14450b996cd46cc2ff4518990af17829ed44e98ce9266488bedd1b85e3fc44f18fcd6aa71&amp;scene=21#wechat_redirect" rel="nofollow">AI cs6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204379&amp;idx=2&amp;sn=484280606647b0c64acfc9afc1408f49&amp;chksm=8ee14837b996c1216660c4004b697384ccec6647044382d7e3f8702b5a38c0390388f2c74526&amp;scene=21#wechat_redirect" rel="nofollow">AI cc2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650201490&amp;idx=2&amp;sn=46794ba6ecb3d83d16819e2e852c4bd3&amp;chksm=8ee17d7eb996f468f7121f26e70534bfe183b4b79bddb9580961bab1bbb20d9f70ae3f8a94e2&amp;scene=21#wechat_redirect" rel="nofollow">AI cc2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204379&amp;idx=3&amp;sn=2446f885ead08c86c2fd7f8785bb94ac&amp;chksm=8ee14837b996c12181bdc50ae4033ee6dc1dbbf12ccd468dd752728273f0a415addbdb11cf2a&amp;scene=21#wechat_redirect" rel="nofollow">AI cc2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203989&amp;idx=1&amp;sn=a658da2ff16e1a1ed2e091958bff4e1b&amp;chksm=8ee147b9b996ceaf12391db77b914dce6f03f1e60b77977476d474f71ec616080319875114aa&amp;scene=21#wechat_redirect" rel="nofollow">AI cc2019</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203692&amp;idx=3&amp;sn=1a7b9434f85c22fc6aa46c079ed0df32&amp;chksm=8ee146c0b996cfd6168d70a4af303b4d6cb1a8dccdc163bff5f2e76aefb1bceeed7521c7ad3f&amp;scene=21#wechat_redirect" rel="nofollow">AI 2020</a></td> <td></td> <td></td></tr> <tr><td><em><strong>*InDesign*</strong></em></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204379&amp;idx=4&amp;sn=48e7dfadded989f6b7e13f07465bb45d&amp;chksm=8ee14837b996c121b2191bb84561b0be9810f9955300d638361944087fb816133369b2a523bd&amp;scene=21#wechat_redirect" rel="nofollow">ID cs5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204383&amp;idx=1&amp;sn=1513bf25ff7b510fec9a6ee788615948&amp;chksm=8ee14833b996c12504b3d0265bca127faa33ed61724c47aa85a1cc0d95ad2de117f0066682b5&amp;scene=21#wechat_redirect" rel="nofollow">ID cs6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204379&amp;idx=5&amp;sn=2126c3c2f68d2929840634038f6c7d46&amp;chksm=8ee14837b996c12111650352deb975d302d0f009a3ce3eb1b901661bf287c40bd9a473b856f2&amp;scene=21#wechat_redirect" rel="nofollow">ID cc2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204379&amp;idx=6&amp;sn=d8429be3e6a76495b86300b11376c7ec&amp;chksm=8ee14837b996c1211dcdc53d5eb07ee54693257aa25bb347d94f6c5ce180f6064363c440bb7d&amp;scene=21#wechat_redirect" rel="nofollow">ID cc2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204379&amp;idx=7&amp;sn=fd189e5e966ceb1eed30bae31677bab9&amp;chksm=8ee14837b996c121a9ca26ef29b672ee8d598c24dd3019132284583f970dde0d0a8ed7124ed0&amp;scene=21#wechat_redirect" rel="nofollow">ID cc2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202255&amp;idx=1&amp;sn=789b9cdf3d3f33f3822ef15a87981cee&amp;chksm=8ee14063b996c9756f8446c914c98c3f09a8f84b2ca4c09a9ee246a6b989678189767daec630&amp;scene=21#wechat_redirect" rel="nofollow">ID cc2019</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203464&amp;idx=1&amp;sn=da8ea315d3e133866c2599237ea4ade6&amp;chksm=8ee145a4b996ccb23fed7d0b5e7769fa2614aa50682ac7d3a28b2b532ac02f5ebd738d3378e4&amp;scene=21#wechat_redirect" rel="nofollow">ID 2020</a></td> <td></td> <td></td></tr> <tr><td><strong>lightroom</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202214&amp;idx=2&amp;sn=ce31d3e664f7ba006d3e2b892c5c6a8f&amp;chksm=8ee1408ab996c99c5942c962e8be09edaacdd4c458979b8bdb731f78216dd0d86d237f46ba6b&amp;scene=21#wechat_redirect" rel="nofollow">Lr 5.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204383&amp;idx=2&amp;sn=ab4a3cad122c61374d2d955e7933483b&amp;chksm=8ee14833b996c125d21919441f85678c6b5312e8e3b1ac075a82d45b64a21f8e22e26b2390f3&amp;scene=21#wechat_redirect" rel="nofollow">Lr 6.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204379&amp;idx=8&amp;sn=3d52954d971ed08a4005040a76a524d1&amp;chksm=8ee14837b996c121a7609f01089725b7a65ddde8c9fa389bda6af1deb929a0fafa2f303edc5f&amp;scene=21#wechat_redirect" rel="nofollow">Lr cc6.4</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204383&amp;idx=3&amp;sn=4d17b2f0f2ffb6305106ff58ac06e917&amp;chksm=8ee14833b996c125c82b149e7d7da8cb65b2df4c18561b1e11a02b285dd11aca26511ae6c2ee&amp;scene=21#wechat_redirect" rel="nofollow">Lr cc7.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203094&amp;idx=1&amp;sn=8052cc844aa2299ae12849112314f52f&amp;chksm=8ee1433ab996ca2cf26f4bb93a8dd33cc27da879268e8ef34da9361567fde9f52fb74573f2af&amp;scene=21#wechat_redirect" rel="nofollow">Lr cc8.2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203469&amp;idx=4&amp;sn=3e01d25c134a727d9ad971c4881d4806&amp;chksm=8ee145a1b996ccb7f0a989b9cec162f14bf44513273813ef35fde231e01f841986e2daa7377a&amp;scene=21#wechat_redirect" rel="nofollow">Lr 9.0</a></td></tr> <tr><td><em><strong>*ACDSee*</strong></em></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204383&amp;idx=4&amp;sn=e947065fb7cde615d4e1fb4c16cce2f1&amp;chksm=8ee14833b996c1253ab268f4d4f78430c65812d14f1bf6cfe0596867269e60dbbbb5e2428de9&amp;scene=21#wechat_redirect" rel="nofollow">ACDSee 5.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204383&amp;idx=5&amp;sn=4e374dee900425a1e1bc91f7ef73921a&amp;chksm=8ee14833b996c1257ad51cdaa615d3017bc939c28318447330b069b6751ba2a97b8df6d3049f&amp;scene=21#wechat_redirect" rel="nofollow">ACDSee 9.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204383&amp;idx=6&amp;sn=cae68532960902a2bac01a587945cf6a&amp;chksm=8ee14833b996c1253fb1bc0bc863ea08fa6838125cb2e4e6ec02a09088c2a12bbedf26c9c548&amp;scene=21#wechat_redirect" rel="nofollow">ACDSee 10.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202673&amp;idx=2&amp;sn=d23d5aca5122c1b60c38e88abfa22387&amp;chksm=8ee142ddb996cbcbbd01cab574743cbd01e9396893b886d47a36247fd85a88ee03086359fdd0&amp;scene=21#wechat_redirect" rel="nofollow">ACDSee 20</a></td> <td></td> <td></td></tr> <tr><td><strong>Bridge</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=7&amp;sn=fa39c660325b78231af45ae3d5e19edd&amp;chksm=8ee1427ab996cb6c7bd105d13676ef73ebac4c4aed00dc5110880c452af4759397795401e032&amp;scene=21#wechat_redirect" rel="nofollow">Br CS5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=6&amp;sn=a2fed1b1340f610d53e05b94de97be31&amp;chksm=8ee1427ab996cb6ce4cf3f206ebda36e866bfcee451fb43ae89096b8f993b19770fd7fdbcb2f&amp;scene=21#wechat_redirect" rel="nofollow">Br CS6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=5&amp;sn=6ffbd4918098016b32fd06c1940b6137&amp;chksm=8ee1427ab996cb6c666be9d8e6b613848c777d7df524ec12cba9d314de229d969fa54074b9d7&amp;scene=21#wechat_redirect" rel="nofollow">Br CC</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=4&amp;sn=980c41569807bb6ff492f2da210439f7&amp;chksm=8ee1427ab996cb6c65a19cc682fad7fa6251483c3c9b68c19c8b6ccdfb379d757277d08b5d9f&amp;scene=21#wechat_redirect" rel="nofollow">Br CC2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=3&amp;sn=2445b33ca6a6100196e2bf6ee28823c4&amp;chksm=8ee1427ab996cb6ca4cb05a8babf98055d34f93d4fb1be8c488cb2c67d8cd2a5881566fc092f&amp;scene=21#wechat_redirect" rel="nofollow">Br CC2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=2&amp;sn=b397c8687cd782a0591eefa9a34579ae&amp;chksm=8ee1427ab996cb6cdeeee44c5f8c876507d4356101739e80062cf78fbe1c1a6e25ef51901ca4&amp;scene=21#wechat_redirect" rel="nofollow">Br CC2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=1&amp;sn=ab47fd34accb08a751b629e20cc3a4ea&amp;chksm=8ee1427ab996cb6c453950d91ba88c1255515f1c39e8eab2e5e52db8d22cfcc91d142c5715b2&amp;scene=21#wechat_redirect" rel="nofollow">Br CC2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203469&amp;idx=6&amp;sn=0e7b4f75f3839d68290db8f9ce602b80&amp;chksm=8ee145a1b996ccb7f27ad3b5480675cbc589e2db106424f7489a7276f0002e91c54d1cecd914&amp;scene=21#wechat_redirect" rel="nofollow">Br 2020</a></td> <td></td></tr> <tr><td><strong>SAI</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204073&amp;idx=5&amp;sn=ebf2667e5305fa5241b64f0023768cc6&amp;chksm=8ee14745b996ce53936ef37110969ef4b84836591d83416e65dafffc89c254f7e98e7093e427&amp;scene=21#wechat_redirect" rel="nofollow">SAI 1.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204073&amp;idx=4&amp;sn=b241ed5f643b220e8754230d078aa627&amp;chksm=8ee14745b996ce536daf016f8094075d4eacbb493926b17de37f2a45f9bac71404bfeb2148f9&amp;scene=21#wechat_redirect" rel="nofollow">SAI 2.0</a></td> <td></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>④机械设计</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>AutoCAD</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203048&amp;idx=3&amp;sn=1c1dfa7635be2573f6651ddb4f537cd0&amp;chksm=8ee14344b996ca52f3a270614421ce22982eb577a9a724eb97b7f123a32618475cc0eb12bfd3&amp;scene=21#wechat_redirect" rel="nofollow">CAD2004</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199013&amp;idx=7&amp;sn=be6477fd0084db4dc1112821c9b553b7&amp;chksm=8ee17309b996fa1fc64e9f016eb79120ec5e642c267f7228556b3f9f6d00970dbe271598a36c&amp;scene=21#wechat_redirect" rel="nofollow">CAD2005</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=6&amp;sn=3169bcac505c1b387f4cab32f6165324&amp;chksm=8ee14c4cb996c55a58531593669356edaa5d57c0c8d539660dedf8a7291399adfc598a000816&amp;scene=21#wechat_redirect" rel="nofollow">CAD2006</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202647&amp;idx=7&amp;sn=62bb2ed78278f411f286cbcee0cc5ded&amp;chksm=8ee142fbb996cbedcd87bce4935c7fba9d0c232c328d98b10c4340d3fdbf9463618dc49f4817&amp;scene=21#wechat_redirect" rel="nofollow">CAD2007</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202774&amp;idx=8&amp;sn=68bdf88d204cf34e078836bade322b2d&amp;chksm=8ee1427ab996cb6cd2eba53fc604f0098e108e30f4bc53d939143e6a139ac7eedf8f8763925c&amp;scene=21#wechat_redirect" rel="nofollow">CAD2008</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205446&amp;idx=2&amp;sn=eb67a791a47eb4324944817fe49bb4af&amp;chksm=8ee14deab996c4fc325abf79a872123bf575a5e02b149625a9f24284d5fdd87c0976cdaa4fd9&amp;scene=21#wechat_redirect" rel="nofollow">CAD2009</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=2&amp;sn=3894b6f433e64903979e907c5ba9ab23&amp;chksm=8ee14c4cb996c55a217ca586f0f0a81eafec49e6419d5955ec879fab3bb3b1d25eb78cebb109&amp;scene=21#wechat_redirect" rel="nofollow">CAD2010</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204274&amp;idx=1&amp;sn=2b0d21fceb1328e91da0df4699148fe8&amp;chksm=8ee1489eb996c188eb3249710074674e2d591c73267104399a4bf9f4f756f02b652b435cf509&amp;scene=21#wechat_redirect" rel="nofollow">CAD2011</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204346&amp;idx=1&amp;sn=5d268c7aa02e6db75ef2184e2ff4afdf&amp;chksm=8ee14856b996c140fb6bd446d83e5ce185855d281f9b05e7475df1f948d34d7d7c545815b93a&amp;scene=21#wechat_redirect" rel="nofollow">CAD2012</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202834&amp;idx=1&amp;sn=8f4fc25d267ef32da0f24fef89bce673&amp;chksm=8ee1423eb996cb28f43e9922a437961e06c4081be82317d9829d22f7ee3a05f8a3dcdd2782d5&amp;scene=21#wechat_redirect" rel="nofollow">CAD2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203973&amp;idx=1&amp;sn=a2584af606f0b35d5526fce1a5e11e3a&amp;chksm=8ee147a9b996cebf91e652c481920a5805f5d4208f5f078c516ea44b18f949692a567c17d78b&amp;scene=21#wechat_redirect" rel="nofollow">CAD2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204362&amp;idx=4&amp;sn=5cf934a7f75e2688814b53ce18111da8&amp;chksm=8ee14826b996c1309bcdc649a74da9ebd70cd0173a2c1ecf9ad8f37711117d3e83f0843cacee&amp;scene=21#wechat_redirect" rel="nofollow">CAD2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=1&amp;sn=71f879398fd31f1c723873eb127d1649&amp;chksm=8ee14c2db996c53b5bca4288177f0774b8a9498c742399703c0fa0b505d070f997937c65fddd&amp;scene=21#wechat_redirect" rel="nofollow">CAD2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204362&amp;idx=5&amp;sn=327c6db1eff9d75f0768404af7eab2f1&amp;chksm=8ee14826b996c13094d6d664e7db369287dd58214c93ebb9edf14f5fae6926c9dc1809434681&amp;scene=21#wechat_redirect" rel="nofollow">CAD2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=2&amp;sn=711bfe2379a9061a0b0254272b27fc43&amp;chksm=8ee14c2db996c53b13e98ca33a9d655d8af79ecd1a29960f3111eface33d366a780c3a78c5da&amp;scene=21#wechat_redirect" rel="nofollow">CAD2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203683&amp;idx=7&amp;sn=6bd1ec66de3686f611e6cea0fe3ae004&amp;chksm=8ee146cfb996cfd9be3b5fdd5acbe5e83a9dc1d44c852d9e1c4dd063135c91189daa9a4e3692&amp;scene=21#wechat_redirect" rel="nofollow">CAD2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204223&amp;idx=2&amp;sn=4866999074212234202c3862e64ce35a&amp;chksm=8ee148d3b996c1c516adcaa4e8fa616c0cf8597eb71c27abafee8a1b137cd210f302d7e44ae9&amp;scene=21#wechat_redirect" rel="nofollow">CAD2020</a></td> <td></td></tr> <tr><td><em><strong>*Solidworks*</strong></em></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=3&amp;sn=62a7b8b3aa47de3b270b946861332da4&amp;chksm=8ee14c4cb996c55af893701e45e8d99e7f829adae23aebfbcf5e565541f0a72bb830e9d2348b&amp;scene=21#wechat_redirect" rel="nofollow">SW2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205494&amp;idx=1&amp;sn=86e32203575a682490d9246c4ed294f3&amp;chksm=8ee14ddab996c4cc5b5184319b32f762d779ad63d9bc2dcd38d88920a704e167d520aa201bfc&amp;scene=21#wechat_redirect" rel="nofollow">SW2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205376&amp;idx=4&amp;sn=e64400f31398b69208a3918be0dd4b39&amp;chksm=8ee14c2cb996c53a07a4ea1a6a0748b70c3de1ea08adce1b7ddde0ef1d632549303be0f1ce35&amp;scene=21#wechat_redirect" rel="nofollow">SW2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205446&amp;idx=3&amp;sn=22dfb2f1062e28276d5cf33af1f5e1d6&amp;chksm=8ee14deab996c4fc8c8e4f913cc86aa05e3d63dbcbc95740e0521295da7764c4559cef8f256f&amp;scene=21#wechat_redirect" rel="nofollow">SW2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=7&amp;sn=e3a8df15ee9ae1e35d2e30ddb660ff6e&amp;chksm=8ee14c4cb996c55aa636613ad44151ad6bbe990cdcacda75e763da8d610c4ba1fb1c7a5d2322&amp;scene=21#wechat_redirect" rel="nofollow">SW2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205376&amp;idx=1&amp;sn=a0c0c89f1c535e40825fa8326ba7b135&amp;chksm=8ee14c2cb996c53aa5cadb2d398bd30990d71d70e53e249d9b86f5942ec2011def9d3cce3876&amp;scene=21#wechat_redirect" rel="nofollow">SW2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203835&amp;idx=2&amp;sn=905786ecd815465deac02cb2f3360536&amp;chksm=8ee14657b996cf414f2fd62ecea634dc320f06c545fcff0ff96145338ae1f39c6612dde484c6&amp;scene=21#wechat_redirect" rel="nofollow">SW2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202684&amp;idx=1&amp;sn=a0d19adb81f48d6e480f1a9ce4968af1&amp;chksm=8ee142d0b996cbc61b6bb49432fb29f29d00c4a6e6fe2a863d191e2e13cbe04100eccafba54e&amp;scene=21#wechat_redirect" rel="nofollow">SW2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203951&amp;idx=1&amp;sn=927c09d1bc52c36f2808c30b3533f559&amp;chksm=8ee147c3b996ced5bab8febb4059a0b3120a004bf5f4db30b62dcfbdb47acc1fbfe5f29813e8&amp;scene=21#wechat_redirect" rel="nofollow">SW2020</a></td></tr> <tr><td>*<strong>Pro/E</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204409&amp;idx=5&amp;sn=040238737e5d7ecf206cdba47f3950f9&amp;chksm=8ee14815b996c10319e2b5a5cd681d9c2f3a5cdc9ff25ff330c1b5d85b035de79e9ad6f8437c&amp;scene=21#wechat_redirect" rel="nofollow">Proe3.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204409&amp;idx=6&amp;sn=0c636c586f6b85e160420a69efc86f7c&amp;chksm=8ee14815b996c103a0239faf2e9bc4b8dcb5d85ad68b18b96da35ef1d44eb839e8ecf16f57a7&amp;scene=21#wechat_redirect" rel="nofollow">Proe4.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202673&amp;idx=5&amp;sn=57c3bfc90fae401a4991be50a1dced07&amp;chksm=8ee142ddb996cbcb44f9d69023946211e21ffa989eb267d60e1c45b943c543947feaa62efc09&amp;scene=21#wechat_redirect" rel="nofollow">Proe5.0</a></td></tr> <tr><td><strong>Creo</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204566&amp;idx=2&amp;sn=2635cea00bee80ee4d71d20dae499731&amp;chksm=8ee1497ab996c06c888d98ee411401a4bccaf428f991c8a40cadc80565a5d09dcff0662aee46&amp;scene=21#wechat_redirect" rel="nofollow">Creo1.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204566&amp;idx=1&amp;sn=0946c457f53bed0b1b5cd7183a77dac4&amp;chksm=8ee1497ab996c06c9f047f0906ee9e691be05c44b1034c922b959dc476a8158f7dec5669d60a&amp;scene=21#wechat_redirect" rel="nofollow">Creo2.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204409&amp;idx=7&amp;sn=558adbcb42a3c09b4444d9856608ab35&amp;chksm=8ee14815b996c103f85b9998be7d5ea3fb6b60fbf9871c020bfa57d3b9c5a043b559e1e7c0fd&amp;scene=21#wechat_redirect" rel="nofollow">Creo3.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203819&amp;idx=7&amp;sn=0d83f16e2d51f479ee0ac54c0b31c493&amp;chksm=8ee14647b996cf510912bfa7e5bbeb8730e3e7214fdf36960a0ba9bbbb2e4048aa29e388a876&amp;scene=21#wechat_redirect" rel="nofollow">Creo4.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204409&amp;idx=8&amp;sn=eeb7c0278d9bf2edace9f7d4aa3882ef&amp;chksm=8ee14815b996c103a6f58e4fed35a0d29f523a9269454fd82de67083000a78e7dc3cce6495d8&amp;scene=21#wechat_redirect" rel="nofollow">Creo5.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202563&amp;idx=4&amp;sn=07c6809b3d4322b8c25fc4dc8b1abcdf&amp;chksm=8ee1412fb996c83991448a51e82c0ac005fa3e2bd562e307b00073162d97affaf3711d9fa367&amp;scene=21#wechat_redirect" rel="nofollow">Creo6.0</a></td></tr> <tr><td><em><strong>Abaqus</strong></em></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203843&amp;idx=1&amp;sn=4f5d142b61b6bd78d6571dee96cccadb&amp;chksm=8ee1462fb996cf39638f0ccc70f6de409ae923617dab1a00ea497714c347312d7d626e66443a&amp;scene=21#wechat_redirect" rel="nofollow">abaqus6.12</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204566&amp;idx=3&amp;sn=340e0fb7380cb146f0b0c5b0b058661f&amp;chksm=8ee1497ab996c06c4e9872c50620876a64982a1bdf0491b7d1d553426bdfd8cba15298e19432&amp;scene=21#wechat_redirect" rel="nofollow">abaqus6.13</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204566&amp;idx=4&amp;sn=8d9b0677b5897dc4215d48431080de55&amp;chksm=8ee1497ab996c06cc7b448d8215847b5f3e5a7a55807693d5dee1f0346c10abdde2c03a457c2&amp;scene=21#wechat_redirect" rel="nofollow">abaqus6.14.1</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204566&amp;idx=5&amp;sn=19e8f3d18f031e972c2ecd2cc926e324&amp;chksm=8ee1497ab996c06c8f00446e0b80d8f9242fb632d91746f47686e491ea54ae5b4f45a48af622&amp;scene=21#wechat_redirect" rel="nofollow">abaqus6.14.2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204566&amp;idx=6&amp;sn=dc76ccd818868f510b14ee928f96ab1a&amp;chksm=8ee1497ab996c06caa6bdc5bf4862ffc3851f4e708ebb7cacc2dc69b6c55d115461d3e404cd1&amp;scene=21#wechat_redirect" rel="nofollow">abaqus6.14.3</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204566&amp;idx=7&amp;sn=4a472dd425d348f950cba386ae7a33fd&amp;chksm=8ee1497ab996c06cfc12fec8319c383598904aebf8fea7adfea38506e8a9a86e07994ab0ee92&amp;scene=21#wechat_redirect" rel="nofollow">abaqus6.14.4</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204566&amp;idx=8&amp;sn=55e481be62da6c9b10233adae9ce6a14&amp;chksm=8ee1497ab996c06ccb3fb034207ceedc6548df202770510b807dc393ade96e91d9789a781aec&amp;scene=21#wechat_redirect" rel="nofollow">abaqus2016</a></td> <td></td> <td></td></tr> <tr><td><strong>Unigraphics NX</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204007&amp;idx=1&amp;sn=67ea6d7a620ae73889896326c80f2562&amp;chksm=8ee1478bb996ce9d8511276ed02d650306b132b02356fc9c94e9fb5ac020c98ae19446660ae0&amp;scene=21#wechat_redirect" rel="nofollow">UG6.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204296&amp;idx=1&amp;sn=05d7a3a09fd61c9ca6a7d2cca9223e60&amp;chksm=8ee14864b996c172778548755f8b00b5b2c0979c80df1952b300579bd066a6e1e68ae10839a6&amp;scene=21#wechat_redirect" rel="nofollow">UG7.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204582&amp;idx=1&amp;sn=1a94687c89df93f09daf8f37da15c88c&amp;chksm=8ee1494ab996c05ce467236def27e257fba98dd10d94426a37a664845f86bea970894fa93534&amp;scene=21#wechat_redirect" rel="nofollow">UG8.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204582&amp;idx=2&amp;sn=e26a9da51995ccaea0e7e878501a0395&amp;chksm=8ee1494ab996c05c102ab74f162d671486946b8c58e37ff84ee61e0219978aa71d08a91dd8d9&amp;scene=21#wechat_redirect" rel="nofollow">UG8.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204582&amp;idx=3&amp;sn=df94c1c45b9ebe0765a4e03e5afe69fa&amp;chksm=8ee1494ab996c05c5f841f7798fc3a12644e0e0ea8a273e44c818ca0637a1b0da402ddada23f&amp;scene=21#wechat_redirect" rel="nofollow">UG9.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204582&amp;idx=4&amp;sn=86b084617ea4cff3fc385f58c4c1de53&amp;chksm=8ee1494ab996c05cdec927fd32a07d6a2ed98e74ab98a498290c622afd012480572efb15551b&amp;scene=21#wechat_redirect" rel="nofollow">UG10.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204582&amp;idx=5&amp;sn=f71b9c1f09d8cf6c45e1c9a5c1926913&amp;chksm=8ee1494ab996c05cb4040709349862914d94e3951393acc5fae729bc14ce209d3ee506b7498f&amp;scene=21#wechat_redirect" rel="nofollow">UG11.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204582&amp;idx=6&amp;sn=12f5fd0a75ac27f78a253902a6a290b0&amp;chksm=8ee1494ab996c05cca0be2c9253988e5c970671e37190bea0323f0604ce12c058a931cf936f3&amp;scene=21#wechat_redirect" rel="nofollow">UG12.0</a></td> <td></td></tr> <tr><td><strong>Mastercam</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204715&amp;idx=4&amp;sn=0f540330a45bb3fe9dd15c9ad53782c4&amp;chksm=8ee14ac7b996c3d12cc989062520a59260e69cd9cd325a3d3f259dd6a2fa46d83f28e4ba7c6d&amp;scene=21#wechat_redirect" rel="nofollow">MastercamV9.1</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204732&amp;idx=1&amp;sn=2b2a10d94c0ffcffd0849ab1d16d11a2&amp;chksm=8ee14ad0b996c3c603020834e11d4041c8bd133fc41ba3af624210d386c94bdb3aa4c117312b&amp;scene=21#wechat_redirect" rel="nofollow">MastercamX5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204715&amp;idx=5&amp;sn=9ff9cdecb97c010e728539cab297bd5d&amp;chksm=8ee14ac7b996c3d179bdc983af99a0f99e63e41916362683ce74b569ea619f577a2ab0b2cbff&amp;scene=21#wechat_redirect" rel="nofollow">MastercamX6</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204715&amp;idx=6&amp;sn=5c849a2181c7231c8ecc6f2a73932650&amp;chksm=8ee14ac7b996c3d17b008cc59f040b7e0a1359c22e4624290a7ad321125263fab2698736c2c7&amp;scene=21#wechat_redirect" rel="nofollow">MastercamX9</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202214&amp;idx=4&amp;sn=36885bdda32d458d474597612ff11519&amp;chksm=8ee1408ab996c99c571eb5f977a36b9ada8963e91fc48dbd620ffee31a9c2668281329066859&amp;scene=21#wechat_redirect" rel="nofollow">Mastercam2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204715&amp;idx=7&amp;sn=02064a5b9aae92eaeb9b37c3a4e2edd9&amp;chksm=8ee14ac7b996c3d1eae1aba8000976f36b8044bf45a0bba7eb47a4e19a419941d1ae6fe83b46&amp;scene=21#wechat_redirect" rel="nofollow">Mastercam2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200672&amp;idx=1&amp;sn=caf9f4a6e5ca6b1e8cdca35674593aae&amp;chksm=8ee17a8cb996f39a37c2ca5a2fe9b247ff9d617a3bec2c8f0880236559e546f54a0cd58042e8&amp;scene=21#wechat_redirect" rel="nofollow">Mastercam2019</a></td> <td></td> <td></td></tr> <tr><td><strong>Catia</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204714&amp;idx=8&amp;sn=0aafff274cef1bf709e3b7d64824180e&amp;chksm=8ee14ac6b996c3d0cb541c20f7ccb408931ba25afd4777478c55240dd807e86a6c9029513e2c&amp;scene=21#wechat_redirect" rel="nofollow">V5R19</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204714&amp;idx=7&amp;sn=e8f55a5fd7331063c5499b9672f8a65e&amp;chksm=8ee14ac6b996c3d0eb981693f99da0a7484ef7c2485e61b528d5422253b7468bc4a9d946ea0c&amp;scene=21#wechat_redirect" rel="nofollow"> V5R20</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204714&amp;idx=6&amp;sn=42c552b4c369c9a8945c68f73b83fe42&amp;chksm=8ee14ac6b996c3d00b8072a2ec21c684731cd3108005f8e5c625c078eca1411cbcc651a26ed7&amp;scene=21#wechat_redirect" rel="nofollow">V5R21</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204714&amp;idx=5&amp;sn=7c898c724216c25075b076a6aba31027&amp;chksm=8ee14ac6b996c3d079e2ec9c5ab04092093938b6db0c8e589ada12388b3e86bea8c094c3df74&amp;scene=21#wechat_redirect" rel="nofollow">V5-6R2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204714&amp;idx=4&amp;sn=cd13f1b6a2961a834706b6ea409f67b3&amp;chksm=8ee14ac6b996c3d0411fa0f0a70c6dfd993836f4318f14144442fc03f18a4ff357ac2f5bfff6&amp;scene=21#wechat_redirect" rel="nofollow">V5-6R2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204714&amp;idx=3&amp;sn=32ae1bf4707c093db8b6d4fdd39a5f9d&amp;chksm=8ee14ac6b996c3d0f8753b3807f28019304a5163f287be4765b9d3f5fa8ba46ba3e118ec5c40&amp;scene=21#wechat_redirect" rel="nofollow">V5-6R2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204714&amp;idx=2&amp;sn=43df6677ca388bbef058ec2835a8cb38&amp;chksm=8ee14ac6b996c3d0786c17fedb351a6536b4e6a7915c48ac04dce185245bf407d49547116269&amp;scene=21#wechat_redirect" rel="nofollow">V5-6R2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204714&amp;idx=1&amp;sn=73a2279a2dd50a64fb2a4f503bb7b54f&amp;chksm=8ee14ac6b996c3d0d971c0054ef5372b114771bafc8994e6128fc95e6a75bb735f3b09598ab5&amp;scene=21#wechat_redirect" rel="nofollow">V5-6R2017</a></td> <td></td></tr> <tr><td><strong>Rhino</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196215&amp;idx=3&amp;sn=7d5382feea24d574e5ff1ec327b6c2a5&amp;chksm=8ee1681bb996e10dde64fcd28e5b1465c42796eab2b2df4c752c76a17de1a4b0e659d26cedd6&amp;scene=21#wechat_redirect" rel="nofollow">Rhino3.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196215&amp;idx=2&amp;sn=280faa101c0212557a087010eac7f2c3&amp;chksm=8ee1681bb996e10d3bc5f2be738fb87a6953d8ca99c6a44ca200d71ebe63f6534d62dc2da921&amp;scene=21#wechat_redirect" rel="nofollow">Rhino4.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203990&amp;idx=1&amp;sn=b65824a08589b6955ddec9bac2bf228d&amp;chksm=8ee147bab996ceace62a15dd5cfbcd3ad5b3b0ee008fc436e2256c961d0691f495ffec151de9&amp;scene=21#wechat_redirect" rel="nofollow">Rhino5.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203708&amp;idx=5&amp;sn=7ee7ab3073e7124fe27afa27264da4c1&amp;chksm=8ee146d0b996cfc6a7e27f35b8ad7b40a7e1e94275627139ef761730e7343b00ae58b2e5c40e&amp;scene=21#wechat_redirect" rel="nofollow">Rhino6.5</a></td> <td></td> <td></td></tr> <tr><td><strong>MATLAB</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204296&amp;idx=2&amp;sn=cb37563e8d89a397d7b751d6ca5a8c30&amp;chksm=8ee14864b996c172e94a73ff40eafbba0af747eee94d2c4bded902cae625aa511d708bc48918&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2012a</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=3&amp;sn=4276ca6c10a3d77e4f2c7ae9d9ead515&amp;chksm=8ee14c2db996c53b087ae8c7d18d2eff4f685773474482191b064180faba50e00bd258c3c765&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2013a</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=8&amp;sn=fe66c57054edff936af64b9a56a7182b&amp;chksm=8ee14c2db996c53b723703e82c36eb185fb2bae09b15e6926af409626d3070c06cc5039ba0c3&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2014b</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=8&amp;sn=3dc84ae4fca70512ebd6f9767d36a348&amp;chksm=8ee14c4cb996c55a6e9a6baef3f92130c49c91c8362e4efec185513a4077b3cd4161ddf72cdc&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2015a</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205376&amp;idx=7&amp;sn=57fa7f7c885897cec0e1cc35d3c0e096&amp;chksm=8ee14c2cb996c53a34a47e494846567d30e2a3ce7602ecf5fee59b3088b8b5227d803ef026b0&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2015b</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=4&amp;sn=d0ccf212688f36aa6220acaeaa5eb548&amp;chksm=8ee14c4cb996c55a5783d953534ee236392cb4e97a8f424d379dcf1b0cf23d30fe9f4e0f5542&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2016a</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=5&amp;sn=163d9b83f573b6d9e493552294f23d86&amp;chksm=8ee14c4cb996c55a87a9151c6e4cba008c55f4459d4667f39d9d61be0296b410c8d238f05497&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2016b</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202141&amp;idx=3&amp;sn=98c52a2ba6a213708921ab1f4c3e69b0&amp;chksm=8ee140f1b996c9e71123e25e4faa05e75668a3f35cf49f9c7c196fb4d4b9fa2e484b895aa011&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2017a</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204732&amp;idx=2&amp;sn=67118297f9ed2f9cce5fdd93f2ef61db&amp;chksm=8ee14ad0b996c3c6c86f2e456d4f139303ca7da197d56fad436c705b5b6cdcfbefe8689a4c4e&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2017b</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202578&amp;idx=5&amp;sn=8d4f58f5984f84bed126a94035208da5&amp;chksm=8ee1413eb996c82870ada7e3a1b23ea3dbd70d9ad5847a76fa98d2ecf5e0e517dec866562099&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2018a</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650201514&amp;idx=3&amp;sn=20dd564b0560ba7b7b6b3b00f133c35e&amp;chksm=8ee17d46b996f450fea5ed10d07a28addaf8a737da63284c629681d55d1dde8aa1e05daac847&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2018b</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205376&amp;idx=2&amp;sn=ebfb24d2254298643dcacb1cbaf26494&amp;chksm=8ee14c2cb996c53a5c4f1c3b9b15c8ec6afd297cbc74744ceeaaeb9864ae9c23689fb2899412&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2019a</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204003&amp;idx=3&amp;sn=feaa953100a27877d1e9ff798bffcda3&amp;chksm=8ee1478fb996ce99d6a943fec329bf889902090ed34d77a0087ff4ce0d010e50632b78250088&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2019b</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204299&amp;idx=4&amp;sn=b4567679c874770ad8fa8ccce5618a7b&amp;chksm=8ee14867b996c171969228b61acd102be6ed1771f3111e0aec0223860fd18dc832d6ee304eb6&amp;scene=21#wechat_redirect" rel="nofollow">Matlab2020a</a></td> <td></td></tr> <tr><td><strong>Adams</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203819&amp;idx=6&amp;sn=f553ffbdc0a3d54e501c45ea271f5293&amp;chksm=8ee14647b996cf5160e2d17496dc90c91489ce8264e8fb1ce3530d823682c5dd7a6f2bd15ac5&amp;scene=21#wechat_redirect" rel="nofollow">Adams2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203819&amp;idx=5&amp;sn=7b9c07ae298dc508b962159f7e704f58&amp;chksm=8ee14647b996cf51f65dbe88c7b0f393fa7b6165d340bb499d5385b03295443683eb0817f297&amp;scene=21#wechat_redirect" rel="nofollow">Adams2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203819&amp;idx=4&amp;sn=1fa3e79f6158039d0e9fc9a9455d61c1&amp;chksm=8ee14647b996cf51bf87a2cd25be9046f908ce8f198f70615785ba20f2703ecd3d3da76115d7&amp;scene=21#wechat_redirect" rel="nofollow">Adams2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203819&amp;idx=3&amp;sn=e3d038e29785fc91b2d8af4c96786f17&amp;chksm=8ee14647b996cf512a2ac09ebbe49a94bb6b870798320b5ed521efc44e33106468615fcc3472&amp;scene=21#wechat_redirect" rel="nofollow">Adams2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203819&amp;idx=2&amp;sn=6160e9db04a32dfa3b1154499b33ea8c&amp;chksm=8ee14647b996cf51604f4a0722851a8b56f538bf2be62077319de40d49a1927edbdd09242554&amp;scene=21#wechat_redirect" rel="nofollow">Adams2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203819&amp;idx=1&amp;sn=75df787e09d6235bb2ca0178fb8f1418&amp;chksm=8ee14647b996cf513ba1203465a99e0138c63585e2c1eafac6aa834687e65e9ae9bed059e6f4&amp;scene=21#wechat_redirect" rel="nofollow">Adams2017</a></td></tr> <tr><td><strong>PowerMill</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204732&amp;idx=3&amp;sn=d60b9b9ae27b25c7954ebd8c5546c39c&amp;chksm=8ee14ad0b996c3c63a7c06ab4b06f56a38fb4cadcfaae5593198d22380b3ce310e906c1fac06&amp;scene=21#wechat_redirect" rel="nofollow">PowerMill2010</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204732&amp;idx=4&amp;sn=1eb05626c4c6fc65f203a5572332d8f3&amp;chksm=8ee14ad0b996c3c68dbd7d341d77385c8207c2639a07d943d30ed0bafd4c90fba73492a938f6&amp;scene=21#wechat_redirect" rel="nofollow">PowerMill2011</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204732&amp;idx=5&amp;sn=a3cbd15a815d9d9e5b2341682e834349&amp;chksm=8ee14ad0b996c3c6c543b47ed52af4e4134ba94eb739efcb3b6bfc7e69e1996d65ee0e9aad2c&amp;scene=21#wechat_redirect" rel="nofollow">PowerMill2012</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204732&amp;idx=6&amp;sn=6a3b457c575a70d8a58b1e5dd2971e73&amp;chksm=8ee14ad0b996c3c609d0b76b51d460a45745089221493594ec2d2b153acca91bce82ad563e4c&amp;scene=21#wechat_redirect" rel="nofollow">PowerMill2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204732&amp;idx=7&amp;sn=6ebb19d1361de80315fbfa3b8acac41a&amp;chksm=8ee14ad0b996c3c63b1746d81216dbf36ecbb792abbb4e84a4feb794b23d2d3a3f9e5e712cb2&amp;scene=21#wechat_redirect" rel="nofollow">PowerMill2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202673&amp;idx=4&amp;sn=e2804f61bbc2f0e829d3a708599d31cd&amp;chksm=8ee142ddb996cbcb44b79131d13c815e3718604dd67857fd58d1b6ae386560361b79bdc26d2b&amp;scene=21#wechat_redirect" rel="nofollow">PowerMill2019</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204073&amp;idx=2&amp;sn=7c6ba6751bd6fd777b88c2a106d59907&amp;chksm=8ee14745b996ce5319c86675f3868eff5b5e0181bad2d0ce87b72866a7bd26b7b31b70067614&amp;scene=21#wechat_redirect" rel="nofollow">PowerMill2020</a></td> <td></td> <td></td></tr> <tr><td><strong>Inventor</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204745&amp;idx=8&amp;sn=6076a1cd5f3257ff9abb8f9a3352add2&amp;chksm=8ee14aa5b996c3b3008d759546fcfab333267884ae415b43dc402732a24782c0d441fb5cf338&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204745&amp;idx=7&amp;sn=6c4cbf4bc7cfcd14f96bcdf3baa2b7d0&amp;chksm=8ee14aa5b996c3b35bc5c0f6fe35c28316affecd5d02974ee48dc9b7490a79c37113906010e6&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204745&amp;idx=6&amp;sn=12d629594ed5934b43a3d93684533b8d&amp;chksm=8ee14aa5b996c3b31250134da65ddfcc8727353d7a7a5843a447c3fc3276051417e6b54399a8&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204745&amp;idx=5&amp;sn=01b33b5fa858acf9c6bc4ebadbf4d687&amp;chksm=8ee14aa5b996c3b364fb85dac9a362935da4dfe36b9642db6d173e1aea5dfa1a5c0da12bfab2&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204745&amp;idx=4&amp;sn=0f45a05bb63e70ea3c208ef694a34651&amp;chksm=8ee14aa5b996c3b3eb67f6c7111c0f918459a1f61ae6aef550d2ab52ead517023542786681f3&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204745&amp;idx=3&amp;sn=ea8a22669124edb796dbbc0f788e8a56&amp;chksm=8ee14aa5b996c3b35fe61d190fcdd8a3febc4975f7cae7fc7935949c0a00bb73f64c83995a1c&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204745&amp;idx=2&amp;sn=42f15b3ad4cd7685727fe154a989f94a&amp;chksm=8ee14aa5b996c3b36135b94216411c5f45ee00f0c4b6576e008a164988be8ebe2b72ed16c623&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204745&amp;idx=1&amp;sn=88c2d8e4ac3fb1be77cd04966851a542&amp;chksm=8ee14aa5b996c3b3c5af14bd706155f8d03b9c94f9f76149c6a1a8ab47eca6d31ecf69b8d489&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650201514&amp;idx=8&amp;sn=aed75b6637a5001ba40dcffc45570c4e&amp;chksm=8ee17d46b996f4507b9216f3c446427a93aaf36cf864734f9c1057f92f3225d35c76dad78b78&amp;scene=21#wechat_redirect" rel="nofollow">Inventor2020</a></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>⑤影视动画</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>Premiere</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204792&amp;idx=1&amp;sn=d464bde2e27e057ae9e4c8d1a109d0a9&amp;chksm=8ee14a94b996c382c90edcd0945955c55cee834b486506325b8d7cf91b2ef59a30a7c9579dd3&amp;scene=21#wechat_redirect" rel="nofollow">pr cs4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204792&amp;idx=2&amp;sn=b65324c0a8984b03fb0df4587c28d826&amp;chksm=8ee14a94b996c3822a0acf3a676f3085bcba2994142f286aa6cdf3da9bd573ad0915f4e6d36e&amp;scene=21#wechat_redirect" rel="nofollow">pr cs5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202226&amp;idx=5&amp;sn=df9919c5193c0db9b91af74e58d2fe13&amp;chksm=8ee1409eb996c9884a9647c85525e1ef6879a6b71472ecd7d7ac52b01334189c165d325af9f4&amp;scene=21#wechat_redirect" rel="nofollow">pr cs6</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203538&amp;idx=2&amp;sn=29f4e5f7221b541060c338132130b941&amp;chksm=8ee1457eb996cc683fc0c8e7bf6d6e5dfc25b944283f836334f8f629bcdef683db02f32dde26&amp;scene=21#wechat_redirect" rel="nofollow">pr cc2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204792&amp;idx=3&amp;sn=fb2274ad642b404488b645a2c75d6945&amp;chksm=8ee14a94b996c3822e13cf13cdc2c20c546f38a482ba126461fe629c8c0b8176dc797ae29217&amp;scene=21#wechat_redirect" rel="nofollow">pr cc2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203973&amp;idx=2&amp;sn=94826353a4c3e7109a1013e28058df2b&amp;chksm=8ee147a9b996cebfd2de94543e1b6bb50d4a2afd56425bfa8d83999953bfaeb2e61f3ea892fc&amp;scene=21#wechat_redirect" rel="nofollow">pr cc2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203916&amp;idx=2&amp;sn=a12dc05ab30523b8f8e2902887c46776&amp;chksm=8ee147e0b996cef67bf094e9dbe50b325d2f76d38dcc6a7fc624383b4b4a8e40a4daf3018417&amp;scene=21#wechat_redirect" rel="nofollow">pr cc2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203683&amp;idx=2&amp;sn=97aa32a9bf9a53189075fdae27392229&amp;chksm=8ee146cfb996cfd900515a48b0dccf020d21d377d4b8027b1c83f6de29fd5709427b2c4ed811&amp;scene=21#wechat_redirect" rel="nofollow">pr 2020</a></td> <td></td></tr> <tr><td><strong>After Effects</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204792&amp;idx=8&amp;sn=a16207d4ff9476fa0ee29603b3534810&amp;chksm=8ee14a94b996c382db44d11935014a7f1c4110012438fb4fa9bb6865fd050fbd79d945bb9edc&amp;scene=21#wechat_redirect" rel="nofollow">AE cs4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204792&amp;idx=4&amp;sn=d4a88b1f62a1ff0f4299c45ceeb082ff&amp;chksm=8ee14a94b996c3827b2da254e428f08daffb56556b62b03f6a3fdd8d523624450de4d695783b&amp;scene=21#wechat_redirect" rel="nofollow">AE cs5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204792&amp;idx=5&amp;sn=f54cd404a8fb8ff56dec55bec0b365d5&amp;chksm=8ee14a94b996c382b84794f32002f3c1a8cd579e9a371a4677165292ca7272487ffa663bacf9&amp;scene=21#wechat_redirect" rel="nofollow">AE cs6</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203008&amp;idx=2&amp;sn=f21d26856aba626a69649f151ecf9f57&amp;chksm=8ee1436cb996ca7a6f1171d2ae4685e4f1534a06aa45e5120b644e40ac956daf99699143d370&amp;scene=21#wechat_redirect" rel="nofollow">AE cc2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202243&amp;idx=3&amp;sn=8bfb6bdc4c96d6e5bb191d64638b936e&amp;chksm=8ee1406fb996c979f5cceb8bbe8062db7f805eb09ae44a4dbf407ebc61babeba9bbd15d79344&amp;scene=21#wechat_redirect" rel="nofollow">AE cc2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204792&amp;idx=6&amp;sn=872bed833ec075ffd51e752e8106caa4&amp;chksm=8ee14a94b996c3826f2659e3be4013ad0dd5e6a471a1f481f4f5752ca4c2b5e92555f566f9b7&amp;scene=21#wechat_redirect" rel="nofollow">AE cc2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203538&amp;idx=4&amp;sn=3e36053b3cadc47ed36b66a40467e5dd&amp;chksm=8ee1457eb996cc6833d42e51362e73262a6fb1a53a906e225d2a725c633ea52578bf7a7104f1&amp;scene=21#wechat_redirect" rel="nofollow">AE cc2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203469&amp;idx=8&amp;sn=8745eff35a7ab4f2968d3e4faa70ca5b&amp;chksm=8ee145a1b996ccb7b9f239b39b2d19eee255e8f63877cb0b806daaa75a97748c63e0deb591b5&amp;scene=21#wechat_redirect" rel="nofollow">AE 2020</a></td> <td></td></tr> <tr><td><strong>Media Encoder</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202745&amp;idx=6&amp;sn=7c849a3db8e93ad9ecdc9fb904ecca49&amp;chksm=8ee14295b996cb834867d46bd64a1cf25b45b035c1c7b3befd78750299a2baca2dd489fc4318&amp;scene=21#wechat_redirect" rel="nofollow">ME cs4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202745&amp;idx=5&amp;sn=ba8e886d9b2b9bde0e64edf4e8fe17a8&amp;chksm=8ee14295b996cb83247ce24d31b2bd51cb3d03b879bf6f86b436da74b880f77c4f370a28e9bf&amp;scene=21#wechat_redirect" rel="nofollow">ME CC2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202745&amp;idx=4&amp;sn=229e5467e012676e174b04ccd1caa3fb&amp;chksm=8ee14295b996cb83b9be7336d690f903b1aedf48e93a5a7073eeaa44e5d63ed738096cb65ba2&amp;scene=21#wechat_redirect" rel="nofollow">ME CC2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202745&amp;idx=3&amp;sn=7a53e53ee55602a91430f2a709d57843&amp;chksm=8ee14295b996cb837f4b3469ecb6d73c4714e59304e8818bf87d7badcb06adf2240c7e9fcc45&amp;scene=21#wechat_redirect" rel="nofollow">ME CC2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202745&amp;idx=2&amp;sn=fb1a42a33b773c9eba2fc2df24a84407&amp;chksm=8ee14295b996cb839c417815d5d2517dbba0bf9b9fe7d4f9cbc14d3bb82b9791df35e9e577fc&amp;scene=21#wechat_redirect" rel="nofollow">ME CC2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202745&amp;idx=1&amp;sn=cdd4d5fa6a9630a1102ba44911e1d1e1&amp;chksm=8ee14295b996cb833d6d334ba53ab5d2aa181f18bebea18291f0b33a2d37218cdc065d18f1ac&amp;scene=21#wechat_redirect" rel="nofollow">ME CC2019</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203464&amp;idx=5&amp;sn=b98c5de52ff74135ad34d650f115ff10&amp;chksm=8ee145a4b996ccb2bc343d954e05d686075433be82aecc2178d074eee50950144a7d3face21a&amp;scene=21#wechat_redirect" rel="nofollow">ME 2020</a></td> <td></td> <td></td></tr> <tr><td><strong>3Ds MAX</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204036&amp;idx=1&amp;sn=79105f789ae9b4cc49e406406681961c&amp;chksm=8ee14768b996ce7ed0d6765166964aa347bfdb4d78bf9cfc92cbdb77744e51d6e8782a0adbe3&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2009</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=8&amp;sn=fe9238b9421f0974bb45ee777c44b2d7&amp;chksm=8ee16851b996e147a60ae970c451827e5a2e7d66f55fe4c4f4f8a6996f37e8c3c1358721722f&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2010</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=7&amp;sn=72ed0d8cb164973f9830e971242f1e57&amp;chksm=8ee16851b996e1478f5b9f49c727a36dbde57f01799f35270be8005a89f48330a0cf3ad3fd9a&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2011</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=6&amp;sn=d03935a4ad80da4d253aa58a6f1b15ad&amp;chksm=8ee16851b996e14709f70bd01fd960838bcb443605248226c6d6c04bc40a4f79e84a63f1ca63&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199059&amp;idx=5&amp;sn=56d2e6af41af40bf5746245c4713fef9&amp;chksm=8ee174ffb996fde9497ed66d91d1babce320a0d37089ce02cba1e6bfcec7e1e03db194ddf54d&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202654&amp;idx=2&amp;sn=cb7d4c852a1f00f20d5dfab6b149de9a&amp;chksm=8ee142f2b996cbe422a7d6f460c37f4b1e8eec0ed42885c73a55034fee255ed466f203aeafce&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=3&amp;sn=63dcbce542c51bb2dc14d0766b1ed660&amp;chksm=8ee16851b996e147d898a1f1376f0427a2e26232d40d017c25a2332cf2aad9574f68f931712a&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202121&amp;idx=1&amp;sn=a86710a05f020232cfef9ae5211023ea&amp;chksm=8ee140e5b996c9f3d6a072641607caca5786d66fe99500d962e95c5e586816991306bd28a7f2&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199059&amp;idx=1&amp;sn=272d176a457c98cb96a59aa2e16bbe57&amp;chksm=8ee174ffb996fde9962151e4a72c289e1e8b6abd7c798af3531066d3497986d8786e71a04147&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203989&amp;idx=2&amp;sn=ee56563326f6b607bcf6150705f36788&amp;chksm=8ee147b9b996ceafb75bb01e261219e491dcf1df3b8425ac643fc7f251795daf6b5e7bb119e3&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202157&amp;idx=6&amp;sn=b40cf6a0ee6099709a2e562e6cd46dbe&amp;chksm=8ee140c1b996c9d78462ccc15403c167c4e80f376acb5e768a3523a0d628f4a5b3946bda00a0&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203008&amp;idx=5&amp;sn=39d54e0be1a134116b532163b616ffd8&amp;chksm=8ee1436cb996ca7a301fc0e4b05f4b8bcf76219bf3d4494033b3989a56d4ab7f2963bcc25210&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2020</a></td></tr> <tr><td><strong>Maya</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650195707&amp;idx=1&amp;sn=3915087b57fc011c2ef96b0c0a8f9d4b&amp;chksm=8ee16617b996ef017c09189d50cae17e2ca2203226fd9ae3213fd89ff3ba296394235403e321&amp;scene=21#wechat_redirect" rel="nofollow">maya2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650195707&amp;idx=2&amp;sn=816ea8499e001d0be53d54bcb1859542&amp;chksm=8ee16617b996ef01502206d17639039d6d9d3b9bfce8f8f5b3c4b538d5cfceb031c19d893340&amp;scene=21#wechat_redirect" rel="nofollow">maya2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650195707&amp;idx=3&amp;sn=60981fbff875913ec46497d2866437a4&amp;chksm=8ee16617b996ef01873fd6c2b834889d01c4a439a1e18c60cd2b93f1a99dd8cb616274ccb0c6&amp;scene=21#wechat_redirect" rel="nofollow">maya2016</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204011&amp;idx=1&amp;sn=1649a9c0d19a0ceb3c3909e8c1cdc819&amp;chksm=8ee14787b996ce91372f0152b434c6f8bc8158553b2dd2912e62f366522c27a585d6465032a6&amp;scene=21#wechat_redirect" rel="nofollow">maya2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204792&amp;idx=7&amp;sn=cbee4c0bbc6f3674c383700fe54ff8a0&amp;chksm=8ee14a94b996c3823e414af7b71a2138c35672d6b153868712fc5135a68c6e90e52cd28ac450&amp;scene=21#wechat_redirect" rel="nofollow">maya2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650201514&amp;idx=7&amp;sn=e2478d4bf3b30cb08740fb2e42388556&amp;chksm=8ee17d46b996f4508da745cba21a28b99e8e4d88c8266e9f10c755eda6488e6aac812af37109&amp;scene=21#wechat_redirect" rel="nofollow">maya2019</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204073&amp;idx=3&amp;sn=6e5677859c8227e84a1d86a390a369cd&amp;chksm=8ee14745b996ce5314fe4de6d726324f0561d6721aeef048e0938da89232f3cbe6312705e33d&amp;scene=21#wechat_redirect" rel="nofollow">maya2020</a></td> <td></td> <td></td></tr> <tr><td><strong>C4D</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205446&amp;idx=4&amp;sn=1c0df56ae99880d2c1172b8304f4f25f&amp;chksm=8ee14deab996c4fcc607b856e11ae98c12991bffa2caa8395f0d46637a825a239f8e87304325&amp;scene=21#wechat_redirect" rel="nofollow">R14</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204846&amp;idx=2&amp;sn=0ef5a1a3e2726072106048fd47e742a3&amp;chksm=8ee14a42b996c35433335a22674a012287b13a429dfab1c12dd555808314e56f1596fb24e16d&amp;scene=21#wechat_redirect" rel="nofollow">R15</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202187&amp;idx=4&amp;sn=81cbaccf3af650b73940b26fd293338b&amp;chksm=8ee140a7b996c9b1f549493b5b9fe6be5c565aa8130c6baf50a39adcf45bd077336a353e87ec&amp;scene=21#wechat_redirect" rel="nofollow">R16</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202187&amp;idx=3&amp;sn=feddb6456b1efa0ed4b8d4be4db7de52&amp;chksm=8ee140a7b996c9b11b7b8fcfc757b3b7c6bad0bde852d705a150b16bef96fec93a0fa2c547c1&amp;scene=21#wechat_redirect" rel="nofollow">R17</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202187&amp;idx=2&amp;sn=1cd9706806451d664aa28e511a2db485&amp;chksm=8ee140a7b996c9b1549704effcc44658f5755a00a45028d894dcacc272f6b4b1b6040f775766&amp;scene=21#wechat_redirect" rel="nofollow">R18</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204846&amp;idx=3&amp;sn=56e707c7bc5ffa79d9c7bf51e5958f57&amp;chksm=8ee14a42b996c35441339c6cd5c8159db006a4c8d41f40235ed29caa6008205b3a23610fdb46&amp;scene=21#wechat_redirect" rel="nofollow">R19</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203008&amp;idx=3&amp;sn=65e8eeeb1e12e8314ca7f9fc1ab87ab6&amp;chksm=8ee1436cb996ca7af775fb7288ae819198f7c5cf94f0011a356bd41af29107da8cf94e81c066&amp;scene=21#wechat_redirect" rel="nofollow">R20</a></td> <td></td> <td></td></tr> <tr><td><strong>Audition</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204846&amp;idx=4&amp;sn=cc0fdea3ea956a766beb0c47f7956600&amp;chksm=8ee14a42b996c35408abeecf8fa4f41e51ddbfeafc2a20d5b5ce6fdc5eca1cfaf4b2ed4eb4d7&amp;scene=21#wechat_redirect" rel="nofollow">Au cs6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204846&amp;idx=5&amp;sn=2ec0feda6501bddec27599546f078370&amp;chksm=8ee14a42b996c354d8c9ed1a1862b29f44c7a9624bc14a6ac8cfec31c2b0f86fe1a41a45ded7&amp;scene=21#wechat_redirect" rel="nofollow">Au cc2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204846&amp;idx=6&amp;sn=cccf459b6ebf0ca8b9f1691b6ef4aef5&amp;chksm=8ee14a42b996c35426b574efcd94565da6c187a501ea932ba967d1097abaaffcbb664a3be1d9&amp;scene=21#wechat_redirect" rel="nofollow">Au cc2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204846&amp;idx=7&amp;sn=ebc33bdd676409705a6f5c6ce71cd7fe&amp;chksm=8ee14a42b996c35403c2522537e998acf708c2b7b68877ac6fb4031c7c6da39c2224349bb468&amp;scene=21#wechat_redirect" rel="nofollow">Au cc2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200846&amp;idx=5&amp;sn=3722cbab9b221e5eb0f1f28116316153&amp;chksm=8ee17be2b996f2f42dd607b3a5a43ee24739c75dc188c16ea2d083301ba9813cd64860fb4f49&amp;scene=21#wechat_redirect" rel="nofollow">Au cc2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203469&amp;idx=1&amp;sn=4f1a2dad18ae24f1b7f574d6be68b1bb&amp;chksm=8ee145a1b996ccb711f96599e7449bbc9c1820b6a0c9e9c5ed67d37dee06a40e7b228cbf31d2&amp;scene=21#wechat_redirect" rel="nofollow">Au 2020</a></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><strong>⑥建筑设计</strong></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>3D MAX</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204036&amp;idx=1&amp;sn=79105f789ae9b4cc49e406406681961c&amp;chksm=8ee14768b996ce7ed0d6765166964aa347bfdb4d78bf9cfc92cbdb77744e51d6e8782a0adbe3&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2009</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=8&amp;sn=fe9238b9421f0974bb45ee777c44b2d7&amp;chksm=8ee16851b996e147a60ae970c451827e5a2e7d66f55fe4c4f4f8a6996f37e8c3c1358721722f&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2010</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=7&amp;sn=72ed0d8cb164973f9830e971242f1e57&amp;chksm=8ee16851b996e1478f5b9f49c727a36dbde57f01799f35270be8005a89f48330a0cf3ad3fd9a&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2011</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=6&amp;sn=d03935a4ad80da4d253aa58a6f1b15ad&amp;chksm=8ee16851b996e14709f70bd01fd960838bcb443605248226c6d6c04bc40a4f79e84a63f1ca63&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199059&amp;idx=5&amp;sn=56d2e6af41af40bf5746245c4713fef9&amp;chksm=8ee174ffb996fde9497ed66d91d1babce320a0d37089ce02cba1e6bfcec7e1e03db194ddf54d&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202654&amp;idx=2&amp;sn=cb7d4c852a1f00f20d5dfab6b149de9a&amp;chksm=8ee142f2b996cbe422a7d6f460c37f4b1e8eec0ed42885c73a55034fee255ed466f203aeafce&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650196157&amp;idx=3&amp;sn=63dcbce542c51bb2dc14d0766b1ed660&amp;chksm=8ee16851b996e147d898a1f1376f0427a2e26232d40d017c25a2332cf2aad9574f68f931712a&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202121&amp;idx=1&amp;sn=a86710a05f020232cfef9ae5211023ea&amp;chksm=8ee140e5b996c9f3d6a072641607caca5786d66fe99500d962e95c5e586816991306bd28a7f2&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199059&amp;idx=1&amp;sn=272d176a457c98cb96a59aa2e16bbe57&amp;chksm=8ee174ffb996fde9962151e4a72c289e1e8b6abd7c798af3531066d3497986d8786e71a04147&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203989&amp;idx=2&amp;sn=ee56563326f6b607bcf6150705f36788&amp;chksm=8ee147b9b996ceafb75bb01e261219e491dcf1df3b8425ac643fc7f251795daf6b5e7bb119e3&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202157&amp;idx=6&amp;sn=b40cf6a0ee6099709a2e562e6cd46dbe&amp;chksm=8ee140c1b996c9d78462ccc15403c167c4e80f376acb5e768a3523a0d628f4a5b3946bda00a0&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203008&amp;idx=5&amp;sn=39d54e0be1a134116b532163b616ffd8&amp;chksm=8ee1436cb996ca7a301fc0e4b05f4b8bcf76219bf3d4494033b3989a56d4ab7f2963bcc25210&amp;scene=21#wechat_redirect" rel="nofollow">3dmax2020</a></td></tr> <tr><td><strong>Sketchup</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=6&amp;sn=0c4fb42a61ddf699ca42edc85e34028c&amp;chksm=8ee14c12b996c5045c49540c01791b62dec7f9714a57726f42d9ffc4c304d452be99a600263f&amp;scene=21#wechat_redirect" rel="nofollow">Su2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=5&amp;sn=95c7585dd4b182065e10625eceb0eeb7&amp;chksm=8ee14c12b996c504539ce2b8ff17d6087c940ea51e9d7e69a587725f40c9d050a3cbe96b86b7&amp;scene=21#wechat_redirect" rel="nofollow">Su2016‍‍</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=4&amp;sn=a980d3609063ef6878958e837d1ec6dd&amp;chksm=8ee14c12b996c50495d8acb55eb0f4c08f27d07dbd6b8759924e77f85a1d739ba29093722f08&amp;scene=21#wechat_redirect" rel="nofollow">Su2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=3&amp;sn=b600b7177c070e72f6cf3399cfbafd5d&amp;chksm=8ee14c12b996c50455954fe0d2959cf23245035adb70c1975573f896fd6cf30761d5546d2794&amp;scene=21#wechat_redirect" rel="nofollow">Su2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=2&amp;sn=7394d7564f8b2faceddef0cb17f5f04f&amp;chksm=8ee14c12b996c504d781006192065bd8ab7d68b96a1ba14f872951d61b358196da7c43eb718f&amp;scene=21#wechat_redirect" rel="nofollow">Su2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205438&amp;idx=1&amp;sn=39291198cdd0a79fe71d7f4d1217d891&amp;chksm=8ee14c12b996c50408048f2dff8c606ae3923744506e3530a7a85e2b34c45f3f64a469949350&amp;scene=21#wechat_redirect" rel="nofollow">Su2020</a></td></tr> <tr><td><strong>Revit （BIM）</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204846&amp;idx=8&amp;sn=3e3348823b6e0d448b9db9be2f0c6796&amp;chksm=8ee14a42b996c354f97515473b016be2929d4d89231b84d70377cdb40459ac84a27bff2bb5e6&amp;scene=21#wechat_redirect" rel="nofollow">Revit2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204951&amp;idx=1&amp;sn=55dc219c0b05eadbe48a297b320680c1&amp;chksm=8ee14bfbb996c2ed92bb723e975cc1a37b9da01312ada00b525e1c4772bb3297835d768d1ad0&amp;scene=21#wechat_redirect" rel="nofollow">Revit2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204951&amp;idx=2&amp;sn=ec1f82b3170deb6935908989d98d0e2e&amp;chksm=8ee14bfbb996c2ed8f84071747e7c5dde50c38d0f687f8503ea3457e312fd1cf9f1c97ba443d&amp;scene=21#wechat_redirect" rel="nofollow">Revit2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204951&amp;idx=3&amp;sn=4dfa0fee482a3848348a6d97592cd043&amp;chksm=8ee14bfbb996c2ed19c2e9bd0939f420c99970d08e13471edbe104a0c607f7ccba1d6be4d184&amp;scene=21#wechat_redirect" rel="nofollow">Revit2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203583&amp;idx=1&amp;sn=c9cbfa1a91b4b35790317aed5a0d2793&amp;chksm=8ee14553b996cc45f7d1c271b3cc09b4710a89192eeb870ba0a7eaa2d46a65f93d93b74ff655&amp;scene=21#wechat_redirect" rel="nofollow">Revit2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204951&amp;idx=4&amp;sn=adca99653607cfb8b5e9af3157f76735&amp;chksm=8ee14bfbb996c2edadad417b485b9cbf8632e56be94ffe31b002675b24784c82be1535579b20&amp;scene=21#wechat_redirect" rel="nofollow">Revit2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203978&amp;idx=1&amp;sn=7ae60813ee55f62aaada1f85c9a22e21&amp;chksm=8ee147a6b996ceb0a3973ecaf560e69db6028bf659bf39fe167608af448fd7765d4599ec31b2&amp;scene=21#wechat_redirect" rel="nofollow">Revit2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199505&amp;idx=1&amp;sn=e795777a1828f77ede6ec660f6e87052&amp;chksm=8ee1753db996fc2b0b8630c23c0f5f9dcc73a27dad0780f835747a0babdbbd4e86c5dae8a85c&amp;scene=21#wechat_redirect" rel="nofollow">Revit2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204185&amp;idx=1&amp;sn=fa0c3419d278c6eb1a723d4a048f57a4&amp;chksm=8ee148f5b996c1e373b232c9dde71aa137e3850fc576ded31eb87961565ef0570acb854f3165&amp;scene=21#wechat_redirect" rel="nofollow">Revit2020</a></td></tr> <tr><td><strong>Civil3D</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204951&amp;idx=5&amp;sn=9ca3b10cb20767cebc0d78ad77473f92&amp;chksm=8ee14bfbb996c2edc4b16071cdcf1f1eaa4352a4a9b56dd0b8a2b309fa3c9dafcab65d57f8a5&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2011</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204951&amp;idx=6&amp;sn=8b80244275cf762487add563d8b92748&amp;chksm=8ee14bfbb996c2ed3b944e10bdf839941569803ac949c986154291f533c171bfb87faf437e4f&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204951&amp;idx=7&amp;sn=71affe415615c84ebe1b5cd66dd9e6e3&amp;chksm=8ee14bfbb996c2edfc0560218c6a782c91495f1a32b044eb966d9934b03ab50b6de15244e0b1&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2013</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204951&amp;idx=8&amp;sn=7613b6efc0d2fdffcd3ef5f52e2e634c&amp;chksm=8ee14bfbb996c2ed38867642fdf807a780e4d732fb8536fde57997604eb1ce752f0f49cf45e7&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204977&amp;idx=1&amp;sn=95dba2e516bd322f4463b0dd613b3302&amp;chksm=8ee14bddb996c2cb294fd5bb65989a2e8fbc1c3d76d65ba7697a1e9b79a5420e50caa3e7c896&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204977&amp;idx=2&amp;sn=f721eff3739c7a16e359a2945805e87d&amp;chksm=8ee14bddb996c2cbc41adb44bbad5eef1e256600f4106c17d2f6237a48dc16086e777e72d7ad&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2016</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204977&amp;idx=3&amp;sn=92647d07d4d4c8c5c8d981959b8a3bee&amp;chksm=8ee14bddb996c2cbfa8905ca09520fe92dcc4b74a7661685b6c4f561b15bb77d15216121da0d&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204977&amp;idx=4&amp;sn=522dcf7cdb8fe8326e788b8df78c129e&amp;chksm=8ee14bddb996c2cb6ae71b9963f41a30c5ad01cdca650d4b17f02a299ea0dd9e16571b812748&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204274&amp;idx=2&amp;sn=fd6d2a7e8ebbb7e4e44503553a9f50dc&amp;chksm=8ee1489eb996c188b4b35385f7528cae4b4412624dedf91e6ee5875fb27cafe739f4765716f3&amp;scene=21#wechat_redirect" rel="nofollow">Civil3D2020</a></td></tr> <tr><td><strong>Navisworks</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204977&amp;idx=5&amp;sn=0b185b731dc72443b1c25bdcac3cb78f&amp;chksm=8ee14bddb996c2cb04618d475ca0a2610ec73c51372f224dc7f89e3494b21b3585ac0d3beac3&amp;scene=21#wechat_redirect" rel="nofollow">Navisworks2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204977&amp;idx=6&amp;sn=0a3c3693882bdddc22f93654aff611e6&amp;chksm=8ee14bddb996c2cb2ccb437bb549ccad0744286f716f3f6db928a628e8e920391bf545087603&amp;scene=21#wechat_redirect" rel="nofollow">Navisworks2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203740&amp;idx=2&amp;sn=c4a4578017ebc909fe97b77268d447aa&amp;chksm=8ee146b0b996cfa6b40b7c876fba728a499ed336b3bd4b02f66718b89aa3a2645942c3769052&amp;scene=21#wechat_redirect" rel="nofollow">Navisworks2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204977&amp;idx=7&amp;sn=5e8afa9edbe2028b814f9416d24319b2&amp;chksm=8ee14bddb996c2cbc7e571348459cfa1f620d12d09014362922e7f333c0f07ab8a90aac4dbd3&amp;scene=21#wechat_redirect" rel="nofollow">Navisworks2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203671&amp;idx=2&amp;sn=0c3c2f2972c47dccf17ff17602365830&amp;chksm=8ee146fbb996cfed756a09a0cb059580d4c07d83514f59ad069f8ee2e829a5464654f50b4ecf&amp;scene=21#wechat_redirect" rel="nofollow">Navisworks2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203645&amp;idx=6&amp;sn=358135b286992604bdacc04673866ae7&amp;chksm=8ee14511b996cc0732fdf97ccd29b794b7bcfddcb7e4110810cc4e4ad72e3067f51260482daa&amp;scene=21#wechat_redirect" rel="nofollow">Navisworks2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204977&amp;idx=8&amp;sn=25b3a2483d534a93cfbb8f5f438c7627&amp;chksm=8ee14bddb996c2cb0fc5ecda0541dc68f0c789d4b4361e03ba746923d1627797e33cc3f0ab45&amp;scene=21#wechat_redirect" rel="nofollow">Navisworks2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204258&amp;idx=1&amp;sn=f5d89c0accd58ccc4d448ba62a4b6008&amp;chksm=8ee1488eb996c198a85d636c873148f514e1401436b735198fa066439f69b79d6e56f7683d7b&amp;scene=21#wechat_redirect" rel="nofollow">Navisworks2019</a></td> <td></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>⑦网页设计</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>Dreamweaver</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203645&amp;idx=3&amp;sn=1f664960c529da06fbae845eb77529af&amp;chksm=8ee14511b996cc0770fae3141f07c9e76f0e24e359bba06be0ee16c6c7861455b41b385b33e8&amp;scene=21#wechat_redirect" rel="nofollow">DW cs5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203671&amp;idx=1&amp;sn=036aea754e437aab6489d124aa6fa3a2&amp;chksm=8ee146fbb996cfed6a87e5128d5a57581a2a3a90353ec97cb457f7aa97c55f4624333b22ce4c&amp;scene=21#wechat_redirect" rel="nofollow">DW cs6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203645&amp;idx=5&amp;sn=091a953094784b40aafa59b9960fd4af&amp;chksm=8ee14511b996cc074816b54588624645a65a2aec4d81b35f7f184949ab9b59d6ea614dcb6dd4&amp;scene=21#wechat_redirect" rel="nofollow">DW cc2014</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203645&amp;idx=4&amp;sn=b86f115606b5654e24b90a73a57e030e&amp;chksm=8ee14511b996cc07e09cdc71b87c6317a5bc55ef523dfc7f82f85b63a7b3482d18eb3dd102f4&amp;scene=21#wechat_redirect" rel="nofollow">DW cc2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203683&amp;idx=1&amp;sn=178d89d151f8f2c3bb186f3f0f11a09a&amp;chksm=8ee146cfb996cfd9298c4902af243c81485b7c9f02ab142446546dc690bc44fc6237e651348e&amp;scene=21#wechat_redirect" rel="nofollow">DW cc2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203671&amp;idx=6&amp;sn=d1978aec376a7c29838cabd44e652db0&amp;chksm=8ee146fbb996cfede00990ead3308fb0a433961e392a539cf95829f999a802304c2af452adac&amp;scene=21#wechat_redirect" rel="nofollow">DW cc2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203645&amp;idx=7&amp;sn=68490dbd6b5be8b9e7862698f110354a&amp;chksm=8ee14511b996cc07499648b8d43ca02a91858730187778dd97918f11fedc3e97a266a341daab&amp;scene=21#wechat_redirect" rel="nofollow">DW cc2019</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203671&amp;idx=3&amp;sn=87005fde98cff23581db855a44b26a1b&amp;chksm=8ee146fbb996cfeddec9a7e5f6baafb696d0bb7f72adf6c9ed1ca49cfe9e8f90ac4382ab37d4&amp;scene=21#wechat_redirect" rel="nofollow">DW 2020</a></td> <td></td></tr> <tr><td><strong>Flash</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205466&amp;idx=1&amp;sn=146a3b447a0df77a8df57c6f7e6b1956&amp;chksm=8ee14df6b996c4e07d747bfa449e336b7f486c14db6050e4ba3b1c81073e20072f17e201d743&amp;scene=21#wechat_redirect" rel="nofollow">FL cs5.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205008&amp;idx=4&amp;sn=837df78302f73ce04f4ecbab96a17ae9&amp;chksm=8ee14bbcb996c2aa8dea23e2646e003462f061fa625627c80210c8723fe5c510cc139781bbb7&amp;scene=21#wechat_redirect" rel="nofollow">FL cs6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205008&amp;idx=3&amp;sn=08b1802e9792965f140c5473dcc5c419&amp;chksm=8ee14bbcb996c2aa31f45473ec7b5654323b79fe54064b6399550a5f01d6a0486ee08de3d10f&amp;scene=21#wechat_redirect" rel="nofollow">FL cc2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205659&amp;idx=1&amp;sn=07f717c8ba1542404df07051a3cb3fdc&amp;chksm=8ee14d37b996c421700679251378a18da307fbb1347bc8c789f4a8e7b495cef7f4d6105a58ac&amp;scene=21#wechat_redirect" rel="nofollow">An cc2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205008&amp;idx=1&amp;sn=d7eea0578cc653b21934ddfe4214ec67&amp;chksm=8ee14bbcb996c2aa72fb385840d12f2fc20024c104bf8c8bdf11e9fe55cdb5d7c47ef736f759&amp;scene=21#wechat_redirect" rel="nofollow">An cc2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200846&amp;idx=6&amp;sn=a532ece259c97828a9dc6985aa3e5790&amp;chksm=8ee17be2b996f2f41b60e1de02de1cee2a8745e366e5c106bf08eb0b845bd316f681cf571a9b&amp;scene=21#wechat_redirect" rel="nofollow">An cc2019</a></td></tr> <tr><td>An 2020</td> <td></td> <td></td></tr> <tr><td><strong>XD</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204100&amp;idx=6&amp;sn=f4521ad170293328d6e42b88e25041ae&amp;chksm=8ee14728b996ce3e5c967fbee66a461c008bbce00fe0325b98415a88e24dd305cc6038aeaa87&amp;scene=21#wechat_redirect" rel="nofollow">XD v18.1</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204100&amp;idx=5&amp;sn=843ed01ba530fa2975261ae784b0522f&amp;chksm=8ee14728b996ce3efdcfac969cf7e6805b774a7da84e081fc88acb27012f8646a158969a1279&amp;scene=21#wechat_redirect" rel="nofollow">XD v20.2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204100&amp;idx=4&amp;sn=cae82044e800be88ea5dfbb7e9ba345e&amp;chksm=8ee14728b996ce3e1578f1558a848c038547355586d42e5b2af9513429621a30dc032b753a0e&amp;scene=21#wechat_redirect" rel="nofollow">XD v22.5</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204100&amp;idx=3&amp;sn=a376bd53237b69893c691a6abcf9f6e2&amp;chksm=8ee14728b996ce3e7cba2b414d1599c61079c9677d7fab1114c6f25bff76ea4acb3c5f51b270&amp;scene=21#wechat_redirect" rel="nofollow">XD v22.7</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204100&amp;idx=2&amp;sn=6bf329176eee5d31b72257cd02dcf3c3&amp;chksm=8ee14728b996ce3e4b2d210567c99c60bea7a47cf71c7e8a4c92a4d5d290d604702582c431ea&amp;scene=21#wechat_redirect" rel="nofollow">XD v24.4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204100&amp;idx=1&amp;sn=c1cca32562a4012b6c9f88bcde220d17&amp;chksm=8ee14728b996ce3e6a7c14f47f72b5f677aa5af8c839888638b5795a3bfebdba615f262810c9&amp;scene=21#wechat_redirect" rel="nofollow">XD v25.2</a></td></tr> <tr><td><strong>Axure RP</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200658&amp;idx=3&amp;sn=2bb8f656a0f87a079d29455934d0f50b&amp;chksm=8ee17abeb996f3a8dcc17da7d76963e31a5157266db3a765c9816d25ec7cac2381fe04855874&amp;scene=21#wechat_redirect" rel="nofollow">Axure RP 7.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203250&amp;idx=2&amp;sn=a57d132bbfb0c90c8fb05864ab5e96e0&amp;chksm=8ee1449eb996cd886d3bdbf92bfc04f7c34b531803a5b69b7b4966ec3029776d9c41c6df85e9&amp;scene=21#wechat_redirect" rel="nofollow">Axure RP 8.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203835&amp;idx=1&amp;sn=ebeb7d49796cca766b0759db0e15481e&amp;chksm=8ee14657b996cf4113313d739066f8ca149ac385f2724419d75beade1b80df0350f8975be36f&amp;scene=21#wechat_redirect" rel="nofollow">Axure RP 9.0</a></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>⑧屏幕录像</strong></mark></th> <th></th></tr></thead> <tbody><tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204146&amp;idx=1&amp;sn=1388d451330d296ccaa60b869af807e9&amp;chksm=8ee1471eb996ce086506b637f023fa1cc63ce4757bcb6c75c0138d52893964c971a1ba6ecffa&amp;scene=21#wechat_redirect" rel="nofollow">屏幕录像专家</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205477&amp;idx=2&amp;sn=2f9350e27bce62e00aedd39a05d42a3b&amp;chksm=8ee14dc9b996c4dfe5930434e29bdb94b13bc896e01ba45bf03c102fe3bb70b68bd31b63389a&amp;scene=21#wechat_redirect" rel="nofollow">Bandicam3.2</a></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>⑨开发编程</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203008&amp;idx=4&amp;sn=612a3689d2697ce32e3948b18fdd4f3d&amp;chksm=8ee1436cb996ca7ad4bd33ec5f1cdf3b7920a2c92af0636ddbc6b69b5f7961729cb8328b4778&amp;scene=21#wechat_redirect" rel="nofollow">VB6.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202790&amp;idx=7&amp;sn=6e799e46924589ed188e4096c1a43772&amp;chksm=8ee1424ab996cb5cc0407516c7f49dac063c8dff669750144a1a5d3eaa993485f9f88f7a768d&amp;scene=21#wechat_redirect" rel="nofollow">VC++6.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202174&amp;idx=8&amp;sn=1c2c60661180f20945576b9b183357c2&amp;chksm=8ee140d2b996c9c4b835f5bc8130d99fb81990b039b8cb8e51e24bd4b46867d6f70cff8a5af3&amp;scene=21#wechat_redirect" rel="nofollow">eclipse</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202202&amp;idx=8&amp;sn=7ba6065b6fff961326e68d782d83a47a&amp;chksm=8ee140b6b996c9a05a6513889e99f90638b6e30e0d5de4d1aa0eb77e1e1346b2bafa0a55ec7f&amp;scene=21#wechat_redirect" rel="nofollow">AndroidStudio</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202214&amp;idx=6&amp;sn=ac934e379fe5bfaa01cf202435066594&amp;chksm=8ee1408ab996c99c1fcd50f2e5a49a05dda9d9fa81959eef700793e4700993fb8e46712771c1&amp;scene=21#wechat_redirect" rel="nofollow">MyEclipse10</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202214&amp;idx=5&amp;sn=ca428d924c966df8f37993df73b223c6&amp;chksm=8ee1408ab996c99cadc8ecb88af6268a1c38f76bff7aeaf729ba1aaff17d1937acb91f5523dc&amp;scene=21#wechat_redirect" rel="nofollow">MyEclipse2017 </a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202019&amp;idx=2&amp;sn=c89228110974bc538473952be6716935&amp;chksm=8ee17f4fb996f659db33268e9e2fed25f5dc1aeeb2e41a563b8cba43a2d1c5d6487dc3a05cd5&amp;scene=21#wechat_redirect" rel="nofollow">Sublime Text3</a></td> <td></td> <td></td></tr> <tr><td><strong>Visual Studio</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205008&amp;idx=6&amp;sn=68784c38959c11df6adeaa9bbef908a6&amp;chksm=8ee14bbcb996c2aa204f1052fe5401f50d832914459c88720b6456b1ef9af1cd0eae888491b0&amp;scene=21#wechat_redirect" rel="nofollow">VS2008</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205008&amp;idx=7&amp;sn=fc8b70816b538a2b399a80ce4adc9e70&amp;chksm=8ee14bbcb996c2aa215e69a43228e3b583e5655eb5a63930dbdfd3fa370e7a9d17e695a86d5f&amp;scene=21#wechat_redirect" rel="nofollow">VS2010</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205008&amp;idx=8&amp;sn=e5b731bb9ff6ef07ea62e116672a9326&amp;chksm=8ee14bbcb996c2aaa5a056685f828bfff82ae521d0f2b9ffbe9a0c0335f5312e11b121187d3f&amp;scene=21#wechat_redirect" rel="nofollow">VS2012</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205009&amp;idx=2&amp;sn=286eaff768d9b794689250e54c1d77ff&amp;chksm=8ee14bbdb996c2abf9ae8cc854c2a540ff880c9e59dd177768bc164356b765e5dc932c546eb5&amp;scene=21#wechat_redirect" rel="nofollow">VS2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202255&amp;idx=7&amp;sn=c23d893a2f82f0dc71e4ef0f14cfe49f&amp;chksm=8ee14063b996c97546bf66e09f3d71a6e01e18a0d42f255599a48c5c314a9bcbf4f398a7f534&amp;scene=21#wechat_redirect" rel="nofollow">VS2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205009&amp;idx=1&amp;sn=d8586d87ee310eeef288c9f52db0762b&amp;chksm=8ee14bbdb996c2ab4ede6024a66ef200a53b0faf0800bb2d265435cd6865c16d851c97154cb8&amp;scene=21#wechat_redirect" rel="nofollow">VS2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204028&amp;idx=1&amp;sn=ab435c76bade67f4f2129037f6685713&amp;chksm=8ee14790b996ce8652bf27df0e783621a1c37e06f124719d4ce88fbf275f7066b60b949504ae&amp;scene=21#wechat_redirect" rel="nofollow">VS2019</a></td> <td></td> <td></td></tr> <tr><td><strong>JDK</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203009&amp;idx=3&amp;sn=313760820099e040f0109708a022f081&amp;chksm=8ee1436db996ca7b0916422351a898dc8b2c9259d4ddcec5a776348ecdd9fb0c0568c1b54619&amp;scene=21#wechat_redirect" rel="nofollow">jdk-8u221</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203009&amp;idx=2&amp;sn=6972b873c3c4490f8e094d97e1593baa&amp;chksm=8ee1436db996ca7b441229c41bf843f82d63ea6b62b977f0e283ce658dd9aadbca6f9c1c450c&amp;scene=21#wechat_redirect" rel="nofollow">jdk11.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203009&amp;idx=1&amp;sn=d7bbf21db9a994451c2e7908b95edd78&amp;chksm=8ee1436db996ca7b07c174ac50b594b8593b22ce91155e8cd8aba31029e3b8b0709a3c11ed97&amp;scene=21#wechat_redirect" rel="nofollow">jdk12.0</a></td></tr> <tr><td><strong>LabVIEW</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205659&amp;idx=2&amp;sn=0de3245808c9eee242cc3090fb1a2400&amp;chksm=8ee14d37b996c421f62003e1d3fd65d6e9582dac1d3666496540280ecaada712ed83e020c1a3&amp;scene=21#wechat_redirect" rel="nofollow">LabVIEW2013</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205009&amp;idx=4&amp;sn=fc17c9ce50605b0cebcf32fdbaea0dee&amp;chksm=8ee14bbdb996c2abc739cf721669166596fef71c9a0662e709f0c3d624f51c0e3fc815559675&amp;scene=21#wechat_redirect" rel="nofollow">LabVIEW2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205009&amp;idx=5&amp;sn=df064f8d00a160c58ad8c5f305fccffa&amp;chksm=8ee14bbdb996c2abaca2c9f6795f622071a8900c2e8ddf7e314e7b06005952f2144b8641fe9a&amp;scene=21#wechat_redirect" rel="nofollow">LabVIEW2015</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205009&amp;idx=6&amp;sn=e039059bba05ff6a855f95fcae6c2fc6&amp;chksm=8ee14bbdb996c2abdbf8dfb623491b143589f1411dcae7ae70d0fb72cbcbf24be9653aee7d4d&amp;scene=21#wechat_redirect" rel="nofollow">LabVIEW2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205009&amp;idx=7&amp;sn=ead138b5dc85bcb6ad6a5f6a0aa92b77&amp;chksm=8ee14bbdb996c2ab143f02d6cf05b2bebe3a7dc0931d497960f4915f7445e0b2703911968328&amp;scene=21#wechat_redirect" rel="nofollow">LabVIEW2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205009&amp;idx=8&amp;sn=6f3ee3c4d3a30f372769cf087860f3f1&amp;chksm=8ee14bbdb996c2ab39124e8a725e3c6d09a2d0dbabf5862a0d6cb2772189930fd7cd90311932&amp;scene=21#wechat_redirect" rel="nofollow">LabVIEW2018</a></td></tr> <tr><td><strong>Keil</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200639&amp;idx=6&amp;sn=7da34475f089b396c855aacd528c349a&amp;chksm=8ee17ad3b996f3c5e902dd1a272f8f15c0b0cf4ec3233b8807b3c93c9b42aebc76d442251725&amp;scene=21#wechat_redirect" rel="nofollow">Keil2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200639&amp;idx=5&amp;sn=ab41deb604705a15e357b0e6a0761add&amp;chksm=8ee17ad3b996f3c555f07c4c8041cbab2ccdb07a2cad9039677873c2fd3bce8953067cc1f382&amp;scene=21#wechat_redirect" rel="nofollow">Keil3</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200639&amp;idx=4&amp;sn=990cdf887055eaee385101c9649b8b97&amp;chksm=8ee17ad3b996f3c52cd4973d0d0236d557defad2d02b109b2cf50b3f68e86d4016514d73bde5&amp;scene=21#wechat_redirect" rel="nofollow">Keil4</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200639&amp;idx=3&amp;sn=d3f4020a3e148b4647480b14307500b5&amp;chksm=8ee17ad3b996f3c5b1b720a6c8a76d5dcfb87a9a90200e535299356933ff4917741fe17aaf6f&amp;scene=21#wechat_redirect" rel="nofollow">Keil4 MDK版</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202449&amp;idx=2&amp;sn=7c131670d19bf9550702536f000229e9&amp;chksm=8ee141bdb996c8abe2c269b6056fda3a0634609f5bba1e446d6db20ef670069ec162bdc1dfea&amp;scene=21#wechat_redirect" rel="nofollow">Keil5 MDK版</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204296&amp;idx=3&amp;sn=cba045df8928a65934aa8f4cddfaf8e1&amp;chksm=8ee14864b996c172979f5bce1684fb4142a4659a249fd54edcbcfa623c68f1a88afe3bab5e62&amp;scene=21#wechat_redirect" rel="nofollow">Keil5</a></td></tr> <tr><td><strong>PyCharm</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=1&amp;sn=120142769249776bef49f1d2ab20ec0a&amp;chksm=8ee14b82b996c294d683e4f308599218a2e8c14665b7f96b2554ece729729d0eb510204f464a&amp;scene=21#wechat_redirect" rel="nofollow">PyCharm3.4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=2&amp;sn=ec9bbd74434e6e23cc0026f0cbe0cca8&amp;chksm=8ee14b82b996c294fbc074102a5431e7b51a6e348eaf321dd7a0700fbc1b45cdfe8a63bd8917&amp;scene=21#wechat_redirect" rel="nofollow">PyCharm4.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=3&amp;sn=1006e60519a4d07b0f64fee9c3cb340e&amp;chksm=8ee14b82b996c294830d6813d53a26fda419176d7c50297b52e244bc65145cf06b400faa77bd&amp;scene=21#wechat_redirect" rel="nofollow">PyCharm4.5</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205477&amp;idx=1&amp;sn=a6603069e1d5359939403b7bc258f44b&amp;chksm=8ee14dc9b996c4dfbb26f37339ef6067fa5077b25288e79ebf3c32f7eb90620064fbf212e1af&amp;scene=21#wechat_redirect" rel="nofollow">PyCharm5.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=4&amp;sn=c7977b3397de822b35dc4c0b4ab3992c&amp;chksm=8ee14b82b996c29495fe013495cd6db1f3ac08acebea3f7e347283bc3a4d2aa1c08c16f972ca&amp;scene=21#wechat_redirect" rel="nofollow">PyCharm2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203947&amp;idx=4&amp;sn=ab04428bcd988eca50b40f422f839451&amp;chksm=8ee147c7b996ced1e2f5b4df89ca4e569059e43a1c357a90b65395936ad98f92a42c3649cab4&amp;scene=21#wechat_redirect" rel="nofollow">PyCharm2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204003&amp;idx=2&amp;sn=87aa01cc963bf05d0cbff2e7b4ae2e5f&amp;chksm=8ee1478fb996ce99cc4d840d4285ec15a29f90532daa0e88012dd8df9041800ee76acb273283&amp;scene=21#wechat_redirect" rel="nofollow">2019中文版</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204028&amp;idx=3&amp;sn=7d7f048e5a61ec2a874bebbbdbb1cee3&amp;chksm=8ee14790b996ce863d9e105857df37bd20de1ea65f16bb9bcfd2b689c9d5f22facfc6ccab8ef&amp;scene=21#wechat_redirect" rel="nofollow">2019英文版</a></td> <td></td></tr> <tr><td><strong>Python</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=5&amp;sn=29925d9a6e8d84063d611ee6553adf74&amp;chksm=8ee14b82b996c294c47752f7beaf8f7d0b50402a6e9be11ecb741fc0c4d123c21a03d32d38ee&amp;scene=21#wechat_redirect" rel="nofollow">Python2.7.6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=6&amp;sn=364eff8fcbbc6890b1ac1036cf76dd77&amp;chksm=8ee14b82b996c2940b2227295171b56899a961d6a423386c834651d925ad99b5c9aefea5cd99&amp;scene=21#wechat_redirect" rel="nofollow">Python2.7.10</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=7&amp;sn=2a6e95cf15bd9795d6f1001f4adea8c6&amp;chksm=8ee14b82b996c294c4951d80a8d597164e98c511496daede5b6bb4a843e6670fc6b23ff8c5c2&amp;scene=21#wechat_redirect" rel="nofollow">Python2.7.15</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=8&amp;sn=cf1ec699a1fe5033970470b6a8dc174f&amp;chksm=8ee14b82b996c29424b648b372a3a997eec1ce6eab921bbe0ce9d4b63b218c22b956a49fc21d&amp;scene=21#wechat_redirect" rel="nofollow">Python3.5.2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=1&amp;sn=de2a113a637478601a1d8ddb41485f19&amp;chksm=8ee14b60b996c276abf179d3b130e5867f5771b5d5bdc75297dd691669b9696b1bf69e534885&amp;scene=21#wechat_redirect" rel="nofollow">Python3.6.4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=2&amp;sn=bdaad99351a0fe62ccb48cff8ab57aa8&amp;chksm=8ee14b60b996c2766f084d6cdf365e1eeb28ab3ac54dfe0961aec5ca2c934e2bb1030108bad2&amp;scene=21#wechat_redirect" rel="nofollow">Python3.6.6</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203367&amp;idx=1&amp;sn=6272ddb65e17292823c0e1ef23e480ed&amp;chksm=8ee1440bb996cd1dcf7f84726dbb6239a3e9a5c1d3e6b5cef38f364e4dca81226c75c74abf8a&amp;scene=21#wechat_redirect" rel="nofollow">Python3.7.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204120&amp;idx=3&amp;sn=bd409fbad637f46a166e7d4eb8a03961&amp;chksm=8ee14734b996ce220b8e29d273003c9062057259cb1d253d1a460ac9ea8ad98697e8786fcd83&amp;scene=21#wechat_redirect" rel="nofollow">Python3.8.2</a></td> <td></td></tr> <tr><td><strong>Anaconda</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204120&amp;idx=2&amp;sn=2c1c56d49f85dcf46376524ad7ad9386&amp;chksm=8ee14734b996ce2238f3b458975a31da7658cadde6962e007b81dfe583406b9e7ff3f1c30d0f&amp;scene=21#wechat_redirect" rel="nofollow">Anaconda2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204120&amp;idx=1&amp;sn=6fe6a2f3cdf9b75148803735915d8be1&amp;chksm=8ee14734b996ce229b418adc42c230b93ace11d20871cdd5280d7a9c1b05100f3fbceb3aebea&amp;scene=21#wechat_redirect" rel="nofollow">Anaconda3</a></td> <td></td></tr> <tr><td><strong>Unity3D</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=3&amp;sn=f5b064ecd20b0256f8aa58ae0fd03de1&amp;chksm=8ee14b60b996c2767b21dc340bec9be5431594566f593968fa8afc8327a8c4c86e1fa629daa1&amp;scene=21#wechat_redirect" rel="nofollow">Unity3D4.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=4&amp;sn=7e271720b8bf28a9d71ef1e5f68ec7fe&amp;chksm=8ee14b60b996c276de8ba59f128617e7de488c99d438c6c6e29b1e4958b243730bd7ab51cb92&amp;scene=21#wechat_redirect" rel="nofollow">Unity3D5.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205466&amp;idx=2&amp;sn=41e7100587ce6a4ed0f876d3b78134c0&amp;chksm=8ee14df6b996c4e06f0c46971a25e1fe229233d66b787599f7a3ace703a2acc6deff8ecbb799&amp;scene=21#wechat_redirect" rel="nofollow">Unity3D2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204299&amp;idx=3&amp;sn=539f2298b9b9e25322d7c37d4223634f&amp;chksm=8ee14867b996c1711a272d853be61e1810e3d71da7b56fa8eb82ea76e88fbc7833c2f4b4340a&amp;scene=21#wechat_redirect" rel="nofollow">Unity3D2019</a></td> <td></td> <td></td></tr> <tr><td><strong>IDEA</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=6&amp;sn=df73b024dfa5100ec37ed683884090ba&amp;chksm=8ee14b60b996c276b132d94b9c20774b71fd397f3caa1d8821be4fb22f896d6e758fff8c3aa9&amp;scene=21#wechat_redirect" rel="nofollow">IDEA13</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=7&amp;sn=b06cc768277eadc50cd400926eda664d&amp;chksm=8ee14b60b996c276fae8f214cb3c08e35e20bcd1a92aecabbfad8c1487310d6f3c0b7bbee27f&amp;scene=21#wechat_redirect" rel="nofollow">IDEA14</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=8&amp;sn=15a65a50dbb2e2b1131c54a85def2009&amp;chksm=8ee14b60b996c27638d743260ee99425f34c1da5e87d8e7dd6a2398c60bac635f0e0b62ab10c&amp;scene=21#wechat_redirect" rel="nofollow">IDEA15</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205082&amp;idx=3&amp;sn=ec059be34b82eecb3085147aad771e03&amp;chksm=8ee14b76b996c2602824d679c7cb6fe44815c673a43ece9ca164b658e9c50045bd94121e1949&amp;scene=21#wechat_redirect" rel="nofollow">IDEA2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205082&amp;idx=1&amp;sn=02d82522a30c6d38cb010f7a1b3132ee&amp;chksm=8ee14b76b996c26001a3815560e2e1dd7d219a8c8701633d5cb44145516f1cdc63045c89fe4f&amp;scene=21#wechat_redirect" rel="nofollow">IDEA2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205082&amp;idx=2&amp;sn=3fc34f059bacdc316e5017186f014481&amp;chksm=8ee14b76b996c260ecc87fa302eaa850b90b7ed038246830e952347a6e429a865b564e1aed29&amp;scene=21#wechat_redirect" rel="nofollow">IDEA2018</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204003&amp;idx=1&amp;sn=2c5f43152c958f2fb68b1196686cb725&amp;chksm=8ee1478fb996ce992102931f8294b76d6138af02e3878ecb0413faf0ed7701f88e8ce285ec75&amp;scene=21#wechat_redirect" rel="nofollow">2019中文版</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204028&amp;idx=2&amp;sn=a0047454077716ae324fca3f1b31887c&amp;chksm=8ee14790b996ce8652eeea16d0aa76adee4cbba88e69c6989abbfeff4dac5ae7c9761aeffe7e&amp;scene=21#wechat_redirect" rel="nofollow">2019英文版</a></td> <td></td></tr> <tr><td><strong>WebStorm</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205494&amp;idx=2&amp;sn=e50016ddece3d7014c09508e98ce19ab&amp;chksm=8ee14ddab996c4cc43b13d97aef10ba1f5e1ed743828d9c872d97cb6dd6859e639e46d322459&amp;scene=21#wechat_redirect" rel="nofollow">WebStorm8.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205344&amp;idx=1&amp;sn=331b3a34cec2ed405a361c9a671c0d0f&amp;chksm=8ee14c4cb996c55a174bf2f149455f125473048ec84abc687e81deee9d04153183980bada791&amp;scene=21#wechat_redirect" rel="nofollow">WebStorm9.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204099&amp;idx=6&amp;sn=9e0aec9e35575ec2481ed7a947844ec7&amp;chksm=8ee1472fb996ce39df0bf0d229c0ec09d5a697c1d5e8a8a78e862c6c8617b5816bbbc41431ad&amp;scene=21#wechat_redirect" rel="nofollow">WebStorm10.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204099&amp;idx=5&amp;sn=4ede37fbceb73871c983bd9d277bb1b8&amp;chksm=8ee1472fb996ce3904b935f0735f8705e363def1291db3fe54789963d389f48d9b3d8c10bc4a&amp;scene=21#wechat_redirect" rel="nofollow">WebStorm11.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204099&amp;idx=4&amp;sn=cf73bb8c8734b222d9f2f1a192d8e4bf&amp;chksm=8ee1472fb996ce3910878f068ae455ef8f167cdfa297db249e9772202fdf23a948c68869a16a&amp;scene=21#wechat_redirect" rel="nofollow">WebStorm2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204099&amp;idx=3&amp;sn=effd935877d7668ede51543154cfb8fd&amp;chksm=8ee1472fb996ce396e6c35dc5bca37e731adad693fde2dd4d2abdb84b1929367e23c0d704d93&amp;scene=21#wechat_redirect" rel="nofollow">WebStorm2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204099&amp;idx=2&amp;sn=429762e990f5b4998db0f5537f400cc2&amp;chksm=8ee1472fb996ce39a519e4033a12bae800f67ad000b32bedff8ac71ecd29d43689e9624a5ea4&amp;scene=21#wechat_redirect" rel="nofollow">WebStorm2018</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204099&amp;idx=1&amp;sn=053cf4bf9d98ff9e25b169a3c88ee870&amp;chksm=8ee1472fb996ce39fb80c0fb5c568ebc8157405c9e7aa2ac6bf996acc38cafed27f7bee7ffe8&amp;scene=21#wechat_redirect" rel="nofollow">WebStorm2019</a></td> <td></td></tr> <tr><td><strong>Quartus</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202897&amp;idx=7&amp;sn=f2da6419b13c06e56cab8e75165aafd1&amp;chksm=8ee143fdb996caeb6b0988d4adce687419a11418ae0ff37a6a5a8d133942471a188d8d7aafd2&amp;scene=21#wechat_redirect" rel="nofollow">Quartus9.1</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202897&amp;idx=6&amp;sn=12771acbf003e65857ca6c7e9758ff9a&amp;chksm=8ee143fdb996caeba7dda67290ee3a2ea457eb2b90270c212d23d740fe5b5ff89b9ab633d66e&amp;scene=21#wechat_redirect" rel="nofollow">Quartus10.1</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202897&amp;idx=5&amp;sn=3f29cdbb97f72fd4f6c4b134784a2bee&amp;chksm=8ee143fdb996caebf27d007c36e1ef6663997914257316ccd06eb0c75ab2eb7fbe21936f28be&amp;scene=21#wechat_redirect" rel="nofollow">Quartus11.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202897&amp;idx=4&amp;sn=65c950d2d35428aef3daf14710dd2665&amp;chksm=8ee143fdb996caebc6b1839200cbb2b100cb5d820523a0d10bcfe4498a2bb4eb93d35175f5fc&amp;scene=21#wechat_redirect" rel="nofollow">Quartus12.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202897&amp;idx=3&amp;sn=9b6992e716f3a7186a7a7e4fa6b10640&amp;chksm=8ee143fdb996caeb7b56d04bf9612e872da070be9be7c2917283d62e2bfcd6475ca18144beee&amp;scene=21#wechat_redirect" rel="nofollow">Quartus13.1</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202897&amp;idx=2&amp;sn=baad345c0cecfd636d8ad783f570231f&amp;chksm=8ee143fdb996caeb600f2107276d504969c143684b07f9e5bc7cd4e5d716b84a560717781eca&amp;scene=21#wechat_redirect" rel="nofollow">Quartus14.1</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202897&amp;idx=1&amp;sn=afc58cd413776443717ba78522176e26&amp;chksm=8ee143fdb996caeb30b45067c625d8cc38bd881464d048814732ec4f6a1a00c7f1858c000586&amp;scene=21#wechat_redirect" rel="nofollow">Quartus15.0</a></td> <td></td> <td></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>⑩电子绘图</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>Altium Designer</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205318&amp;idx=8&amp;sn=1e5d2a327c665a284d67649bd0d6448f&amp;chksm=8ee14c6ab996c57c78f685c95a4d8c8e7f98dfac4b459ffc4b26f194b415ec2dd49042bfebed&amp;scene=21#wechat_redirect" rel="nofollow">AD09</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205318&amp;idx=7&amp;sn=bfd2c07da2d62977476ed8c8efd3a245&amp;chksm=8ee14c6ab996c57c8f0814c33cb8610d80bb377b1c7d3f649f95632f627d9e5349df9b976975&amp;scene=21#wechat_redirect" rel="nofollow">AD10</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205318&amp;idx=6&amp;sn=ff5b594b2b4a74fbf7a1cc9948371c6c&amp;chksm=8ee14c6ab996c57ce1cd8a7ca21ae7ea55643b368c22194478dd8971b0f50b78887864bd8422&amp;scene=21#wechat_redirect" rel="nofollow">AD13</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205318&amp;idx=5&amp;sn=3f993a5cd4f363e87310ee87586fc521&amp;chksm=8ee14c6ab996c57cae60a8c5b6f68b1db06bce4ec9fecc86b844d8d43be51bd201fabdb0da26&amp;scene=21#wechat_redirect" rel="nofollow">AD14</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205318&amp;idx=4&amp;sn=48347884f35ff8fd78d872351112e21c&amp;chksm=8ee14c6ab996c57c65746ad6fd4f5dfaea1bb9563fb20a002a1f4338053ea0b3e76465294bc4&amp;scene=21#wechat_redirect" rel="nofollow">AD15</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205318&amp;idx=3&amp;sn=73207cc73b202e2792fd664abd25fc46&amp;chksm=8ee14c6ab996c57c03621fb095fcbf148e7954a8de0fafe908e3602bb85ee953ae9df298b477&amp;scene=21#wechat_redirect" rel="nofollow">AD16</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205318&amp;idx=2&amp;sn=acbf24821c1aff9207e9782f071ab758&amp;chksm=8ee14c6ab996c57c798133093f41f274670d0d5f42c0a5f9a54448836445b4d6412a963e2d77&amp;scene=21#wechat_redirect" rel="nofollow">AD17</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205318&amp;idx=1&amp;sn=4cb2417d43cf56792558419ea61a7507&amp;chksm=8ee14c6ab996c57cbf46ab932fbde2a21f7809cff54aece655f1a0b61ccce11e6789a6b90d25&amp;scene=21#wechat_redirect" rel="nofollow">AD18</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202563&amp;idx=8&amp;sn=00f54cc41f8232db01982a22e3b729a2&amp;chksm=8ee1412fb996c839543c2d9d25e4597b98ae1f810d3b45d5b01bba4c037daf65281e90bc030e&amp;scene=21#wechat_redirect" rel="nofollow">AD19</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204073&amp;idx=1&amp;sn=84f258d7954d6e79f721980fb03f5da2&amp;chksm=8ee14745b996ce535708b4035b1bda4cdabb9de2233b237e580b9c08afb8c4e8f49cea975762&amp;scene=21#wechat_redirect" rel="nofollow">AD20</a></td> <td></td> <td></td></tr> <tr><td><strong>Multisim</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205082&amp;idx=4&amp;sn=0b06cdec16be1c34fbeea188a1415814&amp;chksm=8ee14b76b996c2609661b1e187ec10fd31e8720858830a82f432fbdfb3fc64978e2725b091d8&amp;scene=21#wechat_redirect" rel="nofollow">Multisim10.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205082&amp;idx=5&amp;sn=cf0be1f0c33ae70d42f9b498928bd859&amp;chksm=8ee14b76b996c260cc1373278a98c298ddbb78ae7afe84ab4095392c31cd8628d315ab333618&amp;scene=21#wechat_redirect" rel="nofollow">Multisim11.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205082&amp;idx=6&amp;sn=b278080e969ad8757828c4ced6fea3fa&amp;chksm=8ee14b76b996c26003f5a48dbf4b0befc7b1397816dbd2e98de1d2748f7f96c8421419ffc922&amp;scene=21#wechat_redirect" rel="nofollow">Multisim12.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205082&amp;idx=7&amp;sn=4dda18f0916f8a50c08bb60e3c2ba8e2&amp;chksm=8ee14b76b996c26045cfb90f828097b00592b44aff52dfe33403fbb8163f9a764907b87ea5ae&amp;scene=21#wechat_redirect" rel="nofollow">Multisim13.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202563&amp;idx=3&amp;sn=53ea8cfd957f6e5db86fc7c40e8a4f74&amp;chksm=8ee1412fb996c83940854ed302aff973c6cd2ec2360c89d2c5967eea200e841500dd1e6c97e2&amp;scene=21#wechat_redirect" rel="nofollow">Multisim14.0</a></td> <td></td></tr> <tr><td><strong>Proteus</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202255&amp;idx=5&amp;sn=4dc5fa17aefd4af568ee3346538b0f40&amp;chksm=8ee14063b996c97519038664c517fa2c7f239987f59029feaa0ccef476c6942531aed9236d2c&amp;scene=21#wechat_redirect" rel="nofollow">Proteus7.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204156&amp;idx=3&amp;sn=92d4f7c5629879c63b925271f9b4b166&amp;chksm=8ee14710b996ce06206501739992d776650ff225e9d86808d419e325a14028377bf2bac55919&amp;scene=21#wechat_redirect" rel="nofollow">Proteus7.8</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205082&amp;idx=8&amp;sn=cf47103d79d8a6fefc03a4381f6fbfb1&amp;chksm=8ee14b76b996c2606d8d7d29e45f229e0f159e72992a7e4aee0d668b5c5eadfb8d23eb35f0fa&amp;scene=21#wechat_redirect" rel="nofollow">Proteus8.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205240&amp;idx=1&amp;sn=28ec9ab097dc915c74fa96829c670ee8&amp;chksm=8ee14cd4b996c5c2c3cb907af0c3c9362830e5ae228307811205825fbe02ac5932a303165dc8&amp;scene=21#wechat_redirect" rel="nofollow">Proteus8.4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202255&amp;idx=4&amp;sn=4b69880130f877019546dd8578e7f6e8&amp;chksm=8ee14063b996c97511a89e2e3aa53a11499a4297f41171be87d9728e0c6d1e8bb05b7b4f5f56&amp;scene=21#wechat_redirect" rel="nofollow">Proteus8.6</a></td> <td></td></tr> <tr><td><strong>Eplan</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205346&amp;idx=5&amp;sn=5fc4460dd2f9690aeea8d60bee55b75f&amp;chksm=8ee14c4eb996c5589e6bc529f0b1eea9a28c730fc80c70799d57f8e7096b2f3a629b6d256627&amp;scene=21#wechat_redirect" rel="nofollow">eplan2.3</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205346&amp;idx=4&amp;sn=9d1c44825fd81f5312e2d5edc95d83f1&amp;chksm=8ee14c4eb996c5581ebd1a78e24ed53f91a158331b43d41c9844a3ca5fd793744ad16219e9f0&amp;scene=21#wechat_redirect" rel="nofollow">eplan2.4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205346&amp;idx=3&amp;sn=1fab4ff722d04a4614cfb3853587d639&amp;chksm=8ee14c4eb996c558df7af77e0230ea709464570b32c107e900d9cfcb8bc0fbcef6c2af5e6092&amp;scene=21#wechat_redirect" rel="nofollow">eplan2.5</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205346&amp;idx=2&amp;sn=7a55c9bd41c1946ed111ba5124f8a1e6&amp;chksm=8ee14c4eb996c558f1a27f1bcd9122b0c1d5c56e4b9eb8af66988e5e3ce238abcf9d4a3bb546&amp;scene=21#wechat_redirect" rel="nofollow">eplan2.6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205346&amp;idx=1&amp;sn=c651ca8a17e61855cf60ea0af236c160&amp;chksm=8ee14c4eb996c558b798653728cc719a2006488d425e25fa3beea6a375a68d60b77726499bcc&amp;scene=21#wechat_redirect" rel="nofollow">eplan2.7</a></td> <td></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>⑪数据分析</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>SQL Server</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205346&amp;idx=6&amp;sn=09fcd12963829104081ee819b90a88f2&amp;chksm=8ee14c4eb996c558088378748451499d2dad1368f6cb265f45b4e4894f773b9f05e0e5796d6f&amp;scene=21#wechat_redirect" rel="nofollow">SQL 2000</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205346&amp;idx=7&amp;sn=ef8b20d692a2da661df10b7e831f7315&amp;chksm=8ee14c4eb996c558d5f4197bd83f4a76509933987049cbd914b0f13f387b77b533e392e01471&amp;scene=21#wechat_redirect" rel="nofollow">SQL 2005</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205377&amp;idx=6&amp;sn=eb900cf0d482cf6436b1a45230affbd7&amp;chksm=8ee14c2db996c53bdda59e5db9e56d84a0715bfb5c15e00152299a4703deceef5288f0a375b8&amp;scene=21#wechat_redirect" rel="nofollow">SQL 2008/R2</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205446&amp;idx=1&amp;sn=97c61e36d7f852ed53e8d7cecf3aa476&amp;chksm=8ee14deab996c4fc2288b6bf799813bad7b962fdc5d14ff5e2c61189743213884f77617a5e9e&amp;scene=21#wechat_redirect" rel="nofollow">SQL 2012</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205346&amp;idx=8&amp;sn=43f7ef20f66e1dc3a0df9237ba084c7a&amp;chksm=8ee14c4eb996c5584be2a86531af15e0a2783f2cad59b2f703378bac2aa83fd3999506d8c379&amp;scene=21#wechat_redirect" rel="nofollow">SQL 2014</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203906&amp;idx=1&amp;sn=62c6d674c7dacfe0e1a5b371d49f5db6&amp;chksm=8ee147eeb996cef822edb988d12a38b5c20e91bbf4af804b8ce9501b0e2bf040afc3afe950fb&amp;scene=21#wechat_redirect" rel="nofollow">SQL 2016</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204242&amp;idx=2&amp;sn=40eed5c9e7ad000d0037dd3abfe35499&amp;chksm=8ee148beb996c1a8f3be1d9ad788cd3db26dd6f565cbe6ccdb522f2c24467ed18c26c34481d5&amp;scene=21#wechat_redirect" rel="nofollow">SQL 2017</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204242&amp;idx=1&amp;sn=7f5f4fb1144749d5be590ab4d91073fb&amp;chksm=8ee148beb996c1a8f45358a3c10bb3ec642e73af27513b566b47ddcc923c67eafa0bf5f8babe&amp;scene=21#wechat_redirect" rel="nofollow">SQL 2019</a></td> <td></td></tr> <tr><td><strong>MySQL</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204139&amp;idx=5&amp;sn=8b51225739410aa4b6cc75da95ec5f52&amp;chksm=8ee14707b996ce11f8d885202c980e6c5f17d60974005e3b46493bf223939f635eb3f7eb8747&amp;scene=21#wechat_redirect" rel="nofollow">MySQL5.1</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204139&amp;idx=4&amp;sn=f0c3ab388775097271411d5deb102c56&amp;chksm=8ee14707b996ce116246764c2ada1737d1eb671c987ad2d6f2e79598c77988920b1bc96ea170&amp;scene=21#wechat_redirect" rel="nofollow">MySQL5.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204139&amp;idx=3&amp;sn=66d540529344b70903f85f9d4d673199&amp;chksm=8ee14707b996ce115d17d897763e874f99407c977641ebdd9dfc856d8171be2ba5d59176cb5f&amp;scene=21#wechat_redirect" rel="nofollow">MySQL5.6</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204161&amp;idx=2&amp;sn=396b8b16303ecbd5ad6cc29c954bd794&amp;chksm=8ee148edb996c1fbf78b0b9b0a3c20ee0893411750befc8c4ea2348e3042835864abdfe476e7&amp;scene=21#wechat_redirect" rel="nofollow">MySQL5.7</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204139&amp;idx=1&amp;sn=d47b9d7c1e3c079e3a01c217b3641a99&amp;chksm=8ee14707b996ce11548d491da8d036df1497a455511d04d185d02b279db4c6e6cbf6544f5028&amp;scene=21#wechat_redirect" rel="nofollow">MySQL8.0</a></td> <td></td></tr> <tr><td><strong>SPSS</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204582&amp;idx=7&amp;sn=f8b430415b82ee13be914d6f2418d2cd&amp;chksm=8ee1494ab996c05cec07dbff6c2cd45f3f5483932406c340bbad1d54e26ed5e4c430338d45b8&amp;scene=21#wechat_redirect" rel="nofollow">SPSS 22</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204582&amp;idx=8&amp;sn=b930f9cf7bbeed380fbfd90ac447ca86&amp;chksm=8ee1494ab996c05c533577a18421176013ff25209b74ccb65df31032d8cb9a163eef92b245e0&amp;scene=21#wechat_redirect" rel="nofollow">SPSS 23</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203835&amp;idx=3&amp;sn=bda172022c1a0a8e3461b6f04108a6d4&amp;chksm=8ee14657b996cf41974d78c431250b9a33c3848e4952c9cdc6de55c4232a2ae1e268b49b72f2&amp;scene=21#wechat_redirect" rel="nofollow">SPSS 24</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202673&amp;idx=6&amp;sn=a02865f3b28f93e3eb6dcb96208a1d0c&amp;chksm=8ee142ddb996cbcb952952647914a4925284052091966e04c904965acb24aa8c3a840a53f01e&amp;scene=21#wechat_redirect" rel="nofollow">SPSS 25</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204242&amp;idx=3&amp;sn=c95a962380c131c330eb098711846c25&amp;chksm=8ee148beb996c1a8bb1901611770b1d3fb575c1f8593d084b89ad9df35616cf778baf392a96a&amp;scene=21#wechat_redirect" rel="nofollow">SPSS 26</a></td> <td></td></tr> <tr><td><strong>R语言</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204156&amp;idx=2&amp;sn=5b139f29c31bfda30b1d8401493fb646&amp;chksm=8ee14710b996ce06e76ff3fb9ab185f73f376b169cdb3828a956f402c559375e95f1827e7ff8&amp;scene=21#wechat_redirect" rel="nofollow">R语言3.5.1</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204156&amp;idx=1&amp;sn=1e9026b9ce5010ec70a2c59b1c46b9d8&amp;chksm=8ee14710b996ce06d5390f62c63f8e708c49611330ce429a2f9c8cf3c7154eff31b9197687f3&amp;scene=21#wechat_redirect" rel="nofollow">R语言3.6.3</a></td> <td></td></tr> <tr><td><strong>Minitab</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205240&amp;idx=2&amp;sn=894980c9a8bc914eadc3cabb3353b24f&amp;chksm=8ee14cd4b996c5c295506894a1e7a4cc3f34d77830b002859ebb925727d3b1be4f058ff67c9c&amp;scene=21#wechat_redirect" rel="nofollow">Minitab16</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202873&amp;idx=2&amp;sn=ccd87f8c53a01db8384e9fed48210792&amp;chksm=8ee14215b996cb0329617bb20b8e9aed4316a6d30d5585cbf54386ee02963ff36c97dfa69aa8&amp;scene=21#wechat_redirect" rel="nofollow">Minitab17</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202873&amp;idx=1&amp;sn=bcaa32979e2c6cb1db414ad23d7644fe&amp;chksm=8ee14215b996cb0359e91d68dae1f3ea42a36d10a9ec3fe0fb3f9731a559d7059763587172b3&amp;scene=21#wechat_redirect" rel="nofollow">Minitab18</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203973&amp;idx=4&amp;sn=6a1f09447065969cc4d9da275a56c2d6&amp;chksm=8ee147a9b996cebfe005b3d62af7c2d5115ac4f06cbbbdfa9b7f830dba8442119863e3db01ca&amp;scene=21#wechat_redirect" rel="nofollow">Minitab19</a></td> <td></td> <td></td></tr> <tr><td><strong>Python</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=5&amp;sn=29925d9a6e8d84063d611ee6553adf74&amp;chksm=8ee14b82b996c294c47752f7beaf8f7d0b50402a6e9be11ecb741fc0c4d123c21a03d32d38ee&amp;scene=21#wechat_redirect" rel="nofollow">Python2.7.6</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=6&amp;sn=364eff8fcbbc6890b1ac1036cf76dd77&amp;chksm=8ee14b82b996c2940b2227295171b56899a961d6a423386c834651d925ad99b5c9aefea5cd99&amp;scene=21#wechat_redirect" rel="nofollow">Python2.7.10</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=7&amp;sn=2a6e95cf15bd9795d6f1001f4adea8c6&amp;chksm=8ee14b82b996c294c4951d80a8d597164e98c511496daede5b6bb4a843e6670fc6b23ff8c5c2&amp;scene=21#wechat_redirect" rel="nofollow">Python2.7.15</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205038&amp;idx=8&amp;sn=cf1ec699a1fe5033970470b6a8dc174f&amp;chksm=8ee14b82b996c29424b648b372a3a997eec1ce6eab921bbe0ce9d4b63b218c22b956a49fc21d&amp;scene=21#wechat_redirect" rel="nofollow">Python3.5.2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=1&amp;sn=de2a113a637478601a1d8ddb41485f19&amp;chksm=8ee14b60b996c276abf179d3b130e5867f5771b5d5bdc75297dd691669b9696b1bf69e534885&amp;scene=21#wechat_redirect" rel="nofollow">Python3.6.4</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205068&amp;idx=2&amp;sn=bdaad99351a0fe62ccb48cff8ab57aa8&amp;chksm=8ee14b60b996c2766f084d6cdf365e1eeb28ab3ac54dfe0961aec5ca2c934e2bb1030108bad2&amp;scene=21#wechat_redirect" rel="nofollow">Python3.6.6</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203367&amp;idx=1&amp;sn=6272ddb65e17292823c0e1ef23e480ed&amp;chksm=8ee1440bb996cd1dcf7f84726dbb6239a3e9a5c1d3e6b5cef38f364e4dca81226c75c74abf8a&amp;scene=21#wechat_redirect" rel="nofollow">Python3.7.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204120&amp;idx=3&amp;sn=bd409fbad637f46a166e7d4eb8a03961&amp;chksm=8ee14734b996ce220b8e29d273003c9062057259cb1d253d1a460ac9ea8ad98697e8786fcd83&amp;scene=21#wechat_redirect" rel="nofollow">Python3.8.2</a></td> <td></td></tr> <tr><td><strong>Navicat Premium</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204299&amp;idx=8&amp;sn=19aaf5689a8895176149e2832c66b6e2&amp;chksm=8ee14867b996c171bcb7cd4983125769eba45df87d73d3f049cb6b743d75ead7cc9dea5dc146&amp;scene=21#wechat_redirect" rel="nofollow">Navicat15.0</a></td> <td></td> <td></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>⑫理科工具</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>LINGO</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205240&amp;idx=3&amp;sn=e2b30c08686f39b6a7e0eabb5c2daf8f&amp;chksm=8ee14cd4b996c5c256a0eae44d90c1ee83a5c2afc3b71cb9a3fef6c98aa9f7afa876723f48d2&amp;scene=21#wechat_redirect" rel="nofollow">Lingo 8.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205240&amp;idx=4&amp;sn=4208a97c9b2cc192820526e33845a509&amp;chksm=8ee14cd4b996c5c219df8ada35ec2fee0098f975d0e20d6dae7942cb4faf78791e208a6e64db&amp;scene=21#wechat_redirect" rel="nofollow">Lingo 11</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205240&amp;idx=5&amp;sn=c51f2f4c79769517c10c7dd87946d0c8&amp;chksm=8ee14cd4b996c5c2403a0a59f82843a7357ccd7c2468bccc7228a49f9a87d87d66df46f509db&amp;scene=21#wechat_redirect" rel="nofollow">Lingo 12</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204299&amp;idx=7&amp;sn=bb684ea3c61b064230a922cd8edc2d95&amp;chksm=8ee14867b996c1715268a94a472d501055582dc5d6178e663afef12af0bb1aefd5867765d210&amp;scene=21#wechat_redirect" rel="nofollow">Lingo17.0</a></td> <td></td> <td></td></tr> <tr><td><strong>Origin</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203484&amp;idx=5&amp;sn=849ab0cfbba8a78d16f3d6d47c7b5a62&amp;chksm=8ee145b0b996cca6e2c9c19ea8b1e277d4784d128c5aef6879efeadd2d3b387d03105fc3cca7&amp;scene=21#wechat_redirect" rel="nofollow">Origin7.5</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204278&amp;idx=1&amp;sn=f6bec4362f54ef8f541ac7f2b2342e20&amp;chksm=8ee1489ab996c18c8a5d551bbf72f9c01055be1fa81b03f93766bbf2167a88ff1aaca6fc4a68&amp;scene=21#wechat_redirect" rel="nofollow">Origin8.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205446&amp;idx=5&amp;sn=10fc7bd8daa91c0bdc42519a8937fe23&amp;chksm=8ee14deab996c4fc69e837fc086d379b4cab451dba8eb3b76cb1f7173653d22c962aa2fa7a2b&amp;scene=21#wechat_redirect" rel="nofollow">Origin9.1</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205240&amp;idx=6&amp;sn=b0898657fe3b280a5d988d14d3e53a95&amp;chksm=8ee14cd4b996c5c22e6e4052c89e23ef10d6de041df0f3fba1b93d3d6e9cfea88cfbce71b69d&amp;scene=21#wechat_redirect" rel="nofollow">Origin2015</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205240&amp;idx=8&amp;sn=a1df29cda4948c099d18a2b5c3d46901&amp;chksm=8ee14cd4b996c5c2ee3d880fe49b1b102a32c0f87adb40759fbfa2dccb2b609f3661d6410ece&amp;scene=21#wechat_redirect" rel="nofollow">Origin2016</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205240&amp;idx=7&amp;sn=3f232c0313bb94f2d5a2b3796926b579&amp;chksm=8ee14cd4b996c5c28693b5ba49d7f35f3284ea5f9f1486a6aed4af18cec4aa704900eb39e867&amp;scene=21#wechat_redirect" rel="nofollow">Origin2017</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203426&amp;idx=1&amp;sn=b3e7e8aedbd722b26c70cd7d5fa3bc00&amp;chksm=8ee145ceb996ccd846a5d93299fa4ab7425d36541124c75d13c565ca8ddcdd2d8de469fdd63e&amp;scene=21#wechat_redirect" rel="nofollow">Origin201</a><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203426&amp;idx=1&amp;sn=b3e7e8aedbd722b26c70cd7d5fa3bc00&amp;chksm=8ee145ceb996ccd846a5d93299fa4ab7425d36541124c75d13c565ca8ddcdd2d8de469fdd63e&amp;scene=21#wechat_redirect" rel="nofollow">8</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203973&amp;idx=5&amp;sn=01d1218c729c90106bab02f91d8301d2&amp;chksm=8ee147a9b996cebf0f18c537ba9226888d13021dc210cf575244291ac4b191e14a1ca42d1fff&amp;scene=21#wechat_redirect" rel="nofollow">Origin2019</a></td> <td></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><strong>Mathematica</strong></th> <th></th></tr></thead> <tbody><tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202790&amp;idx=6&amp;sn=25a00cbe4c2b71ad87465c2e54b086a5&amp;chksm=8ee1424ab996cb5cad344efc7960820af7ba8486eadf5f0a3767dbfffbfeefb53accf8b405c6&amp;scene=21#wechat_redirect" rel="nofollow">Mathematica8.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202790&amp;idx=5&amp;sn=eea802c7150f18273b596a52aae17b41&amp;chksm=8ee1424ab996cb5c4a3cc3d86d20f93bf1233938ab93c73580bdba8da18526cc7bdf5b59e19c&amp;scene=21#wechat_redirect" rel="nofollow">Mathematica9.0</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202790&amp;idx=4&amp;sn=6b22a26e6b5d78b63e263c06f26695e4&amp;chksm=8ee1424ab996cb5c6736523cfdc263df316b7f7f852b7dac2ba41a5e71541ea88382d433d3b1&amp;scene=21#wechat_redirect" rel="nofollow">Mathematica10.3</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202790&amp;idx=3&amp;sn=ec072e3fa5ddcfd9c7e3b4a56811d72e&amp;chksm=8ee1424ab996cb5c929fa971bd0fd4bffb6a8254c08bca99b6645ad993219ea2b1a778c6acfd&amp;scene=21#wechat_redirect" rel="nofollow">Mathematica11.1</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202790&amp;idx=2&amp;sn=62a99ef9e2b2ccd2601f1e2ac8f5e32e&amp;chksm=8ee1424ab996cb5c3a1a81b90c2ffc363fe128ff1e46b22c6307d650913b420a6058a804c3a0&amp;scene=21#wechat_redirect" rel="nofollow">Mathematica11.2</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202790&amp;idx=1&amp;sn=5c0cd0a5341acd66b4f9a1841d73623c&amp;chksm=8ee1424ab996cb5cc49fa8397a4d0af678e3cd6d271366da5ce781951285eeee9e41b860ea1f&amp;scene=21#wechat_redirect" rel="nofollow">Mathematica11.3</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650204299&amp;idx=5&amp;sn=1568e170a6ab3b2e272bb05ef50b4677&amp;chksm=8ee14867b996c1716f70cf611eb0e0e8bc3dcf418d948add974cba64879f838989c9e915b59e&amp;scene=21#wechat_redirect" rel="nofollow">Mathematica12.0</a></td> <td></td></tr></tbody></table></div> <div class="table-box"><table><thead><tr><th><mark><strong>⑬虚拟机</strong></mark></th> <th></th> <th></th></tr></thead> <tbody><tr><td><strong>VMware</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203763&amp;idx=5&amp;sn=79770b0a4de46cbd0af1b6dc742d5e55&amp;chksm=8ee1469fb996cf891a3c515d55fa095cbf064bdbf69dffd0e16117710f595a210f9381fae7a6&amp;scene=21#wechat_redirect" rel="nofollow">VMware8</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203763&amp;idx=4&amp;sn=8b56557a6111fb48a7a6ad365743f162&amp;chksm=8ee1469fb996cf89cc5a9978ddd8bd47b24db2096bff4068d2d32f778200fdd08180ed300085&amp;scene=21#wechat_redirect" rel="nofollow">VMware11</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203763&amp;idx=3&amp;sn=9d8e69ad09055763033500f312a086ec&amp;chksm=8ee1469fb996cf897f942ed3d1773b60d5aaf08e7dd4335a35c6549e58859b5bb2b0b4366118&amp;scene=21#wechat_redirect" rel="nofollow">VMware12</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203763&amp;idx=2&amp;sn=ffaa91c9cefe4c2e274d9f2e302b7389&amp;chksm=8ee1469fb996cf89223396736aef14343a1ac90a2895275158dae6f5f19a57f7693c079619b5&amp;scene=21#wechat_redirect" rel="nofollow">VMware14</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650203763&amp;idx=1&amp;sn=c2329ab556bf560ea1a9b8951b8aa093&amp;chksm=8ee1469fb996cf89fa08790b3bdae9cd8a55c10b16f65f7addfb7065922f1f485aec45467294&amp;scene=21#wechat_redirect" rel="nofollow">VMware15</a></td> <td></td></tr> <tr><td><strong>Linux系统（虚拟机里安装）</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205343&amp;idx=1&amp;sn=406462e931cbd9345f7bd2305568b908&amp;chksm=8ee14c73b996c5658d64054960d704a8a6c3cdd3b05667ccb5fba65b48fbbffa5c9c7575bbf7&amp;scene=21#wechat_redirect" rel="nofollow">Ubuntu18.0</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205343&amp;idx=2&amp;sn=08c387f6ee6ac2ba25791551c2dd0d76&amp;chksm=8ee14c73b996c5659bff36b77d1219342f0c60c3f41ad235b505793e3b925188305814641dfe&amp;scene=21#wechat_redirect" rel="nofollow">Deepin15.7</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205343&amp;idx=3&amp;sn=eb6d2d5d1cc19b52746c21347e45a36e&amp;chksm=8ee14c73b996c5654e0a9cd847bd4aadd7ade71e0e47d8654ffc48d587f22258f28ec50af5b9&amp;scene=21#wechat_redirect" rel="nofollow">CentOS7</a></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205343&amp;idx=4&amp;sn=3f7ff43441c8d4089724bae3a3c8d1e8&amp;chksm=8ee14c73b996c5658e757cf2ff21baeed9152bcfc680acea0dc44efc5e54ed31dc54a356dcd3&amp;scene=21#wechat_redirect" rel="nofollow">RHEL7</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205343&amp;idx=5&amp;sn=e23482022e01cde99c510f0bf3bb9a76&amp;chksm=8ee14c73b996c56562ffa3452c669831fbbed19e53d7386516418b918c0f1f5387789e856650&amp;scene=21#wechat_redirect" rel="nofollow">openSUSE</a></td> <td></td></tr> <tr><td><strong>MacOS系统（虚拟机里安装）</strong></td> <td></td> <td></td></tr> <tr><td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205343&amp;idx=8&amp;sn=adf49ad7e7853a0cf38ff938462c3a1c&amp;chksm=8ee14c73b996c565260f521e957844dec062f0b2324e2fca3461155282980789a69b962dd8f2&amp;scene=21#wechat_redirect" rel="nofollow">MacOS10.12</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205343&amp;idx=7&amp;sn=f0230e77429e81e5229622d74dd3c7f9&amp;chksm=8ee14c73b996c56589e9a141078e73efaef6f1e1cc70998ee32f520a67ae66e6d75820242b99&amp;scene=21#wechat_redirect" rel="nofollow">MacOS10.13</a></td> <td><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650205343&amp;idx=6&amp;sn=c448dfd42605b97fbd239036e0437e8f&amp;chksm=8ee14c73b996c56596ec0d31d7956287ec012b8cadfeff579ce05a17659de56c4cc2e847a7f3&amp;scene=21#wechat_redirect" rel="nofollow">MacOS10.14</a></td></tr></tbody></table></div></div> <h3 id="音乐福利-新增"><a href="#音乐福利-新增" aria-hidden="true" class="header-anchor">#</a> 音乐福利(新增)</h3> <p>​    <a href="/views/Software/music.html" class>酷我音乐破解版</a></p> <h3 id="评论留言"><a href="#评论留言" aria-hidden="true" class="header-anchor">#</a> 评论留言</h3></div>
]]></content>
  </entry>
</search>
